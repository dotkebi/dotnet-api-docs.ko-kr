<Type Name="Graphics" FullName="System.Drawing.Graphics">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3d23c3606f145c2114ec9a754cb959c07da47b20" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56793853" /></Metadata><TypeSignature Language="C#" Value="public sealed class Graphics : MarshalByRefObject, IDisposable, System.Drawing.IDeviceContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Graphics extends System.MarshalByRefObject implements class System.Drawing.IDeviceContext, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Graphics" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Graphics&#xA;Inherits MarshalByRefObject&#xA;Implements IDeviceContext, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Graphics sealed : MarshalByRefObject, IDisposable, System::Drawing::IDeviceContext" />
  <TypeSignature Language="F#" Value="type Graphics = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable&#xA;    interface IDeviceContext" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Drawing.IDeviceContext</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="db630-101">GDI+ 그리기 화면을 캡슐화합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-101">Encapsulates a GDI+ drawing surface.</span></span> <span data-ttu-id="db630-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-103"><xref:System.Drawing.Graphics> 클래스는 표시 디바이스에 개체를 그리기 위한 메서드를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-103">The <xref:System.Drawing.Graphics> class provides methods for drawing objects to the display device.</span></span> <span data-ttu-id="db630-104"><xref:System.Drawing.Graphics> 특정 디바이스 컨텍스트를 사용 하 여 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-104">A <xref:System.Drawing.Graphics> is associated with a specific device context.</span></span>  
  
 <span data-ttu-id="db630-105">가져올 수 있습니다는 <xref:System.Drawing.Graphics> 호출 하 여 개체를 <xref:System.Windows.Forms.Control.CreateGraphics%2A?displayProperty=nameWithType> 에서 상속 되는 개체의 메서드를 <xref:System.Windows.Forms.Control?displayProperty=nameWithType>, 또는 컨트롤의 처리 하 여 <xref:System.Windows.Forms.Control.Paint?displayProperty=nameWithType> 이벤트 및 액세스를 <xref:System.Windows.Forms.PaintEventArgs.Graphics%2A> 속성을 <xref:System.Windows.Forms.PaintEventArgs?displayProperty=nameWithType> 클래스.</span><span class="sxs-lookup"><span data-stu-id="db630-105">You can obtain a <xref:System.Drawing.Graphics> object by calling the <xref:System.Windows.Forms.Control.CreateGraphics%2A?displayProperty=nameWithType> method on an object that inherits from <xref:System.Windows.Forms.Control?displayProperty=nameWithType>, or by handling a control's <xref:System.Windows.Forms.Control.Paint?displayProperty=nameWithType> event and accessing the <xref:System.Windows.Forms.PaintEventArgs.Graphics%2A> property of the <xref:System.Windows.Forms.PaintEventArgs?displayProperty=nameWithType> class.</span></span> <span data-ttu-id="db630-106">만들 수도 있습니다는 <xref:System.Drawing.Graphics> 를 사용 하 여 이미지에서 개체를 <xref:System.Drawing.Graphics.FromImage%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="db630-106">You can also create a <xref:System.Drawing.Graphics> object from an image by using the <xref:System.Drawing.Graphics.FromImage%2A> method.</span></span> <span data-ttu-id="db630-107">만들기에 대 한 자세한 내용은 <xref:System.Drawing.Graphics> 개체를 참조 하십시오 [방법: 그리는 데 필요한 그래픽 개체 만들기](~/docs/framework/winforms/advanced/how-to-create-graphics-objects-for-drawing.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-107">For more information about creating a <xref:System.Drawing.Graphics> object, see [How to: Create Graphics Objects for Drawing](~/docs/framework/winforms/advanced/how-to-create-graphics-objects-for-drawing.md).</span></span>  
  
 <span data-ttu-id="db630-108">사용 하 여 여러 다른 셰이프 및 줄을 그릴 수 있습니다는 <xref:System.Drawing.Graphics> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-108">You can draw many different shapes and lines by using a <xref:System.Drawing.Graphics> object.</span></span> <span data-ttu-id="db630-109">특정 참조 선과 도형 그리기 하는 방법에 대 한 자세한 내용은 `Draw` *그리려는* 줄 또는 도형을 그릴 메서드.</span><span class="sxs-lookup"><span data-stu-id="db630-109">For more information about how to draw lines and shapes, see the specific `Draw`*GraphicalElement* method for the line or shape you want to draw.</span></span> <span data-ttu-id="db630-110">이러한 메서드를 포함 <xref:System.Drawing.Graphics.DrawLine%2A>, <xref:System.Drawing.Graphics.DrawArc%2A>를 <xref:System.Drawing.Graphics.DrawClosedCurve%2A>합니다 <xref:System.Drawing.Graphics.DrawPolygon%2A>, 및 <xref:System.Drawing.Graphics.DrawRectangle%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-110">These methods include <xref:System.Drawing.Graphics.DrawLine%2A>, <xref:System.Drawing.Graphics.DrawArc%2A>, <xref:System.Drawing.Graphics.DrawClosedCurve%2A>, <xref:System.Drawing.Graphics.DrawPolygon%2A>, and <xref:System.Drawing.Graphics.DrawRectangle%2A>.</span></span> <span data-ttu-id="db630-111">선과 도형 그리기 하는 방법에 대 한 자세한 내용은 참조 하세요. [선 그리기 및 도형에 펜을 사용 하 여](~/docs/framework/winforms/advanced/using-a-pen-to-draw-lines-and-shapes.md) 하 고 [셰이프를 입력 하는 브러시를 사용 하 여](~/docs/framework/winforms/advanced/using-a-brush-to-fill-shapes.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-111">For more information about how to draw lines and shapes, see [Using a Pen to Draw Lines and Shapes](~/docs/framework/winforms/advanced/using-a-pen-to-draw-lines-and-shapes.md) and [Using a Brush to Fill Shapes](~/docs/framework/winforms/advanced/using-a-brush-to-fill-shapes.md).</span></span>  
  
 <span data-ttu-id="db630-112">사용 하 여 이미지 및 아이콘을 그릴 수도 있습니다는 <xref:System.Drawing.Graphics.DrawImage%2A> 고 <xref:System.Drawing.Graphics.DrawIcon%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="db630-112">You can also draw images and icons by using the <xref:System.Drawing.Graphics.DrawImage%2A> and <xref:System.Drawing.Graphics.DrawIcon%2A> methods, respectively.</span></span> <span data-ttu-id="db630-113">그리기 화면을 화면에서 색 데이터 비트 블록 전송을 수행 하는 <xref:System.Drawing.Graphics> 개체를 참조 하십시오 <xref:System.Drawing.Graphics.CopyFromScreen%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-113">To perform a bit-block transfer of color data from the screen to the drawing surface of the <xref:System.Drawing.Graphics> object, see <xref:System.Drawing.Graphics.CopyFromScreen%2A>.</span></span> <span data-ttu-id="db630-114">사용 하 여 이미지를 그리는 방법에 대 한 자세한 내용은 <xref:System.Drawing.Graphics> 개체를 참조 하십시오 [이미지, 비트맵, 아이콘 및 메타 파일을 사용 하 여 작업](~/docs/framework/winforms/advanced/working-with-images-bitmaps-icons-and-metafiles.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-114">For more information about how to draw images with a <xref:System.Drawing.Graphics> object, see [Working with Images, Bitmaps, Icons, and Metafiles](~/docs/framework/winforms/advanced/working-with-images-bitmaps-icons-and-metafiles.md).</span></span>  
  
 <span data-ttu-id="db630-115">또한에서 사용 하는 좌표계를 조작할 수 있습니다는 <xref:System.Drawing.Graphics> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-115">In addition, you can manipulate the coordinate system used by the <xref:System.Drawing.Graphics> object.</span></span> <span data-ttu-id="db630-116">좌표계 및 조작 하는 방법에 대 한 자세한 내용은 참조 하세요. [좌표계 및 변형](~/docs/framework/winforms/advanced/coordinate-systems-and-transformations.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-116">For more information on the coordinate system and how to manipulate it, see [Coordinate Systems and Transformations](~/docs/framework/winforms/advanced/coordinate-systems-and-transformations.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-117">다음 코드 예제는 Windows Forms를 사용 하 여 용도로 설계 하며를 <xref:System.Windows.Forms.PaintEventArgs> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-117">The following code example is designed for use with Windows Forms and requires a <xref:System.Windows.Forms.PaintEventArgs> object.</span></span> <span data-ttu-id="db630-118">합니다 <xref:System.Windows.Forms.PaintEventArgs> 개체의 이름은 `e` 매개 변수 이며는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-118">The <xref:System.Windows.Forms.PaintEventArgs> object is named `e` and is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-119">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-119">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-120">JPEG 파일에서 이미지를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-120">Creates an image from a JPEG file.</span></span> <span data-ttu-id="db630-121">예제 이름은 파일과 예제 폴더에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-121">The file is named SampImag.jpg and is located in the folder of the example.</span></span>  
  
-   <span data-ttu-id="db630-122">이미지의 왼쪽 위 모퉁이 그릴 점을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-122">Creates a point at which to draw the upper-left corner of the image.</span></span>  
  
-   <span data-ttu-id="db630-123">실제 크기의 이미지를 사용 하 여 화면에 그릴를 <xref:System.Drawing.Graphics> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-123">Draws the unscaled image to the screen by using a <xref:System.Drawing.Graphics> object.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#40](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#40)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#40)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#40)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/162861f9-f050-445e-8abb-b2c43a918b8b"><span data-ttu-id="db630-124">방법: 그리는 데 필요한 그래픽 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="db630-124">How to: Create Graphics Objects for Drawing</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/eb0f6d6f-9e52-4167-9592-ff4b82fb5869"><span data-ttu-id="db630-125">그래픽 프로그래밍 시작</span><span class="sxs-lookup"><span data-stu-id="db630-125">Getting Started with Graphics Programming</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/6207cad1-7a34-4bd6-bfc1-db823ca7a73e"><span data-ttu-id="db630-126">Graphics 개체의 상태 관리</span><span class="sxs-lookup"><span data-stu-id="db630-126">Managing the State of a Graphics Object</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="AddMetafileComment">
      <MemberSignature Language="C#" Value="public void AddMetafileComment (byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMetafileComment(unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.AddMetafileComment(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMetafileComment (data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMetafileComment(cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.AddMetafileComment : byte[] -&gt; unit" Usage="graphics.AddMetafileComment data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="db630-127">주석을 포함한 바이트의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-127">Array of bytes that contains the comment.</span></span></param>
        <summary><span data-ttu-id="db630-128">현재 <see cref="T:System.Drawing.Imaging.Metafile" />에 주석을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-128">Adds a comment to the current <see cref="T:System.Drawing.Imaging.Metafile" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-129">이 메서드는이 경우에 유효 <xref:System.Drawing.Graphics> 과 연관 된 <xref:System.Drawing.Imaging.Metafile>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-129">This method is valid only if this <xref:System.Drawing.Graphics> is associated with a <xref:System.Drawing.Imaging.Metafile>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-130">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수인를 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기 뿐만 `thisForm`, <xref:System.Windows.Forms.Form> 예입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-130">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler, as well as `thisForm`, the <xref:System.Windows.Forms.Form> for the example.</span></span> <span data-ttu-id="db630-131">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-131">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-132">임시 만듭니다 <xref:System.Drawing.Graphics> 메타 파일을 가져옵니다 작성용는 `hdc`, 해당 디바이스 컨텍스트에 대 한 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-132">Creates a temporary <xref:System.Drawing.Graphics> for creating the metafile and gets an `hdc`, a handle to its device context.</span></span>  
  
-   <span data-ttu-id="db630-133">사용 하 여 새 메타 파일을 만듭니다는 `hdc`합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-133">Creates a new metafile using the `hdc`.</span></span>  
  
-   <span data-ttu-id="db630-134">만듭니다는 <xref:System.Drawing.Graphics> 에서 메타 파일의 표시를 <xref:System.Drawing.Imaging.Metafile>입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-134">Creates a <xref:System.Drawing.Graphics> for display of the metafile from the <xref:System.Drawing.Imaging.Metafile>.</span></span>  
  
-   <span data-ttu-id="db630-135">메타 파일에 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-135">Draws a rectangle to the metafile.</span></span>  
  
-   <span data-ttu-id="db630-136">메타 파일에 메모를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-136">Adds a comment to the metafile.</span></span>  
  
-   <span data-ttu-id="db630-137">삭제 된 <xref:System.Drawing.Graphics> 메타 파일 닫습니다 메타 파일에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-137">Disposes the <xref:System.Drawing.Graphics> for the metafile-which closes the metafile.</span></span>  
  
-   <span data-ttu-id="db630-138">메타 파일을 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-138">Disposes the metafile.</span></span>  
  
-   <span data-ttu-id="db630-139">임시 해제 `hdc`합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-139">Releases the temporary `hdc`.</span></span>  
  
-   <span data-ttu-id="db630-140">임시 삭제 <xref:System.Drawing.Graphics>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-140">Disposes the temporary <xref:System.Drawing.Graphics>.</span></span>  
  
-   <span data-ttu-id="db630-141">이전에 만든된 파일에서 두 번째 메타 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-141">Creates a second metafile from the previously created file.</span></span>  
  
-   <span data-ttu-id="db630-142">화면에 메타 파일을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-142">Draws the metafile to the screen.</span></span>  
  
-   <span data-ttu-id="db630-143">메타 파일을 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-143">Disposes the metafile.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginContainer">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db630-144">그래픽 컨테이너를 이 <see cref="T:System.Drawing.Graphics" />의 현재 상태로 저장하고 새 그래픽 컨테이너를 열어 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-144">Saves a graphics container with the current state of this <see cref="T:System.Drawing.Graphics" /> and opens and uses a new graphics container.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginContainer">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.GraphicsContainer BeginContainer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Drawing2D.GraphicsContainer BeginContainer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.BeginContainer" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginContainer () As GraphicsContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Drawing2D::GraphicsContainer ^ BeginContainer();" />
      <MemberSignature Language="F#" Value="member this.BeginContainer : unit -&gt; System.Drawing.Drawing2D.GraphicsContainer" Usage="graphics.BeginContainer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.GraphicsContainer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="db630-145">그래픽 컨테이너를 이 <see cref="T:System.Drawing.Graphics" />의 현재 상태로 저장하고 새 그래픽 컨테이너를 열어 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-145">Saves a graphics container with the current state of this <see cref="T:System.Drawing.Graphics" /> and opens and uses a new graphics container.</span></span></summary>
        <returns><span data-ttu-id="db630-146">이 메서드는 호출되었을 때 이 <see cref="T:System.Drawing.Graphics" />의 상태를 나타내는 <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-146">This method returns a <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" /> that represents the state of this <see cref="T:System.Drawing.Graphics" /> at the time of the method call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-147">이 메서드를 사용 합니다 <xref:System.Drawing.Graphics.EndContainer%2A> 중첩 된 graphics 컨테이너를 만드는 방법.</span><span class="sxs-lookup"><span data-stu-id="db630-147">Use this method with the <xref:System.Drawing.Graphics.EndContainer%2A> method to create nested graphics containers.</span></span> <span data-ttu-id="db630-148">Graphics 컨테이너에는 변환, 클리핑 영역 및 렌더링 속성과 같은 그래픽 상태를 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-148">Graphics containers retain graphics state, such as transformation, clipping region, and rendering properties.</span></span>  
  
 <span data-ttu-id="db630-149">호출 하는 경우는 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드를 <xref:System.Drawing.Graphics>, 상태를 포함 하는 정보 블록이 <xref:System.Drawing.Graphics> 스택에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-149">When you call the <xref:System.Drawing.Graphics.BeginContainer%2A> method of a <xref:System.Drawing.Graphics>, an information block that holds the state of the <xref:System.Drawing.Graphics> is put on a stack.</span></span> <span data-ttu-id="db630-150">합니다 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드가 반환 되는 <xref:System.Drawing.Drawing2D.GraphicsContainer> 정보 블록을 식별 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-150">The <xref:System.Drawing.Graphics.BeginContainer%2A> method returns a <xref:System.Drawing.Drawing2D.GraphicsContainer> that identifies that information block.</span></span> <span data-ttu-id="db630-151">식별 하는 개체를 전달 하는 경우는 <xref:System.Drawing.Graphics.EndContainer%2A> 메서드 정보 블록 스택에서 제거 되 고 복원 하는 데 사용 되는 <xref:System.Drawing.Graphics> 당시 시점의 상태로 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-151">When you pass the identifying object to the <xref:System.Drawing.Graphics.EndContainer%2A> method, the information block is removed from the stack and is used to restore the <xref:System.Drawing.Graphics> to the state it was in at the time of the <xref:System.Drawing.Graphics.BeginContainer%2A> method call.</span></span>  
  
 <span data-ttu-id="db630-152">컨테이너는 중첩 될 수 있습니다. 즉, 호출할 수 있습니다 합니다 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드를 호출 하기 전에 여러 번의 <xref:System.Drawing.Graphics.EndContainer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="db630-152">Containers can be nested; that is, you can call the <xref:System.Drawing.Graphics.BeginContainer%2A> method several times before you call the <xref:System.Drawing.Graphics.EndContainer%2A> method.</span></span> <span data-ttu-id="db630-153">호출할 때마다 합니다 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드 정보 블록을 스택에 배치 되 고 수신 하는 <xref:System.Drawing.Drawing2D.GraphicsContainer> 정보 블록에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-153">Each time you call the <xref:System.Drawing.Graphics.BeginContainer%2A> method, an information block is put on the stack, and you receive a <xref:System.Drawing.Drawing2D.GraphicsContainer> for the information block.</span></span> <span data-ttu-id="db630-154">해당 개체를 하나 전달 하는 경우는 <xref:System.Drawing.Graphics.EndContainer%2A> 메서드를를 <xref:System.Drawing.Graphics> 당시 시점의 상태로 반환 됩니다 합니다 <xref:System.Drawing.Graphics.BeginContainer%2A> 는 특정 반환 하는 메서드 호출 <xref:System.Drawing.Drawing2D.GraphicsContainer>.</span><span class="sxs-lookup"><span data-stu-id="db630-154">When you pass one of those objects to the <xref:System.Drawing.Graphics.EndContainer%2A> method, the <xref:System.Drawing.Graphics> is returned to the state it was in at the time of the <xref:System.Drawing.Graphics.BeginContainer%2A> method call that returned that particular <xref:System.Drawing.Drawing2D.GraphicsContainer>.</span></span> <span data-ttu-id="db630-155">정보 블록에서 스택에 배치 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드 호출 스택에서 제거 되 고 그 후 해당 스택에 배치 하는 모든 정보 블록 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드 호출도 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-155">The information block placed on the stack by that <xref:System.Drawing.Graphics.BeginContainer%2A> method call is removed from the stack, and all information blocks placed on that stack after that <xref:System.Drawing.Graphics.BeginContainer%2A> method call are also removed.</span></span>  
  
 <span data-ttu-id="db630-156">에 대 한 호출을 <xref:System.Drawing.Graphics.Save%2A> 메서드 호출 스택의 동일 위치 정보 블록을 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="db630-156">Calls to the <xref:System.Drawing.Graphics.Save%2A> method place information blocks on the same stack as calls to the <xref:System.Drawing.Graphics.BeginContainer%2A> method.</span></span> <span data-ttu-id="db630-157">처럼를 <xref:System.Drawing.Graphics.EndContainer%2A> 메서드 호출을 이룹니다를 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드 호출을 <xref:System.Drawing.Graphics.Restore%2A> 메서드 호출을 이룹니다를 <xref:System.Drawing.Graphics.Save%2A> 메서드 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-157">Just as an <xref:System.Drawing.Graphics.EndContainer%2A> method call is paired with a <xref:System.Drawing.Graphics.BeginContainer%2A> method call, a <xref:System.Drawing.Graphics.Restore%2A> method call is paired with a <xref:System.Drawing.Graphics.Save%2A> method call.</span></span>  
  
 <span data-ttu-id="db630-158">호출 하는 경우는 <xref:System.Drawing.Graphics.EndContainer%2A> 메서드를 스택에 배치 된 모든 정보 블록 (여는 <xref:System.Drawing.Graphics.Save%2A> 메서드 또는 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드) 해당 호출 후는 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드 스택에서 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-158">When you call the <xref:System.Drawing.Graphics.EndContainer%2A> method, all information blocks placed on the stack (by the <xref:System.Drawing.Graphics.Save%2A> method or by the <xref:System.Drawing.Graphics.BeginContainer%2A> method) after the corresponding call to the <xref:System.Drawing.Graphics.BeginContainer%2A> method are removed from the stack.</span></span> <span data-ttu-id="db630-159">마찬가지로 호출 하는 경우는 <xref:System.Drawing.Graphics.Restore%2A> 메서드를 스택에 배치 된 모든 정보 블록 (여는 <xref:System.Drawing.Graphics.Save%2A> 메서드 또는 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드) 해당 호출 후는 <xref:System.Drawing.Graphics.Save%2A> 메서드 스택에서 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-159">Likewise, when you call the <xref:System.Drawing.Graphics.Restore%2A> method, all information blocks placed on the stack (by the <xref:System.Drawing.Graphics.Save%2A> method or by the <xref:System.Drawing.Graphics.BeginContainer%2A> method) after the corresponding call to the <xref:System.Drawing.Graphics.Save%2A> method are removed from the stack.</span></span>  
  
 <span data-ttu-id="db630-160">설정 된 그래픽 상태는 <xref:System.Drawing.Graphics.BeginContainer%2A> 렌더링 품질을 기본 그래픽 상태를 포함 하는 메서드; 메서드를 호출 하는 경우 기존 렌더링 품질 상태 변경 내용은 기본값으로 다시 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-160">The graphics state established by the <xref:System.Drawing.Graphics.BeginContainer%2A> method includes the rendering qualities of the default graphics state; any rendering-quality state changes existing when the method is called are reset to the default values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-161">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-161">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-162">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-162">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-163">새 그래픽 컨테이너를 열고 이전 컨테이너를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-163">Opens a new graphics container and saves the old container.</span></span>  
  
-   <span data-ttu-id="db630-164">컨테이너에서 세계 좌표를 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-164">Translates the world coordinates in the container.</span></span>  
  
-   <span data-ttu-id="db630-165">빨간색 사각형을 채우는 (의 좌표를 변환 합니다) 새 컨테이너입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-165">Fills a red rectangle in the (translated coordinates of the) new container.</span></span>  
  
-   <span data-ttu-id="db630-166">새 컨테이너를 닫고 저장된 된 컨테이너를 복원 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-166">Closes the new container and restores the saved container.</span></span>  
  
-   <span data-ttu-id="db630-167">저장된 된 컨테이너의 녹색 사각형 (변환된 된 좌표)을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-167">Fills a green rectangle (to the untranslated coordinates) of the saved container.</span></span>  
  
 <span data-ttu-id="db630-168">결과 동일한 크기의 빨간색 사각형 위에 놓입니다 녹색 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-168">The result is a green rectangle that overlies a red rectangle of the same size.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginContainer">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.GraphicsContainer BeginContainer (System.Drawing.Rectangle dstrect, System.Drawing.Rectangle srcrect, System.Drawing.GraphicsUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Drawing2D.GraphicsContainer BeginContainer(valuetype System.Drawing.Rectangle dstrect, valuetype System.Drawing.Rectangle srcrect, valuetype System.Drawing.GraphicsUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginContainer (dstrect As Rectangle, srcrect As Rectangle, unit As GraphicsUnit) As GraphicsContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Drawing2D::GraphicsContainer ^ BeginContainer(System::Drawing::Rectangle dstrect, System::Drawing::Rectangle srcrect, System::Drawing::GraphicsUnit unit);" />
      <MemberSignature Language="F#" Value="member this.BeginContainer : System.Drawing.Rectangle * System.Drawing.Rectangle * System.Drawing.GraphicsUnit -&gt; System.Drawing.Drawing2D.GraphicsContainer" Usage="graphics.BeginContainer (dstrect, srcrect, unit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.GraphicsContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dstrect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcrect" Type="System.Drawing.Rectangle" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
      </Parameters>
      <Docs>
        <param name="dstrect"><span data-ttu-id="db630-169"><paramref name="srcrect" /> 매개 변수로 컨테이너의 크기 조정 변환을 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-169"><see cref="T:System.Drawing.Rectangle" /> structure that, together with the <paramref name="srcrect" /> parameter, specifies a scale transformation for the container.</span></span></param>
        <param name="srcrect"><span data-ttu-id="db630-170"><paramref name="dstrect" /> 매개 변수로 컨테이너의 크기 조정 변환을 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-170"><see cref="T:System.Drawing.Rectangle" /> structure that, together with the <paramref name="dstrect" /> parameter, specifies a scale transformation for the container.</span></span></param>
        <param name="unit"><span data-ttu-id="db630-171">컨테이너의 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-171">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure for the container.</span></span></param>
        <summary><span data-ttu-id="db630-172">그래픽 컨테이너를 이 <see cref="T:System.Drawing.Graphics" />의 현재 상태로 저장하고 지정된 크기 조정 변환으로 새 그래픽 컨테이너를 열어 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-172">Saves a graphics container with the current state of this <see cref="T:System.Drawing.Graphics" /> and opens and uses a new graphics container with the specified scale transformation.</span></span></summary>
        <returns><span data-ttu-id="db630-173">이 메서드는 호출되었을 때 이 <see cref="T:System.Drawing.Graphics" />의 상태를 나타내는 <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-173">This method returns a <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" /> that represents the state of this <see cref="T:System.Drawing.Graphics" /> at the time of the method call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-174">이 메서드를 사용 합니다 <xref:System.Drawing.Graphics.EndContainer%2A> 중첩 된 graphics 컨테이너를 만드는 방법.</span><span class="sxs-lookup"><span data-stu-id="db630-174">Use this method with the <xref:System.Drawing.Graphics.EndContainer%2A> method to create nested graphics containers.</span></span> <span data-ttu-id="db630-175">Graphics 컨테이너에는 변환, 클리핑 영역 및 렌더링 속성과 같은 그래픽 상태를 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-175">Graphics containers retain graphics state, such as transformation, clipping region, and rendering properties.</span></span>  
  
 <span data-ttu-id="db630-176">호출 하는 경우는 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드를 <xref:System.Drawing.Graphics>, 상태를 포함 하는 정보 블록이 <xref:System.Drawing.Graphics> 스택에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-176">When you call the <xref:System.Drawing.Graphics.BeginContainer%2A> method of a <xref:System.Drawing.Graphics>, an information block that holds the state of the <xref:System.Drawing.Graphics> is put on a stack.</span></span> <span data-ttu-id="db630-177">합니다 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드가 반환 되는 <xref:System.Drawing.Drawing2D.GraphicsContainer> 정보 블록을 식별 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-177">The <xref:System.Drawing.Graphics.BeginContainer%2A> method returns a <xref:System.Drawing.Drawing2D.GraphicsContainer> that identifies that information block.</span></span> <span data-ttu-id="db630-178">식별 하는 개체를 전달 하는 경우는 <xref:System.Drawing.Graphics.EndContainer%2A> 메서드 정보 블록 스택에서 제거 되 고 복원 하는 데 사용 되는 <xref:System.Drawing.Graphics> 당시 시점의 상태로 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-178">When you pass the identifying object to the <xref:System.Drawing.Graphics.EndContainer%2A> method, the information block is removed from the stack and is used to restore the <xref:System.Drawing.Graphics> to the state it was in at the time of the <xref:System.Drawing.Graphics.BeginContainer%2A> method call.</span></span>  
  
 <span data-ttu-id="db630-179">컨테이너는 중첩 될 수 있습니다. 즉, 호출할 수 있습니다 합니다 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드를 호출 하기 전에 여러 번의 <xref:System.Drawing.Graphics.EndContainer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="db630-179">Containers can be nested; that is, you can call the <xref:System.Drawing.Graphics.BeginContainer%2A> method several times before you call the <xref:System.Drawing.Graphics.EndContainer%2A> method.</span></span> <span data-ttu-id="db630-180">호출할 때마다 합니다 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드 정보 블록을 스택에 배치 되 고 수신 하는 <xref:System.Drawing.Drawing2D.GraphicsContainer> 정보 블록에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-180">Each time you call the <xref:System.Drawing.Graphics.BeginContainer%2A> method, an information block is put on the stack, and you receive a <xref:System.Drawing.Drawing2D.GraphicsContainer> for the information block.</span></span> <span data-ttu-id="db630-181">해당 개체를 하나 전달 하는 경우는 <xref:System.Drawing.Graphics.EndContainer%2A> 메서드를를 <xref:System.Drawing.Graphics> 당시 시점의 상태로 반환 됩니다 합니다 <xref:System.Drawing.Graphics.BeginContainer%2A> 는 특정 반환 하는 메서드 호출 <xref:System.Drawing.Drawing2D.GraphicsContainer>.</span><span class="sxs-lookup"><span data-stu-id="db630-181">When you pass one of those objects to the <xref:System.Drawing.Graphics.EndContainer%2A> method, the <xref:System.Drawing.Graphics> is returned to the state it was in at the time of the <xref:System.Drawing.Graphics.BeginContainer%2A> method call that returned that particular <xref:System.Drawing.Drawing2D.GraphicsContainer>.</span></span> <span data-ttu-id="db630-182">정보 블록에서 스택에 배치 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드 호출 스택에서 제거 되 고 그 후 해당 스택에 배치 하는 모든 정보 블록 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드 호출도 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-182">The information block placed on the stack by that <xref:System.Drawing.Graphics.BeginContainer%2A> method call is removed from the stack, and all information blocks placed on that stack after that <xref:System.Drawing.Graphics.BeginContainer%2A> method call are also removed.</span></span>  
  
 <span data-ttu-id="db630-183">에 대 한 호출을 <xref:System.Drawing.Graphics.Save%2A> 메서드 호출 스택의 동일 위치 정보 블록을 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="db630-183">Calls to the <xref:System.Drawing.Graphics.Save%2A> method place information blocks on the same stack as calls to the <xref:System.Drawing.Graphics.BeginContainer%2A> method.</span></span> <span data-ttu-id="db630-184">처럼를 <xref:System.Drawing.Graphics.EndContainer%2A> 메서드 호출을 이룹니다를 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드 호출을 <xref:System.Drawing.Graphics.Restore%2A> 메서드 호출을 이룹니다를 <xref:System.Drawing.Graphics.Save%2A> 메서드 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-184">Just as an <xref:System.Drawing.Graphics.EndContainer%2A> method call is paired with a <xref:System.Drawing.Graphics.BeginContainer%2A> method call, a <xref:System.Drawing.Graphics.Restore%2A> method call is paired with a <xref:System.Drawing.Graphics.Save%2A> method call.</span></span>  
  
 <span data-ttu-id="db630-185">호출 하는 경우는 <xref:System.Drawing.Graphics.EndContainer%2A> 메서드를 스택에 배치 된 모든 정보 블록 (여는 <xref:System.Drawing.Graphics.Save%2A> 메서드 또는 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드) 해당 호출 후는 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드 스택에서 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-185">When you call the <xref:System.Drawing.Graphics.EndContainer%2A> method, all information blocks placed on the stack (by the <xref:System.Drawing.Graphics.Save%2A> method or by the <xref:System.Drawing.Graphics.BeginContainer%2A> method) after the corresponding call to the <xref:System.Drawing.Graphics.BeginContainer%2A> method are removed from the stack.</span></span> <span data-ttu-id="db630-186">마찬가지로 호출 하는 경우는 <xref:System.Drawing.Graphics.Restore%2A> 메서드를 스택에 배치 된 모든 정보 블록 (여는 <xref:System.Drawing.Graphics.Save%2A> 메서드 또는 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드) 해당 호출 후는 <xref:System.Drawing.Graphics.Save%2A> 메서드 스택에서 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-186">Likewise, when you call the <xref:System.Drawing.Graphics.Restore%2A> method, all information blocks placed on the stack (by the <xref:System.Drawing.Graphics.Save%2A> method or by the <xref:System.Drawing.Graphics.BeginContainer%2A> method) after the corresponding call to the <xref:System.Drawing.Graphics.Save%2A> method are removed from the stack.</span></span>  
  
 <span data-ttu-id="db630-187">이 메서드를 사용 하 여 새 그래픽 컨테이너의 크기 조정 변환을 지정 합니다 `dstrect` 고 `srcrect` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-187">This method specifies a scale transformation for the new graphics container with the `dstrect` and `srcrect` parameters.</span></span> <span data-ttu-id="db630-188">소수 자릿수가 변환 같음를 적용할 때 `srcrect`, 결과 `dstrect`합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-188">The scale is equal to the transformation that, when applied to `srcrect`, results in `dstrect`.</span></span>  
  
 <span data-ttu-id="db630-189">설정 된 그래픽 상태는 <xref:System.Drawing.Graphics.BeginContainer%2A> 렌더링 품질을 기본 그래픽 상태를 포함 하는 메서드; 메서드를 호출 하는 경우 기존 렌더링 품질 상태 변경 내용은 기본값으로 다시 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-189">The graphics state established by the <xref:System.Drawing.Graphics.BeginContainer%2A> method includes the rendering qualities of the default graphics state; any rendering-quality state changes existing when the method is called are reset to the default values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-190">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-190">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-191">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-191">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-192">새 컨테이너에 대 한 크기 조정 변환을 지정 하는 두 개의 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-192">Creates two rectangles to specify a scale transformation for the new container.</span></span>  
  
-   <span data-ttu-id="db630-193">새 그래픽 컨테이너를 열고 이전 컨테이너를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-193">Opens the new graphics container and saves the old container.</span></span>  
  
-   <span data-ttu-id="db630-194">빨간색 사각형을 채우는 (의 좌표를 조정 합니다) 새 컨테이너입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-194">Fills a red rectangle in the (scaled coordinates of the) new container.</span></span>  
  
-   <span data-ttu-id="db630-195">새 컨테이너를 닫고 저장된 된 컨테이너를 복원 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-195">Closes the new container and restores the saved container.</span></span>  
  
-   <span data-ttu-id="db630-196">저장된 된 컨테이너의 녹색 사각형 (소수 자릿수가 없는 좌표)을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-196">Fills a green rectangle (to the unscaled coordinates) of the saved container.</span></span>  
  
 <span data-ttu-id="db630-197">결과 더 작은 빨간색 사각형 위에 놓입니다 녹색 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-197">The result is a green rectangle that overlies a smaller red rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginContainer">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.GraphicsContainer BeginContainer (System.Drawing.RectangleF dstrect, System.Drawing.RectangleF srcrect, System.Drawing.GraphicsUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Drawing2D.GraphicsContainer BeginContainer(valuetype System.Drawing.RectangleF dstrect, valuetype System.Drawing.RectangleF srcrect, valuetype System.Drawing.GraphicsUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginContainer (dstrect As RectangleF, srcrect As RectangleF, unit As GraphicsUnit) As GraphicsContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Drawing2D::GraphicsContainer ^ BeginContainer(System::Drawing::RectangleF dstrect, System::Drawing::RectangleF srcrect, System::Drawing::GraphicsUnit unit);" />
      <MemberSignature Language="F#" Value="member this.BeginContainer : System.Drawing.RectangleF * System.Drawing.RectangleF * System.Drawing.GraphicsUnit -&gt; System.Drawing.Drawing2D.GraphicsContainer" Usage="graphics.BeginContainer (dstrect, srcrect, unit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.GraphicsContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dstrect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcrect" Type="System.Drawing.RectangleF" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
      </Parameters>
      <Docs>
        <param name="dstrect"><span data-ttu-id="db630-198"><paramref name="srcrect" /> 매개 변수로 새 그래픽 컨테이너의 크기 조정 변환을 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-198"><see cref="T:System.Drawing.RectangleF" /> structure that, together with the <paramref name="srcrect" /> parameter, specifies a scale transformation for the new graphics container.</span></span></param>
        <param name="srcrect"><span data-ttu-id="db630-199"><paramref name="dstrect" /> 매개 변수로 새 그래픽 컨테이너의 크기 조정 변환을 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-199"><see cref="T:System.Drawing.RectangleF" /> structure that, together with the <paramref name="dstrect" /> parameter, specifies a scale transformation for the new graphics container.</span></span></param>
        <param name="unit"><span data-ttu-id="db630-200">컨테이너의 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-200">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure for the container.</span></span></param>
        <summary><span data-ttu-id="db630-201">그래픽 컨테이너를 이 <see cref="T:System.Drawing.Graphics" />의 현재 상태로 저장하고 지정된 크기 조정 변환으로 새 그래픽 컨테이너를 열어 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-201">Saves a graphics container with the current state of this <see cref="T:System.Drawing.Graphics" /> and opens and uses a new graphics container with the specified scale transformation.</span></span></summary>
        <returns><span data-ttu-id="db630-202">이 메서드는 호출되었을 때 이 <see cref="T:System.Drawing.Graphics" />의 상태를 나타내는 <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-202">This method returns a <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" /> that represents the state of this <see cref="T:System.Drawing.Graphics" /> at the time of the method call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-203">이 메서드를 사용 합니다 <xref:System.Drawing.Graphics.EndContainer%2A> 중첩 된 graphics 컨테이너를 만드는 방법.</span><span class="sxs-lookup"><span data-stu-id="db630-203">Use this method with the <xref:System.Drawing.Graphics.EndContainer%2A> method to create nested graphics containers.</span></span> <span data-ttu-id="db630-204">Graphics 컨테이너에는 변환, 클리핑 영역 및 렌더링 속성과 같은 그래픽 상태를 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-204">Graphics containers retain graphics state, such as transformation, clipping region, and rendering properties.</span></span>  
  
 <span data-ttu-id="db630-205">호출 하는 경우는 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드를 <xref:System.Drawing.Graphics>, 상태를 포함 하는 정보 블록이 <xref:System.Drawing.Graphics> 스택에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-205">When you call the <xref:System.Drawing.Graphics.BeginContainer%2A> method of a <xref:System.Drawing.Graphics>, an information block that holds the state of the <xref:System.Drawing.Graphics> is put on a stack.</span></span> <span data-ttu-id="db630-206">합니다 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드가 반환 되는 <xref:System.Drawing.Drawing2D.GraphicsContainer> 정보 블록을 식별 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-206">The <xref:System.Drawing.Graphics.BeginContainer%2A> method returns a <xref:System.Drawing.Drawing2D.GraphicsContainer> that identifies that information block.</span></span> <span data-ttu-id="db630-207">식별 하는 개체를 전달 하는 경우는 <xref:System.Drawing.Graphics.EndContainer%2A> 메서드 정보 블록 스택에서 제거 되 고 복원 하는 데 사용 되는 <xref:System.Drawing.Graphics> 당시 시점의 상태로 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-207">When you pass the identifying object to the <xref:System.Drawing.Graphics.EndContainer%2A> method, the information block is removed from the stack and is used to restore the <xref:System.Drawing.Graphics> to the state it was in at the time of the <xref:System.Drawing.Graphics.BeginContainer%2A> method call.</span></span>  
  
 <span data-ttu-id="db630-208">컨테이너는 중첩 될 수 있습니다. 즉, 호출할 수 있습니다 합니다 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드를 호출 하기 전에 여러 번의 <xref:System.Drawing.Graphics.EndContainer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="db630-208">Containers can be nested; that is, you can call the <xref:System.Drawing.Graphics.BeginContainer%2A> method several times before you call the <xref:System.Drawing.Graphics.EndContainer%2A> method.</span></span> <span data-ttu-id="db630-209">호출할 때마다 합니다 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드 정보 블록을 스택에 배치 되 고 수신 하는 <xref:System.Drawing.Drawing2D.GraphicsContainer> 정보 블록에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-209">Each time you call the <xref:System.Drawing.Graphics.BeginContainer%2A> method, an information block is put on the stack, and you receive a <xref:System.Drawing.Drawing2D.GraphicsContainer> for the information block.</span></span> <span data-ttu-id="db630-210">해당 개체를 하나 전달 하는 경우는 <xref:System.Drawing.Graphics.EndContainer%2A> 메서드를를 <xref:System.Drawing.Graphics> 당시 시점의 상태로 반환 됩니다 합니다 <xref:System.Drawing.Graphics.BeginContainer%2A> 는 특정 반환 하는 메서드 호출 <xref:System.Drawing.Drawing2D.GraphicsContainer>.</span><span class="sxs-lookup"><span data-stu-id="db630-210">When you pass one of those objects to the <xref:System.Drawing.Graphics.EndContainer%2A> method, the <xref:System.Drawing.Graphics> is returned to the state it was in at the time of the <xref:System.Drawing.Graphics.BeginContainer%2A> method call that returned that particular <xref:System.Drawing.Drawing2D.GraphicsContainer>.</span></span> <span data-ttu-id="db630-211">정보 블록에서 스택에 배치 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드 호출 스택에서 제거 되 고 그 후 해당 스택에 배치 하는 모든 정보 블록 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드 호출도 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-211">The information block placed on the stack by that <xref:System.Drawing.Graphics.BeginContainer%2A> method call is removed from the stack, and all information blocks placed on that stack after that <xref:System.Drawing.Graphics.BeginContainer%2A> method call are also removed.</span></span>  
  
 <span data-ttu-id="db630-212">에 대 한 호출을 <xref:System.Drawing.Graphics.Save%2A> 메서드 호출 스택의 동일 위치 정보 블록을 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="db630-212">Calls to the <xref:System.Drawing.Graphics.Save%2A> method place information blocks on the same stack as calls to the <xref:System.Drawing.Graphics.BeginContainer%2A> method.</span></span> <span data-ttu-id="db630-213">처럼를 <xref:System.Drawing.Graphics.EndContainer%2A> 메서드 호출을 이룹니다를 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드 호출을 <xref:System.Drawing.Graphics.Restore%2A> 메서드 호출을 이룹니다를 <xref:System.Drawing.Graphics.Save%2A> 메서드 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-213">Just as an <xref:System.Drawing.Graphics.EndContainer%2A> method call is paired with a <xref:System.Drawing.Graphics.BeginContainer%2A> method call, a <xref:System.Drawing.Graphics.Restore%2A> method call is paired with a <xref:System.Drawing.Graphics.Save%2A> method call.</span></span>  
  
 <span data-ttu-id="db630-214">호출 하는 경우는 <xref:System.Drawing.Graphics.EndContainer%2A> 메서드를 스택에 배치 된 모든 정보 블록 (여는 `Save` 메서드 또는 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드) 해당 호출 후는 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드 스택에서 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-214">When you call the <xref:System.Drawing.Graphics.EndContainer%2A> method, all information blocks placed on the stack (by the `Save` method or by the <xref:System.Drawing.Graphics.BeginContainer%2A> method) after the corresponding call to the <xref:System.Drawing.Graphics.BeginContainer%2A> method are removed from the stack.</span></span> <span data-ttu-id="db630-215">마찬가지로 호출 하는 경우는 <xref:System.Drawing.Graphics.Restore%2A> 메서드를 스택에 배치 된 모든 정보 블록 (여는 <xref:System.Drawing.Graphics.Save%2A> 메서드 또는 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드) 해당 호출 후는 <xref:System.Drawing.Graphics.Save%2A> 메서드 스택에서 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-215">Likewise, when you call the <xref:System.Drawing.Graphics.Restore%2A> method, all information blocks placed on the stack (by the <xref:System.Drawing.Graphics.Save%2A> method or by the <xref:System.Drawing.Graphics.BeginContainer%2A> method) after the corresponding call to the <xref:System.Drawing.Graphics.Save%2A> method are removed from the stack.</span></span>  
  
 <span data-ttu-id="db630-216">이 메서드를 사용 하 여 새 그래픽 컨테이너의 크기 조정 변환을 지정 합니다 `dstrect` 고 `srcrect` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-216">This method specifies a scale transformation for the new graphics container with the `dstrect` and `srcrect` parameters.</span></span> <span data-ttu-id="db630-217">소수 자릿수가 변환 같음를 적용할 때 `srcrect`, 결과 `dstrect`합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-217">The scale is equal to the transformation that, when applied to `srcrect`, results in `dstrect`.</span></span>  
  
 <span data-ttu-id="db630-218">설정 된 그래픽 상태는 <xref:System.Drawing.Graphics.BeginContainer%2A> 렌더링 품질을 기본 그래픽 상태를 포함 하는 메서드; 메서드를 호출 하는 경우 기존 렌더링 품질 상태 변경 내용은 기본값으로 다시 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-218">The graphics state established by the <xref:System.Drawing.Graphics.BeginContainer%2A> method includes the rendering qualities of the default graphics state; any rendering-quality state changes existing when the method is called are reset to the default values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-219">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-219">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-220">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-220">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-221">새 컨테이너에 대 한 크기 조정 변환을 지정 하는 두 개의 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-221">Creates two rectangles to specify a scale transformation for the new container.</span></span>  
  
-   <span data-ttu-id="db630-222">새 그래픽 컨테이너를 열고 이전 컨테이너를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-222">Opens the new graphics container and saves the old container.</span></span>  
  
-   <span data-ttu-id="db630-223">빨간색 사각형을 채우는 (의 좌표를 조정 합니다) 새 컨테이너입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-223">Fills a red rectangle in the (scaled coordinates of the) new container.</span></span>  
  
-   <span data-ttu-id="db630-224">새 컨테이너를 닫고 저장된 된 컨테이너를 복원 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-224">Closes the new container and restores the saved container.</span></span>  
  
-   <span data-ttu-id="db630-225">저장된 된 컨테이너의 녹색 사각형 (소수 자릿수가 없는 좌표)을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-225">Fills a green rectangle (to the unscaled coordinates) of the saved container.</span></span>  
  
 <span data-ttu-id="db630-226">결과 더 작은 빨간색 사각형 위에 놓입니다 녹색 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-226">The result is a green rectangle that overlies a smaller red rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear (System.Drawing.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear(valuetype System.Drawing.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.Clear(System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear(System::Drawing::Color color);" />
      <MemberSignature Language="F#" Value="member this.Clear : System.Drawing.Color -&gt; unit" Usage="graphics.Clear color" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="color"><span data-ttu-id="db630-227">그리기 화면의 배경색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-227"><see cref="T:System.Drawing.Color" /> structure that represents the background color of the drawing surface.</span></span></param>
        <summary><span data-ttu-id="db630-228">전체 그리기 화면을 지우고 지정된 배경색으로 화면을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-228">Clears the entire drawing surface and fills it with the specified background color.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-229"><xref:System.Drawing.Graphics.Clear%2A> 메서드 graphics 개체의 상태를 지우고 graphics 개체를 업데이트할 수 없습니다 하는 경우 호출 되지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-229">The <xref:System.Drawing.Graphics.Clear%2A> method clears the state of the graphics object and should not be called when the graphics object cannot be updated.</span></span> <span data-ttu-id="db630-230">예를 들어 경우는 <xref:System.Drawing.Graphics.Clear%2A> 메서드는 보안 데스크톱에서 터미널 서버 세션에서는 <xref:System.Runtime.InteropServices.ExternalException> 두면 발생할 수 있습니다는 <xref:System.Drawing.Graphics> 일관 되지 않은 상태의 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-230">For example, if the <xref:System.Drawing.Graphics.Clear%2A> method is called on a secure desktop in a terminal server session, an <xref:System.Runtime.InteropServices.ExternalException> may occur, leaving the <xref:System.Drawing.Graphics> object in an inconsistent state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-231">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-231">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-232">코드의 그리기 화면을 지우고는 <xref:System.Drawing.Graphics> 청록 시스템 정의 색을 배경색을 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-232">The code clears the drawing surface of the <xref:System.Drawing.Graphics> and sets the background color to the system-defined teal color.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clip">
      <MemberSignature Language="C#" Value="public System.Drawing.Region Clip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Region Clip" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.Clip" />
      <MemberSignature Language="VB.NET" Value="Public Property Clip As Region" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Region ^ Clip { System::Drawing::Region ^ get(); void set(System::Drawing::Region ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Clip : System.Drawing.Region with get, set" Usage="System.Drawing.Graphics.Clip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Region</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db630-233">이 <see cref="T:System.Drawing.Graphics" />의 그리기 영역을 제한하는 <see cref="T:System.Drawing.Region" />을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-233">Gets or sets a <see cref="T:System.Drawing.Region" /> that limits the drawing region of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <value><span data-ttu-id="db630-234">현재 그리기에 사용할 수 있는 이 <see cref="T:System.Drawing.Graphics" />의 부분을 제한하는 <see cref="T:System.Drawing.Region" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-234">A <see cref="T:System.Drawing.Region" /> that limits the portion of this <see cref="T:System.Drawing.Graphics" /> that is currently available for drawing.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-235">수정 합니다 <xref:System.Drawing.Region> 에서 반환 된 개체를 <xref:System.Drawing.Graphics.Clip%2A> 속성으로 후속 그리기 영향을 주지 않습니다는 <xref:System.Drawing.Graphics> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-235">Modifying the <xref:System.Drawing.Region> object returned by the <xref:System.Drawing.Graphics.Clip%2A> property does not affect subsequent drawing with the <xref:System.Drawing.Graphics> object.</span></span> <span data-ttu-id="db630-236">클립 영역을 변경 하려면 대체 합니다 <xref:System.Drawing.Graphics.Clip%2A> 속성 값을 새 <xref:System.Drawing.Region> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-236">To change the clip region, replace the <xref:System.Drawing.Graphics.Clip%2A> property value with a new <xref:System.Drawing.Region> object.</span></span> <span data-ttu-id="db630-237">클리핑 영역 유한 인지를 확인 하려면 검색 된 <xref:System.Drawing.Graphics.Clip%2A> 속성과 호출 해당 <xref:System.Drawing.Region.IsInfinite%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="db630-237">To determine whether the clipping region is infinite, retrieve the <xref:System.Drawing.Graphics.Clip%2A> property and call its <xref:System.Drawing.Region.IsInfinite%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-238">다음 코드 예제에서는 <xref:System.Drawing.Graphics.Clip%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-238">The following code example demonstrates the use of the <xref:System.Drawing.Graphics.Clip%2A> property.</span></span> <span data-ttu-id="db630-239">이 예제에서는 Windows Forms를 사용 하 여 사용 하도록 설계 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-239">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="db630-240">양식과 호출 코드를 붙여 합니다 `SetAndFillClip` 폼을 처리 하는 경우 메서드 <xref:System.Windows.Forms.Control.Paint> 이벤트를 전달 `e` 으로 <xref:System.Windows.Forms.PaintEventArgs>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-240">Paste the code into a form and call the `SetAndFillClip` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.GraphicsProperties#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.GraphicsProperties#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CS/form1.cs#4)]
 [!code-vb[System.Drawing.GraphicsProperties#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClipBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF ClipBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.RectangleF ClipBounds" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.ClipBounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClipBounds As RectangleF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::RectangleF ClipBounds { System::Drawing::RectangleF get(); };" />
      <MemberSignature Language="F#" Value="member this.ClipBounds : System.Drawing.RectangleF" Usage="System.Drawing.Graphics.ClipBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db630-241">이 <see cref="T:System.Drawing.Graphics" />의 클립 영역에 대한 경계를 설정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="db630-241">Gets a <see cref="T:System.Drawing.RectangleF" /> structure that bounds the clipping region of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <value><span data-ttu-id="db630-242">이 <see cref="T:System.Drawing.Graphics" />의 클립 영역에 대한 경계 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-242">A <see cref="T:System.Drawing.RectangleF" /> structure that represents a bounding rectangle for the clipping region of this <see cref="T:System.Drawing.Graphics" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-243">지정 하는 결과 사각형의 단위는 <xref:System.Drawing.Graphics.PageUnit%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-243">The unit for resulting rectangle is designated by the <xref:System.Drawing.Graphics.PageUnit%2A> property.</span></span> <span data-ttu-id="db630-244">기본 단위는 픽셀입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-244">The default unit is pixels.</span></span> <span data-ttu-id="db630-245"><xref:System.Drawing.Graphics> 일반적으로 컨트롤과 연결 된 해당 컨트롤의 클라이언트 영역을 기준으로 사각형의 시작 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-245">A <xref:System.Drawing.Graphics> is typically associated with a control and the origin of the rectangle will be relative to the client area of that control.</span></span>  
  
 <span data-ttu-id="db630-246">클리핑 영역 제하지 없는 경우는 <xref:System.Drawing.Graphics.ClipBounds%2A> 속성 의미 없는 큰 사각형을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-246">If the clipping region is infinite, the <xref:System.Drawing.Graphics.ClipBounds%2A> property returns a meaningless large rectangle.</span></span> <span data-ttu-id="db630-247">클리핑 영역 유한 인지를 확인 하려면 검색 된 <xref:System.Drawing.Graphics.Clip%2A> 속성과 호출 해당 <xref:System.Drawing.Region.IsInfinite%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="db630-247">To determine whether the clipping region is infinite, retrieve the <xref:System.Drawing.Graphics.Clip%2A> property and call its <xref:System.Drawing.Region.IsInfinite%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompositingMode">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.CompositingMode CompositingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.CompositingMode CompositingMode" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.CompositingMode" />
      <MemberSignature Language="VB.NET" Value="Public Property CompositingMode As CompositingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::CompositingMode CompositingMode { System::Drawing::Drawing2D::CompositingMode get(); void set(System::Drawing::Drawing2D::CompositingMode value); };" />
      <MemberSignature Language="F#" Value="member this.CompositingMode : System.Drawing.Drawing2D.CompositingMode with get, set" Usage="System.Drawing.Graphics.CompositingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.CompositingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db630-248">이 <see cref="T:System.Drawing.Graphics" />에 합성 이미지가 그려지는 방식을 지정하는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="db630-248">Gets a value that specifies how composited images are drawn to this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <value><span data-ttu-id="db630-249">이 속성은 <see cref="T:System.Drawing.Drawing2D.CompositingMode" /> 열거형의 멤버를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-249">This property specifies a member of the <see cref="T:System.Drawing.Drawing2D.CompositingMode" /> enumeration.</span></span> <span data-ttu-id="db630-250">기본값은 <see cref="F:System.Drawing.Drawing2D.CompositingMode.SourceOver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-250">The default is <see cref="F:System.Drawing.Drawing2D.CompositingMode.SourceOver" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-251">혼합 모드 소스 이미지에서 픽셀 덮어쓰기 배경 픽셀을 사용 하 여 결합 됩니다 되는지 결정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-251">The compositing mode determines whether pixels from a source image overwrite or are combined with background pixels.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="db630-252">사용 하지 않아야를 <xref:System.Drawing.Graphics.CompositingMode%2A> 속성 값 <xref:System.Drawing.Drawing2D.CompositingMode.SourceCopy> 경우는 <xref:System.Drawing.Graphics.TextRenderingHint%2A> 속성이 <xref:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-252">You should not use a <xref:System.Drawing.Graphics.CompositingMode%2A> property value of <xref:System.Drawing.Drawing2D.CompositingMode.SourceCopy> when the <xref:System.Drawing.Graphics.TextRenderingHint%2A> property is set to <xref:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit>.</span></span> <span data-ttu-id="db630-253">예외가 발생할 수 있습니다 하거나 이미지가 제대로 렌더링 되지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-253">An exception could occur or the image may not render correctly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompositingQuality">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.CompositingQuality CompositingQuality { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.CompositingQuality CompositingQuality" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.CompositingQuality" />
      <MemberSignature Language="VB.NET" Value="Public Property CompositingQuality As CompositingQuality" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::CompositingQuality CompositingQuality { System::Drawing::Drawing2D::CompositingQuality get(); void set(System::Drawing::Drawing2D::CompositingQuality value); };" />
      <MemberSignature Language="F#" Value="member this.CompositingQuality : System.Drawing.Drawing2D.CompositingQuality with get, set" Usage="System.Drawing.Graphics.CompositingQuality" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.CompositingQuality</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db630-254">이 <see cref="T:System.Drawing.Graphics" />에 그려진 합성 이미지의 렌더링 품질을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-254">Gets or sets the rendering quality of composited images drawn to this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <value><span data-ttu-id="db630-255">이 속성은 <see cref="T:System.Drawing.Drawing2D.CompositingQuality" /> 열거형의 멤버를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-255">This property specifies a member of the <see cref="T:System.Drawing.Drawing2D.CompositingQuality" /> enumeration.</span></span> <span data-ttu-id="db630-256">기본값은 <see cref="F:System.Drawing.Drawing2D.CompositingQuality.Default" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-256">The default is <see cref="F:System.Drawing.Drawing2D.CompositingQuality.Default" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-257">합성 품질 합성 이미지의 렌더링 품질 수준을 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-257">The compositing quality determines the rendering quality level of composited images.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyFromScreen">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db630-258">화면에서 <see cref="T:System.Drawing.Graphics" />의 그리기 화면으로 색 데이터 비트 블록 전송을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-258">Performs a bit-block transfer of color data from the screen to the drawing surface of the <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyFromScreen">
      <MemberSignature Language="C#" Value="public void CopyFromScreen (System.Drawing.Point upperLeftSource, System.Drawing.Point upperLeftDestination, System.Drawing.Size blockRegionSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyFromScreen(valuetype System.Drawing.Point upperLeftSource, valuetype System.Drawing.Point upperLeftDestination, valuetype System.Drawing.Size blockRegionSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyFromScreen (upperLeftSource As Point, upperLeftDestination As Point, blockRegionSize As Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyFromScreen(System::Drawing::Point upperLeftSource, System::Drawing::Point upperLeftDestination, System::Drawing::Size blockRegionSize);" />
      <MemberSignature Language="F#" Value="member this.CopyFromScreen : System.Drawing.Point * System.Drawing.Point * System.Drawing.Size -&gt; unit" Usage="graphics.CopyFromScreen (upperLeftSource, upperLeftDestination, blockRegionSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="upperLeftSource" Type="System.Drawing.Point" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="upperLeftDestination" Type="System.Drawing.Point" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="blockRegionSize" Type="System.Drawing.Size" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="upperLeftSource"><span data-ttu-id="db630-259">원본 사각형의 왼쪽 위 모퉁이에 있는 점입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-259">The point at the upper-left corner of the source rectangle.</span></span></param>
        <param name="upperLeftDestination"><span data-ttu-id="db630-260">대상 사각형의 왼쪽 위 모퉁이에 있는 점입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-260">The point at the upper-left corner of the destination rectangle.</span></span></param>
        <param name="blockRegionSize"><span data-ttu-id="db630-261">전송할 영역의 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-261">The size of the area to be transferred.</span></span></param>
        <summary><span data-ttu-id="db630-262">화면에서 <see cref="T:System.Drawing.Graphics" />의 그리기 화면으로 픽셀의 사각형에 해당하는 색 데이터 비트 블록 전송을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-262">Performs a bit-block transfer of color data, corresponding to a rectangle of pixels, from the screen to the drawing surface of the <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-263"><xref:System.Drawing.Graphics.CopyFromScreen%2A> 메서드 위에 다른 하나의 이미지 계층에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-263">The <xref:System.Drawing.Graphics.CopyFromScreen%2A> methods are useful for layering one image on top of another.</span></span> <span data-ttu-id="db630-264">소스 및 대상 색 혼합 되는 방법을 지정 하려면 중 하나를 사용 합니다 <xref:System.Drawing.Graphics.CopyFromScreen%2A> 사용 하는 메서드를 <xref:System.Drawing.CopyPixelOperation> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-264">To specify how the source and destination colors are blended, use one of the <xref:System.Drawing.Graphics.CopyFromScreen%2A> methods that takes a <xref:System.Drawing.CopyPixelOperation> parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-265">다음 예제에서는 <xref:System.Drawing.Graphics.CopyFromScreen%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="db630-265">The following example demonstrates how to use the <xref:System.Drawing.Graphics.CopyFromScreen%2A> method.</span></span> <span data-ttu-id="db630-266">이 예제를 실행 하려면 Windows 폼에 붙여 넣습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-266">To run this example, paste it into a Windows Form.</span></span> <span data-ttu-id="db630-267">양식의 처리 <xref:System.Windows.Forms.Control.Paint> 이벤트 및 호출 합니다 `CopyPixels1` 메서드에서 <xref:System.Windows.Forms.Control.Paint> 전달 하는 이벤트 처리 메서드를 `e` 으로 <xref:System.Windows.Forms.PaintEventArgs>입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-267">Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `CopyPixels1` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-csharp[System.Drawing.MiscWhidbeySnippets#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/CS/Form1.cs#4)]
 [!code-vb[System.Drawing.MiscWhidbeySnippets#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="db630-268">작업을 수행하지 못했습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-268">The operation failed.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="db630-269">모든 windows에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-269">for access to all windows.</span></span> <span data-ttu-id="db630-270">열거형 관련: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-270">Related enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span></span></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/c8dff5f8-f56a-4c07-ae31-64643b31f8fc"><span data-ttu-id="db630-271">방법: Windows Form 인쇄</span><span class="sxs-lookup"><span data-stu-id="db630-271">How to: Print a Windows Form</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/33b76910-13a3-4521-be98-5c097341ae3b"><span data-ttu-id="db630-272">방법: Windows Forms에서 깜빡임을 줄이기 위한 픽셀 복사</span><span class="sxs-lookup"><span data-stu-id="db630-272">How to: Copy Pixels For Reducing Flicker in Windows Forms</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CopyFromScreen">
      <MemberSignature Language="C#" Value="public void CopyFromScreen (System.Drawing.Point upperLeftSource, System.Drawing.Point upperLeftDestination, System.Drawing.Size blockRegionSize, System.Drawing.CopyPixelOperation copyPixelOperation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyFromScreen(valuetype System.Drawing.Point upperLeftSource, valuetype System.Drawing.Point upperLeftDestination, valuetype System.Drawing.Size blockRegionSize, valuetype System.Drawing.CopyPixelOperation copyPixelOperation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size,System.Drawing.CopyPixelOperation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyFromScreen(System::Drawing::Point upperLeftSource, System::Drawing::Point upperLeftDestination, System::Drawing::Size blockRegionSize, System::Drawing::CopyPixelOperation copyPixelOperation);" />
      <MemberSignature Language="F#" Value="member this.CopyFromScreen : System.Drawing.Point * System.Drawing.Point * System.Drawing.Size * System.Drawing.CopyPixelOperation -&gt; unit" Usage="graphics.CopyFromScreen (upperLeftSource, upperLeftDestination, blockRegionSize, copyPixelOperation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="upperLeftSource" Type="System.Drawing.Point" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="upperLeftDestination" Type="System.Drawing.Point" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="blockRegionSize" Type="System.Drawing.Size" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="copyPixelOperation" Type="System.Drawing.CopyPixelOperation" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="upperLeftSource"><span data-ttu-id="db630-273">원본 사각형의 왼쪽 위 모퉁이에 있는 점입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-273">The point at the upper-left corner of the source rectangle.</span></span></param>
        <param name="upperLeftDestination"><span data-ttu-id="db630-274">대상 사각형의 왼쪽 위 모퉁이에 있는 점입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-274">The point at the upper-left corner of the destination rectangle.</span></span></param>
        <param name="blockRegionSize"><span data-ttu-id="db630-275">전송할 영역의 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-275">The size of the area to be transferred.</span></span></param>
        <param name="copyPixelOperation"><span data-ttu-id="db630-276"><see cref="T:System.Drawing.CopyPixelOperation" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-276">One of the <see cref="T:System.Drawing.CopyPixelOperation" /> values.</span></span></param>
        <summary><span data-ttu-id="db630-277">화면에서 <see cref="T:System.Drawing.Graphics" />의 그리기 화면으로 픽셀의 사각형에 해당하는 색 데이터 비트 블록 전송을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-277">Performs a bit-block transfer of color data, corresponding to a rectangle of pixels, from the screen to the drawing surface of the <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-278"><xref:System.Drawing.Graphics.CopyFromScreen%2A> 메서드 위에 다른 하나의 이미지 계층에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-278">The <xref:System.Drawing.Graphics.CopyFromScreen%2A> methods are useful for layering one image on top of another.</span></span> <span data-ttu-id="db630-279">`copyPixelOperation` 매개 변수를 지정 하 고 소스 색을 대상 영역의 색과 혼합 해야 하는 방법을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-279">The `copyPixelOperation` parameter allows you to specify if and how the source colors should be blended with the colors in the destination area.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-280">다음 예제에서는 <xref:System.Drawing.Graphics.CopyFromScreen%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="db630-280">The following example demonstrates how to use the <xref:System.Drawing.Graphics.CopyFromScreen%2A> method.</span></span> <span data-ttu-id="db630-281">이 예제를 실행 하려면 Windows 폼에 붙여 넣습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-281">To run this example, paste it into a Windows Form.</span></span> <span data-ttu-id="db630-282">양식의 처리 <xref:System.Windows.Forms.Control.Paint> 이벤트 및 호출 합니다 `CopyPixels2` 메서드에서 <xref:System.Windows.Forms.Control.Paint> 전달 하는 이벤트 처리 메서드를 `e` 으로 <xref:System.Windows.Forms.PaintEventArgs>입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-282">Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `CopyPixels2` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-csharp[System.Drawing.MiscWhidbeySnippets#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/CS/Form1.cs#5)]
 [!code-vb[System.Drawing.MiscWhidbeySnippets#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="db630-283"><paramref name="copyPixelOperation" />는 <see cref="T:System.Drawing.CopyPixelOperation" />의 멤버가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="db630-283"><paramref name="copyPixelOperation" /> is not a member of <see cref="T:System.Drawing.CopyPixelOperation" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="db630-284">작업을 수행하지 못했습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-284">The operation failed.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="db630-285">모든 windows에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-285">for access to all windows.</span></span> <span data-ttu-id="db630-286">열거형 관련: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-286">Related enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span></span></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/c8dff5f8-f56a-4c07-ae31-64643b31f8fc"><span data-ttu-id="db630-287">방법: Windows Form 인쇄</span><span class="sxs-lookup"><span data-stu-id="db630-287">How to: Print a Windows Form</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/33b76910-13a3-4521-be98-5c097341ae3b"><span data-ttu-id="db630-288">방법: Windows Forms에서 깜빡임을 줄이기 위한 픽셀 복사</span><span class="sxs-lookup"><span data-stu-id="db630-288">How to: Copy Pixels For Reducing Flicker in Windows Forms</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CopyFromScreen">
      <MemberSignature Language="C#" Value="public void CopyFromScreen (int sourceX, int sourceY, int destinationX, int destinationY, System.Drawing.Size blockRegionSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyFromScreen(int32 sourceX, int32 sourceY, int32 destinationX, int32 destinationY, valuetype System.Drawing.Size blockRegionSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyFromScreen (sourceX As Integer, sourceY As Integer, destinationX As Integer, destinationY As Integer, blockRegionSize As Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyFromScreen(int sourceX, int sourceY, int destinationX, int destinationY, System::Drawing::Size blockRegionSize);" />
      <MemberSignature Language="F#" Value="member this.CopyFromScreen : int * int * int * int * System.Drawing.Size -&gt; unit" Usage="graphics.CopyFromScreen (sourceX, sourceY, destinationX, destinationY, blockRegionSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceX" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="sourceY" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="destinationX" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="destinationY" Type="System.Int32" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="blockRegionSize" Type="System.Drawing.Size" Index="4" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceX"><span data-ttu-id="db630-289">원본 사각형 왼쪽 위 모퉁이에 있는 점의 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-289">The x-coordinate of the point at the upper-left corner of the source rectangle.</span></span></param>
        <param name="sourceY"><span data-ttu-id="db630-290">원본 사각형 왼쪽 위 모퉁이에 있는 점의 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-290">The y-coordinate of the point at the upper-left corner of the source rectangle.</span></span></param>
        <param name="destinationX"><span data-ttu-id="db630-291">대상 사각형 왼쪽 위 모퉁이에 있는 점의 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-291">The x-coordinate of the point at the upper-left corner of the destination rectangle.</span></span></param>
        <param name="destinationY"><span data-ttu-id="db630-292">대상 사각형 왼쪽 위 모퉁이에 있는 점의 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-292">The y-coordinate of the point at the upper-left corner of the destination rectangle.</span></span></param>
        <param name="blockRegionSize"><span data-ttu-id="db630-293">전송할 영역의 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-293">The size of the area to be transferred.</span></span></param>
        <summary><span data-ttu-id="db630-294">화면에서 <see cref="T:System.Drawing.Graphics" />의 그리기 화면으로 픽셀의 사각형에 해당하는 색 데이터 비트 블록 전송을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-294">Performs a bit-block transfer of the color data, corresponding to a rectangle of pixels, from the screen to the drawing surface of the <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-295"><xref:System.Drawing.Graphics.CopyFromScreen%2A> 메서드 위에 다른 하나의 이미지 계층에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-295">The <xref:System.Drawing.Graphics.CopyFromScreen%2A> methods are useful for layering one image on top of another.</span></span> <span data-ttu-id="db630-296">소스 및 대상 색 혼합 되는 방법을 지정 하려면 중 하나를 사용 합니다 <xref:System.Drawing.Graphics.CopyFromScreen%2A> 사용 하는 메서드를 <xref:System.Drawing.CopyPixelOperation> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-296">To specify how the source and destination colors are blended, use one of the <xref:System.Drawing.Graphics.CopyFromScreen%2A> methods that takes a <xref:System.Drawing.CopyPixelOperation> parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-297">다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Drawing.Graphics.CopyFromScreen%2A> 현재 폼의 복사본을 인쇄 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-297">The following code example demonstrates how to use the <xref:System.Drawing.Graphics.CopyFromScreen%2A> for printing a copy of the current form.</span></span>  
  
 [!code-csharp[System.Drawing.Graphics.CopyFromScreen#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Graphics.CopyFromScreen/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.Graphics.CopyFromScreen#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Graphics.CopyFromScreen/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="db630-298">작업을 수행하지 못했습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-298">The operation failed.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="db630-299">모든 windows에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-299">for access to all windows.</span></span> <span data-ttu-id="db630-300">열거형 관련: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-300">Related enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span></span></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/c8dff5f8-f56a-4c07-ae31-64643b31f8fc"><span data-ttu-id="db630-301">방법: Windows Form 인쇄</span><span class="sxs-lookup"><span data-stu-id="db630-301">How to: Print a Windows Form</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/33b76910-13a3-4521-be98-5c097341ae3b"><span data-ttu-id="db630-302">방법: Windows Forms에서 깜빡임을 줄이기 위한 픽셀 복사</span><span class="sxs-lookup"><span data-stu-id="db630-302">How to: Copy Pixels For Reducing Flicker in Windows Forms</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CopyFromScreen">
      <MemberSignature Language="C#" Value="public void CopyFromScreen (int sourceX, int sourceY, int destinationX, int destinationY, System.Drawing.Size blockRegionSize, System.Drawing.CopyPixelOperation copyPixelOperation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyFromScreen(int32 sourceX, int32 sourceY, int32 destinationX, int32 destinationY, valuetype System.Drawing.Size blockRegionSize, valuetype System.Drawing.CopyPixelOperation copyPixelOperation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyFromScreen(int sourceX, int sourceY, int destinationX, int destinationY, System::Drawing::Size blockRegionSize, System::Drawing::CopyPixelOperation copyPixelOperation);" />
      <MemberSignature Language="F#" Value="member this.CopyFromScreen : int * int * int * int * System.Drawing.Size * System.Drawing.CopyPixelOperation -&gt; unit" Usage="graphics.CopyFromScreen (sourceX, sourceY, destinationX, destinationY, blockRegionSize, copyPixelOperation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceX" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="sourceY" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="destinationX" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="destinationY" Type="System.Int32" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="blockRegionSize" Type="System.Drawing.Size" Index="4" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="copyPixelOperation" Type="System.Drawing.CopyPixelOperation" Index="5" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceX"><span data-ttu-id="db630-303">원본 사각형 왼쪽 위 모퉁이에 있는 점의 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-303">The x-coordinate of the point at the upper-left corner of the source rectangle.</span></span></param>
        <param name="sourceY"><span data-ttu-id="db630-304">원본 사각형 왼쪽 위 모퉁이에 있는 점의 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-304">The y-coordinate of the point at the upper-left corner of the source rectangle</span></span></param>
        <param name="destinationX"><span data-ttu-id="db630-305">대상 사각형 왼쪽 위 모퉁이에 있는 점의 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-305">The x-coordinate of the point at the upper-left corner of the destination rectangle.</span></span></param>
        <param name="destinationY"><span data-ttu-id="db630-306">대상 사각형 왼쪽 위 모퉁이에 있는 점의 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-306">The y-coordinate of the point at the upper-left corner of the destination rectangle.</span></span></param>
        <param name="blockRegionSize"><span data-ttu-id="db630-307">전송할 영역의 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-307">The size of the area to be transferred.</span></span></param>
        <param name="copyPixelOperation"><span data-ttu-id="db630-308"><see cref="T:System.Drawing.CopyPixelOperation" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-308">One of the <see cref="T:System.Drawing.CopyPixelOperation" /> values.</span></span></param>
        <summary><span data-ttu-id="db630-309">화면에서 <see cref="T:System.Drawing.Graphics" />의 그리기 화면으로 픽셀의 사각형에 해당하는 색 데이터 비트 블록 전송을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-309">Performs a bit-block transfer of the color data, corresponding to a rectangle of pixels, from the screen to the drawing surface of the <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-310"><xref:System.Drawing.Graphics.CopyFromScreen%2A> 메서드 위에 다른 하나의 이미지 계층에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-310">The <xref:System.Drawing.Graphics.CopyFromScreen%2A> methods are useful for layering one image on top of another.</span></span> <span data-ttu-id="db630-311">`copyPixelOperation` 매개 변수를 지정 하 고 소스 색을 대상 영역의 색과 혼합 해야 하는 방법을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-311">The `copyPixelOperation` parameter allows you to specify if and how the source colors should be blended with the colors in the destination area.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-312">다음 예제에서는 <xref:System.Drawing.Graphics.CopyFromScreen%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="db630-312">The following example demonstrates how to use the <xref:System.Drawing.Graphics.CopyFromScreen%2A> method.</span></span> <span data-ttu-id="db630-313">이 예제를 실행 하려면 Windows 폼에 붙여 넣습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-313">To run this example, paste it into a Windows Form.</span></span> <span data-ttu-id="db630-314">양식의 처리 <xref:System.Windows.Forms.Control.Paint> 이벤트 및 호출 합니다 `CopyPixels4` 메서드에서 <xref:System.Windows.Forms.Control.Paint> 전달 하는 이벤트 처리 메서드를 `e` 으로 <xref:System.Windows.Forms.PaintEventArgs>입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-314">Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `CopyPixels4` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-csharp[System.Drawing.MiscWhidbeySnippets#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/CS/Form1.cs#7)]
 [!code-vb[System.Drawing.MiscWhidbeySnippets#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="db630-315"><paramref name="copyPixelOperation" />는 <see cref="T:System.Drawing.CopyPixelOperation" />의 멤버가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="db630-315"><paramref name="copyPixelOperation" /> is not a member of <see cref="T:System.Drawing.CopyPixelOperation" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="db630-316">작업을 수행하지 못했습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-316">The operation failed.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="db630-317">모든 windows에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-317">for access to all windows.</span></span> <span data-ttu-id="db630-318">열거형 관련: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-318">Related enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span></span></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/c8dff5f8-f56a-4c07-ae31-64643b31f8fc"><span data-ttu-id="db630-319">방법: Windows Form 인쇄</span><span class="sxs-lookup"><span data-stu-id="db630-319">How to: Print a Windows Form</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/33b76910-13a3-4521-be98-5c097341ae3b"><span data-ttu-id="db630-320">방법: Windows Forms에서 깜빡임을 줄이기 위한 픽셀 복사</span><span class="sxs-lookup"><span data-stu-id="db630-320">How to: Copy Pixels For Reducing Flicker in Windows Forms</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="graphics.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="db630-321">이 <see cref="T:System.Drawing.Graphics" />에서 사용하는 리소스를 모두 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-321">Releases all resources used by this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-322">호출 <xref:System.Drawing.Graphics.Dispose%2A> 이 사용 하는 리소스 <xref:System.Drawing.Graphics> 다른 용도로 다시 할당 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-322">Calling <xref:System.Drawing.Graphics.Dispose%2A> allows the resources used by this <xref:System.Drawing.Graphics> to be reallocated for other purposes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-323">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-323">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-324">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-324">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-325">만듭니다는 <xref:System.Drawing.Image> 예제 디렉터리에 파일 예제 그래픽에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-325">Creates an <xref:System.Drawing.Image> from a graphics file SampImag.jpg in the example directory.</span></span>  
  
-   <span data-ttu-id="db630-326">만듭니다는 <xref:System.Drawing.Graphics> 에서 <xref:System.Drawing.Image>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-326">Creates a <xref:System.Drawing.Graphics> from the <xref:System.Drawing.Image>.</span></span>  
  
-   <span data-ttu-id="db630-327">그 사각형을 입력 하 여 이미지를 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-327">Alters the image by filling a rectangle within it.</span></span>  
  
-   <span data-ttu-id="db630-328">그립니다는 <xref:System.Drawing.Image> 화면.</span><span class="sxs-lookup"><span data-stu-id="db630-328">Draws the <xref:System.Drawing.Image> to the screen.</span></span>  
  
-   <span data-ttu-id="db630-329">만들어진 해제 <xref:System.Drawing.Graphics>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-329">Releases the created <xref:System.Drawing.Graphics>.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DpiX">
      <MemberSignature Language="C#" Value="public float DpiX { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 DpiX" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.DpiX" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DpiX As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float DpiX { float get(); };" />
      <MemberSignature Language="F#" Value="member this.DpiX : single" Usage="System.Drawing.Graphics.DpiX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db630-330">이 <see cref="T:System.Drawing.Graphics" />의 수평 해상도를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="db630-330">Gets the horizontal resolution of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <value><span data-ttu-id="db630-331">이 <see cref="T:System.Drawing.Graphics" />에서 지원하는 수평 해상도 값(인치당 도트 수)입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-331">The value, in dots per inch, for the horizontal resolution supported by this <see cref="T:System.Drawing.Graphics" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-332">고해상도 애플리케이션을 만드는 방법에 대 한 자세한 내용은 참조 하세요.</span><span class="sxs-lookup"><span data-stu-id="db630-332">For more information about creating high-resolution applications, see</span></span>  
  
 <span data-ttu-id="db630-333">[높은 DPI](https://go.microsoft.com/fwlink/?LinkId=159804)합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-333">[High DPI](https://go.microsoft.com/fwlink/?LinkId=159804).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-334">다음 메서드 사용을 보여 줍니다.는 <xref:System.Drawing.Graphics.DpiX%2A> 고 <xref:System.Drawing.Graphics.DpiY%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-334">The following method shows the use of the <xref:System.Drawing.Graphics.DpiX%2A> and <xref:System.Drawing.Graphics.DpiY%2A> properties.</span></span> <span data-ttu-id="db630-335">이 예제는 Windows 폼을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-335">This example is designed for use with a Windows Form.</span></span> <span data-ttu-id="db630-336">이 예제를 실행 하려면 포함 된 폼에 붙여넣습니다는 <xref:System.Windows.Forms.ListBox> listBox1 라는 및 폼의 생성자에서이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-336">To run this example, paste it into a form that contains a <xref:System.Windows.Forms.ListBox> named listBox1 and call this method from the form's constructor.</span></span>  
  
 [!code-cpp[System.Drawing.MiscExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.MiscExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.MiscExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=159804"><span data-ttu-id="db630-337">높은 DPI</span><span class="sxs-lookup"><span data-stu-id="db630-337">High DPI</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DpiY">
      <MemberSignature Language="C#" Value="public float DpiY { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 DpiY" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.DpiY" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DpiY As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float DpiY { float get(); };" />
      <MemberSignature Language="F#" Value="member this.DpiY : single" Usage="System.Drawing.Graphics.DpiY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db630-338">이 <see cref="T:System.Drawing.Graphics" />의 수직 해상도를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="db630-338">Gets the vertical resolution of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <value><span data-ttu-id="db630-339">이 <see cref="T:System.Drawing.Graphics" />에서 지원하는 수직 해상도 값(인치당 도트 수)입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-339">The value, in dots per inch, for the vertical resolution supported by this <see cref="T:System.Drawing.Graphics" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-340">고해상도 애플리케이션을 만드는 방법에 대 한 자세한 내용은 참조 하세요.</span><span class="sxs-lookup"><span data-stu-id="db630-340">For more information about creating high-resolution applications, see</span></span>  
  
 <span data-ttu-id="db630-341">[높은 DPI](https://go.microsoft.com/fwlink/?LinkId=159804)합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-341">[High DPI](https://go.microsoft.com/fwlink/?LinkId=159804).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-342">다음 메서드 사용을 보여 줍니다.는 <xref:System.Drawing.Graphics.DpiX%2A> 고 <xref:System.Drawing.Graphics.DpiY%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-342">The following method shows the use of the <xref:System.Drawing.Graphics.DpiX%2A> and <xref:System.Drawing.Graphics.DpiY%2A> properties.</span></span> <span data-ttu-id="db630-343">이 예제는 Windows 폼을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-343">This example is designed for use with a Windows Form.</span></span> <span data-ttu-id="db630-344">이 예제를 실행 하려면 포함 된 폼에 붙여넣습니다는 <xref:System.Windows.Forms.ListBox> listBox1 라는 및 폼의 생성자에서이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-344">To run this example, paste it into a form that contains a <xref:System.Windows.Forms.ListBox> named listBox1 and call this method from the form's constructor.</span></span>  
  
 [!code-cpp[System.Drawing.MiscExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.MiscExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.MiscExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=159804"><span data-ttu-id="db630-345">높은 DPI</span><span class="sxs-lookup"><span data-stu-id="db630-345">High DPI</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawArc">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db630-346">좌표, 너비, 높이의 쌍으로 지정된 타원의 부분을 나타내는 호를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-346">Draws an arc representing a portion of an ellipse specified by a pair of coordinates, a width, and a height.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawArc">
      <MemberSignature Language="C#" Value="public void DrawArc (System.Drawing.Pen pen, System.Drawing.Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawArc(class System.Drawing.Pen pen, valuetype System.Drawing.Rectangle rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawArc(System::Drawing::Pen ^ pen, System::Drawing::Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.DrawArc : System.Drawing.Pen * System.Drawing.Rectangle * single * single -&gt; unit" Usage="graphics.DrawArc (pen, rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-347">호의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-347"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the arc.</span></span></param>
        <param name="rect"><span data-ttu-id="db630-348">타원의 경계를 정의하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-348"><see cref="T:System.Drawing.RectangleF" /> structure that defines the boundaries of the ellipse.</span></span></param>
        <param name="startAngle"><span data-ttu-id="db630-349">x-축에서 호의 시작점까지 시계 방향으로 측정된 각도(단위: 도)입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-349">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="db630-350"><paramref name="startAngle" /> 매개 변수에서 호의 끝점까지 시계 방향으로 측정된 각도(단위: 도)입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-350">Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to ending point of the arc.</span></span></param>
        <summary><span data-ttu-id="db630-351"><see cref="T:System.Drawing.Rectangle" /> 구조체에서 지정한 타원의 부분을 나타내는 호를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-351">Draws an arc representing a portion of an ellipse specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-352">이 메서드는 타원의 경계의 일부는 호를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-352">This method draws an arc that is a portion of the perimeter of an ellipse.</span></span> <span data-ttu-id="db630-353">타원은 사각형의 경계에 의해 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-353">The ellipse is defined by the boundaries of a rectangle.</span></span> <span data-ttu-id="db630-354">호는 경계 간에 타원의 부분을 `startAngle` 매개 변수 및 `startAngle`  +  `sweepAngle` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-354">The arc is the portion of the perimeter of the ellipse between the `startAngle` parameter and the `startAngle` + `sweepAngle` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-355">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-355">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-356">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-356">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-357">Black 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-357">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="db630-358">타원을 바인딩된 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-358">Creates a rectangle to bound an ellipse.</span></span>  
  
-   <span data-ttu-id="db630-359">시작 (45도) 및 (270) 스윕 각도 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-359">Defines the start (45 degrees) and sweep (270 degrees) angles.</span></span>  
  
-   <span data-ttu-id="db630-360">화면에 타원형 호를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-360">Draws the elliptical arc to the screen.</span></span>  
  
 <span data-ttu-id="db630-361">결과 사이 있는 세그먼트를 누락 된 부분 타원을 + 및-x 축의 45도 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-361">The result is a partial ellipse missing a segment between + and - 45 degrees of the x axis.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-362"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-362"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawArc">
      <MemberSignature Language="C#" Value="public void DrawArc (System.Drawing.Pen pen, System.Drawing.RectangleF rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawArc(class System.Drawing.Pen pen, valuetype System.Drawing.RectangleF rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawArc(System::Drawing::Pen ^ pen, System::Drawing::RectangleF rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.DrawArc : System.Drawing.Pen * System.Drawing.RectangleF * single * single -&gt; unit" Usage="graphics.DrawArc (pen, rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-363">호의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-363"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the arc.</span></span></param>
        <param name="rect"><span data-ttu-id="db630-364">타원의 경계를 정의하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-364"><see cref="T:System.Drawing.RectangleF" /> structure that defines the boundaries of the ellipse.</span></span></param>
        <param name="startAngle"><span data-ttu-id="db630-365">x-축에서 호의 시작점까지 시계 방향으로 측정된 각도(단위: 도)입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-365">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="db630-366"><paramref name="startAngle" /> 매개 변수에서 호의 끝점까지 시계 방향으로 측정된 각도(단위: 도)입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-366">Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to ending point of the arc.</span></span></param>
        <summary><span data-ttu-id="db630-367"><see cref="T:System.Drawing.RectangleF" /> 구조체에서 지정한 타원의 부분을 나타내는 호를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-367">Draws an arc representing a portion of an ellipse specified by a <see cref="T:System.Drawing.RectangleF" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-368">이 메서드는 타원의 경계의 일부는 호를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-368">This method draws an arc that is a portion of the perimeter of an ellipse.</span></span> <span data-ttu-id="db630-369">타원은 사각형의 경계에 의해 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-369">The ellipse is defined by the boundaries of a rectangle.</span></span> <span data-ttu-id="db630-370">호는 경계 간에 타원의 부분을 `startAngle` 매개 변수 및 `startAngle`  +  `sweepAngle` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-370">The arc is the portion of the perimeter of the ellipse between the `startAngle` parameter and the `startAngle` + `sweepAngle` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-371">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-371">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-372">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-372">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-373">Black 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-373">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="db630-374">타원을 바인딩된 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-374">Creates a rectangle to bound an ellipse.</span></span>  
  
-   <span data-ttu-id="db630-375">시작 (45도) 및 (270) 스윕 각도 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-375">Defines the start (45 degrees) and sweep (270 degrees) angles.</span></span>  
  
-   <span data-ttu-id="db630-376">화면에 타원형 호를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-376">Draws the elliptical arc to the screen.</span></span>  
  
 <span data-ttu-id="db630-377">결과 사이 있는 세그먼트를 누락 된 부분 타원을 + 및-x 축의 45도 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-377">The result is a partial ellipse missing a segment between + and - 45 degrees of the x axis.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-378"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-378"><paramref name="pen" /> is <see langword="null" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawArc">
      <MemberSignature Language="C#" Value="public void DrawArc (System.Drawing.Pen pen, int x, int y, int width, int height, int startAngle, int sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawArc(class System.Drawing.Pen pen, int32 x, int32 y, int32 width, int32 height, int32 startAngle, int32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawArc(System::Drawing::Pen ^ pen, int x, int y, int width, int height, int startAngle, int sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.DrawArc : System.Drawing.Pen * int * int * int * int * int * int -&gt; unit" Usage="graphics.DrawArc (pen, x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="startAngle" Type="System.Int32" />
        <Parameter Name="sweepAngle" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-379">호의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-379"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the arc.</span></span></param>
        <param name="x"><span data-ttu-id="db630-380">타원을 정의하는 사각형의 왼쪽 위 모퉁이에 대한 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-380">The x-coordinate of the upper-left corner of the rectangle that defines the ellipse.</span></span></param>
        <param name="y"><span data-ttu-id="db630-381">타원을 정의하는 사각형의 왼쪽 위 모퉁이에 대한 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-381">The y-coordinate of the upper-left corner of the rectangle that defines the ellipse.</span></span></param>
        <param name="width"><span data-ttu-id="db630-382">타원을 정의하는 사각형의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-382">Width of the rectangle that defines the ellipse.</span></span></param>
        <param name="height"><span data-ttu-id="db630-383">타원을 정의하는 사각형의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-383">Height of the rectangle that defines the ellipse.</span></span></param>
        <param name="startAngle"><span data-ttu-id="db630-384">x-축에서 호의 시작점까지 시계 방향으로 측정된 각도(단위: 도)입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-384">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="db630-385"><paramref name="startAngle" /> 매개 변수에서 호의 끝점까지 시계 방향으로 측정된 각도(단위: 도)입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-385">Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to ending point of the arc.</span></span></param>
        <summary><span data-ttu-id="db630-386">좌표, 너비, 높이의 쌍으로 지정된 타원의 부분을 나타내는 호를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-386">Draws an arc representing a portion of an ellipse specified by a pair of coordinates, a width, and a height.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-387">이 메서드는 타원의 경계의 일부는 호를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-387">This method draws an arc that is a portion of the perimeter of an ellipse.</span></span> <span data-ttu-id="db630-388">타원은 사각형의 경계에 의해 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-388">The ellipse is defined by the boundaries of a rectangle.</span></span> <span data-ttu-id="db630-389">호는 경계 간에 타원의 부분을 `startAngle` 매개 변수 및 `startAngle`  +  `sweepAngle` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-389">The arc is the portion of the perimeter of the ellipse between the `startAngle` parameter and the `startAngle` + `sweepAngle` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-390">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-390">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-391">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-391">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-392">Black 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-392">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="db630-393">타원의 경계가 사각형의 크기와 위치를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-393">Creates the position and size of a rectangle to bound an ellipse.</span></span>  
  
-   <span data-ttu-id="db630-394">시작 (45도) 및 (270) 스윕 각도 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-394">Defines the start (45 degrees) and sweep (270 degrees) angles.</span></span>  
  
-   <span data-ttu-id="db630-395">화면에 타원형 호를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-395">Draws the elliptical arc to the screen.</span></span>  
  
 <span data-ttu-id="db630-396">결과 사이 있는 세그먼트를 누락 된 부분 타원을 + 및-x 축의 45도 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-396">The result is a partial ellipse missing a segment between + and - 45 degrees of the x axis.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-397"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-397"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawArc">
      <MemberSignature Language="C#" Value="public void DrawArc (System.Drawing.Pen pen, float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawArc(class System.Drawing.Pen pen, float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawArc(System::Drawing::Pen ^ pen, float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.DrawArc : System.Drawing.Pen * single * single * single * single * single * single -&gt; unit" Usage="graphics.DrawArc (pen, x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-398">호의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-398"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the arc.</span></span></param>
        <param name="x"><span data-ttu-id="db630-399">타원을 정의하는 사각형의 왼쪽 위 모퉁이에 대한 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-399">The x-coordinate of the upper-left corner of the rectangle that defines the ellipse.</span></span></param>
        <param name="y"><span data-ttu-id="db630-400">타원을 정의하는 사각형의 왼쪽 위 모퉁이에 대한 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-400">The y-coordinate of the upper-left corner of the rectangle that defines the ellipse.</span></span></param>
        <param name="width"><span data-ttu-id="db630-401">타원을 정의하는 사각형의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-401">Width of the rectangle that defines the ellipse.</span></span></param>
        <param name="height"><span data-ttu-id="db630-402">타원을 정의하는 사각형의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-402">Height of the rectangle that defines the ellipse.</span></span></param>
        <param name="startAngle"><span data-ttu-id="db630-403">x-축에서 호의 시작점까지 시계 방향으로 측정된 각도(단위: 도)입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-403">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="db630-404"><paramref name="startAngle" /> 매개 변수에서 호의 끝점까지 시계 방향으로 측정된 각도(단위: 도)입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-404">Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to ending point of the arc.</span></span></param>
        <summary><span data-ttu-id="db630-405">좌표, 너비, 높이의 쌍으로 지정된 타원의 부분을 나타내는 호를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-405">Draws an arc representing a portion of an ellipse specified by a pair of coordinates, a width, and a height.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-406">이 메서드는 타원의 경계의 일부는 호를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-406">This method draws an arc that is a portion of the perimeter of an ellipse.</span></span> <span data-ttu-id="db630-407">타원은 사각형의 경계에 의해 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-407">The ellipse is defined by the boundaries of a rectangle.</span></span> <span data-ttu-id="db630-408">호는 경계 간에 타원의 부분을 `startAngle` 매개 변수 및 `startAngle`  +  `sweepAngle` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-408">The arc is the portion of the perimeter of the ellipse between the `startAngle` parameter and the `startAngle` + `sweepAngle` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-409">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-409">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-410">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-410">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-411">Black 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-411">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="db630-412">타원의 경계가 사각형의 크기와 위치를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-412">Creates the position and size of a rectangle to bound an ellipse.</span></span>  
  
-   <span data-ttu-id="db630-413">시작 (45도) 및 (270) 스윕 각도 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-413">Defines the start (45 degrees) and sweep (270 degrees) angles.</span></span>  
  
-   <span data-ttu-id="db630-414">화면에 타원형 호를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-414">Draws the elliptical arc to the screen.</span></span>  
  
 <span data-ttu-id="db630-415">결과 사이 있는 세그먼트를 누락 된 부분 타원을 + 및-x 축의 45도 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-415">The result is a partial ellipse missing a segment between + and - 45 degrees of the x axis.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#10)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#10)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-416"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-416"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawBezier">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db630-417">네 개의 <see cref="T:System.Drawing.Point" /> 구조체로 정의되는 베지어 스플라인을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-417">Draws a Bézier spline defined by four <see cref="T:System.Drawing.Point" /> structures.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawBezier">
      <MemberSignature Language="C#" Value="public void DrawBezier (System.Drawing.Pen pen, System.Drawing.Point pt1, System.Drawing.Point pt2, System.Drawing.Point pt3, System.Drawing.Point pt4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawBezier(class System.Drawing.Pen pen, valuetype System.Drawing.Point pt1, valuetype System.Drawing.Point pt2, valuetype System.Drawing.Point pt3, valuetype System.Drawing.Point pt4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawBezier(System::Drawing::Pen ^ pen, System::Drawing::Point pt1, System::Drawing::Point pt2, System::Drawing::Point pt3, System::Drawing::Point pt4);" />
      <MemberSignature Language="F#" Value="member this.DrawBezier : System.Drawing.Pen * System.Drawing.Point * System.Drawing.Point * System.Drawing.Point * System.Drawing.Point -&gt; unit" Usage="graphics.DrawBezier (pen, pt1, pt2, pt3, pt4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="pt1" Type="System.Drawing.Point" />
        <Parameter Name="pt2" Type="System.Drawing.Point" />
        <Parameter Name="pt3" Type="System.Drawing.Point" />
        <Parameter Name="pt4" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-418">곡선의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-418"><see cref="T:System.Drawing.Pen" /> structure that determines the color, width, and style of the curve.</span></span></param>
        <param name="pt1"><span data-ttu-id="db630-419">곡선의 시작점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-419"><see cref="T:System.Drawing.Point" /> structure that represents the starting point of the curve.</span></span></param>
        <param name="pt2"><span data-ttu-id="db630-420">곡선의 첫째 제어점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-420"><see cref="T:System.Drawing.Point" /> structure that represents the first control point for the curve.</span></span></param>
        <param name="pt3"><span data-ttu-id="db630-421">곡선의 둘째 제어점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-421"><see cref="T:System.Drawing.Point" /> structure that represents the second control point for the curve.</span></span></param>
        <param name="pt4"><span data-ttu-id="db630-422">곡선의 끝점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-422"><see cref="T:System.Drawing.Point" /> structure that represents the ending point of the curve.</span></span></param>
        <summary><span data-ttu-id="db630-423">네 개의 <see cref="T:System.Drawing.Point" /> 구조체로 정의되는 베지어 스플라인을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-423">Draws a Bézier spline defined by four <see cref="T:System.Drawing.Point" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-424">베 지 어 곡선의 첫 번째 요소에서 네 번째 지점에 그려집니다.</span><span class="sxs-lookup"><span data-stu-id="db630-424">The Bézier curve is drawn from the first point to the fourth point.</span></span> <span data-ttu-id="db630-425">두 번째 및 세 번째 요소는 곡선의 모양을 결정 하는 컨트롤 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-425">The second and third points are control points that determine the shape of the curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-426">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-426">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-427">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-427">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-428">Black 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-428">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="db630-429">시작, 종료 및 곡선에 대 한 두 개의 제어점을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-429">Creates the start, end, and two control points for the curve.</span></span>  
  
-   <span data-ttu-id="db630-430">화면에 베 지 어 곡선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-430">Draws the Bézier curve to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#11](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#11)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#11)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-431"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-431"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawBezier">
      <MemberSignature Language="C#" Value="public void DrawBezier (System.Drawing.Pen pen, System.Drawing.PointF pt1, System.Drawing.PointF pt2, System.Drawing.PointF pt3, System.Drawing.PointF pt4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawBezier(class System.Drawing.Pen pen, valuetype System.Drawing.PointF pt1, valuetype System.Drawing.PointF pt2, valuetype System.Drawing.PointF pt3, valuetype System.Drawing.PointF pt4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawBezier(System::Drawing::Pen ^ pen, System::Drawing::PointF pt1, System::Drawing::PointF pt2, System::Drawing::PointF pt3, System::Drawing::PointF pt4);" />
      <MemberSignature Language="F#" Value="member this.DrawBezier : System.Drawing.Pen * System.Drawing.PointF * System.Drawing.PointF * System.Drawing.PointF * System.Drawing.PointF -&gt; unit" Usage="graphics.DrawBezier (pen, pt1, pt2, pt3, pt4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="pt1" Type="System.Drawing.PointF" />
        <Parameter Name="pt2" Type="System.Drawing.PointF" />
        <Parameter Name="pt3" Type="System.Drawing.PointF" />
        <Parameter Name="pt4" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-432">곡선의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-432"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</span></span></param>
        <param name="pt1"><span data-ttu-id="db630-433">곡선의 시작점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-433"><see cref="T:System.Drawing.PointF" /> structure that represents the starting point of the curve.</span></span></param>
        <param name="pt2"><span data-ttu-id="db630-434">곡선의 첫째 제어점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-434"><see cref="T:System.Drawing.PointF" /> structure that represents the first control point for the curve.</span></span></param>
        <param name="pt3"><span data-ttu-id="db630-435">곡선의 둘째 제어점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-435"><see cref="T:System.Drawing.PointF" /> structure that represents the second control point for the curve.</span></span></param>
        <param name="pt4"><span data-ttu-id="db630-436">곡선의 끝점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-436"><see cref="T:System.Drawing.PointF" /> structure that represents the ending point of the curve.</span></span></param>
        <summary><span data-ttu-id="db630-437">네 개의 <see cref="T:System.Drawing.PointF" /> 구조체로 정의되는 베지어 스플라인을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-437">Draws a Bézier spline defined by four <see cref="T:System.Drawing.PointF" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-438">베 지 어 스플라인은 첫 번째 요소에서 네 번째 지점에 그려집니다.</span><span class="sxs-lookup"><span data-stu-id="db630-438">The Bézier spline is drawn from the first point to the fourth point.</span></span> <span data-ttu-id="db630-439">두 번째 및 세 번째 요소는 곡선의 모양을 결정 하는 컨트롤 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-439">The second and third points are control points that determine the shape of the curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-440">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-440">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-441">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-441">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-442">Black 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-442">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="db630-443">시작, 종료 및 곡선에 대 한 두 개의 제어점을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-443">Creates the start, end, and two control points for the curve.</span></span>  
  
-   <span data-ttu-id="db630-444">화면에 베 지 어 곡선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-444">Draws the Bézier curve to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#12](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#12)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#12)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-445"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-445"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawBezier">
      <MemberSignature Language="C#" Value="public void DrawBezier (System.Drawing.Pen pen, float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawBezier(class System.Drawing.Pen pen, float32 x1, float32 y1, float32 x2, float32 y2, float32 x3, float32 y3, float32 x4, float32 y4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawBezier(System::Drawing::Pen ^ pen, float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4);" />
      <MemberSignature Language="F#" Value="member this.DrawBezier : System.Drawing.Pen * single * single * single * single * single * single * single * single -&gt; unit" Usage="graphics.DrawBezier (pen, x1, y1, x2, y2, x3, y3, x4, y4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="x1" Type="System.Single" />
        <Parameter Name="y1" Type="System.Single" />
        <Parameter Name="x2" Type="System.Single" />
        <Parameter Name="y2" Type="System.Single" />
        <Parameter Name="x3" Type="System.Single" />
        <Parameter Name="y3" Type="System.Single" />
        <Parameter Name="x4" Type="System.Single" />
        <Parameter Name="y4" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-446">곡선의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-446"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</span></span></param>
        <param name="x1"><span data-ttu-id="db630-447">곡선의 시작점에 대한 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-447">The x-coordinate of the starting point of the curve.</span></span></param>
        <param name="y1"><span data-ttu-id="db630-448">곡선의 시작점에 대한 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-448">The y-coordinate of the starting point of the curve.</span></span></param>
        <param name="x2"><span data-ttu-id="db630-449">곡선의 첫째 제어점에 대한 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-449">The x-coordinate of the first control point of the curve.</span></span></param>
        <param name="y2"><span data-ttu-id="db630-450">곡선의 첫째 제어점에 대한 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-450">The y-coordinate of the first control point of the curve.</span></span></param>
        <param name="x3"><span data-ttu-id="db630-451">곡선의 둘째 제어점에 대한 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-451">The x-coordinate of the second control point of the curve.</span></span></param>
        <param name="y3"><span data-ttu-id="db630-452">곡선의 둘째 제어점에 대한 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-452">The y-coordinate of the second control point of the curve.</span></span></param>
        <param name="x4"><span data-ttu-id="db630-453">곡선의 끝점에 대한 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-453">The x-coordinate of the ending point of the curve.</span></span></param>
        <param name="y4"><span data-ttu-id="db630-454">곡선의 끝점에 대한 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-454">The y-coordinate of the ending point of the curve.</span></span></param>
        <summary><span data-ttu-id="db630-455">점을 나타내는 순서가 있는 네 개의 좌표 쌍에 의해 정의되는 베지어 스플라인을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-455">Draws a Bézier spline defined by four ordered pairs of coordinates that represent points.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-456">베 지 어 스플라인은 첫 번째 요소에서 네 번째 지점에 그려집니다.</span><span class="sxs-lookup"><span data-stu-id="db630-456">The Bézier spline is drawn from the first point to the fourth point.</span></span> <span data-ttu-id="db630-457">두 번째 및 세 번째 요소는 곡선의 모양을 결정 하는 컨트롤 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-457">The second and third points are control points that determine the shape of the curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-458">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-458">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-459">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-459">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-460">Black 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-460">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="db630-461">시작, 종료 및 곡선에 대 한 두 개의 제어점 좌표를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-461">Creates the coordinates of the start, end, and two control points for the curve.</span></span>  
  
-   <span data-ttu-id="db630-462">화면에 베 지 어 곡선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-462">Draws the Bézier curve to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#13](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#13)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#13)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-463"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-463"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawBeziers">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db630-464"><see cref="T:System.Drawing.Point" /> 구조체의 배열에서 일련의 베지어 스플라인을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-464">Draws a series of Bézier splines from an array of <see cref="T:System.Drawing.Point" /> structures.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawBeziers">
      <MemberSignature Language="C#" Value="public void DrawBeziers (System.Drawing.Pen pen, System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawBeziers(class System.Drawing.Pen pen, valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawBeziers(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.DrawBeziers : System.Drawing.Pen * System.Drawing.Point[] -&gt; unit" Usage="graphics.DrawBeziers (pen, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-465">곡선의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-465"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</span></span></param>
        <param name="points"><span data-ttu-id="db630-466">곡선을 결정하는 점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-466">Array of <see cref="T:System.Drawing.Point" /> structures that represent the points that determine the curve.</span></span> <span data-ttu-id="db630-467">배열의 점 개수는 3의 배수에 1을 더한 값이어야 합니다(예: 4, 7, 10 등).</span><span class="sxs-lookup"><span data-stu-id="db630-467">The number of points in the array should be a multiple of 3 plus 1, such as 4, 7, or 10.</span></span></param>
        <summary><span data-ttu-id="db630-468"><see cref="T:System.Drawing.Point" /> 구조체의 배열에서 일련의 베지어 스플라인을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-468">Draws a series of Bézier splines from an array of <see cref="T:System.Drawing.Point" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-469">배열의 점 개수 첫 번째 스플라인 4 개의 점이 필요 하 고 다른 스플라인 필요한 3 개의 점 때문에 1을 더한 3의 배수 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-469">The number of points in the array should be a multiple of 3 plus 1 because the first spline requires 4 points and any other splines require 3 points each.</span></span> <span data-ttu-id="db630-470">첫 번째 베 지 어 스플라인은 첫 번째 요소에서 점 배열에서 네 번째 요소에 그려집니다.</span><span class="sxs-lookup"><span data-stu-id="db630-470">The first Bézier spline is drawn from the first point to the fourth point in the point array.</span></span> <span data-ttu-id="db630-471">두 번째 및 세 번째 요소는 곡선의 모양을 결정 하는 컨트롤 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-471">The second and third points are control points that determine the shape of the curve.</span></span> <span data-ttu-id="db630-472">각 후속 곡선 정확히 세 개 이상의 점 해야 합니다: 두 개 이상의 지점 및 끝 지점 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-472">Each subsequent curve needs exactly three more points: two more control points and an ending point.</span></span> <span data-ttu-id="db630-473">이전 곡선의 끝 지점은 각 추가 곡선에 대 한 시작 점으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-473">The ending point of the previous curve is used as the starting point for each additional curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-474">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-474">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-475">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-475">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-476">Black 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-476">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="db630-477">시작, 종료 및 첫 번째 곡선 및 끝점에 대 한 두 개의 제어점과 두 번째 곡선을 두 개의 제어 지점을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-477">Creates the start, end, and two control points for a first curve and endpoint and two control points for a second curve.</span></span>  
  
-   <span data-ttu-id="db630-478">화면에 연속 된 베 지 어 곡선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-478">Draws the successive Bézier curves to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#14](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#14)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#14](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#14)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#14](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-479"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-479"><paramref name="pen" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="db630-480">또는</span><span class="sxs-lookup"><span data-stu-id="db630-480">-or-</span></span> 
 <span data-ttu-id="db630-481"><paramref name="points" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-481"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawBeziers">
      <MemberSignature Language="C#" Value="public void DrawBeziers (System.Drawing.Pen pen, System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawBeziers(class System.Drawing.Pen pen, valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawBeziers(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.DrawBeziers : System.Drawing.Pen * System.Drawing.PointF[] -&gt; unit" Usage="graphics.DrawBeziers (pen, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-482">곡선의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-482"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</span></span></param>
        <param name="points"><span data-ttu-id="db630-483">곡선을 결정하는 점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-483">Array of <see cref="T:System.Drawing.PointF" /> structures that represent the points that determine the curve.</span></span> <span data-ttu-id="db630-484">배열의 점 개수는 3의 배수에 1을 더한 값이어야 합니다(예: 4, 7, 10 등).</span><span class="sxs-lookup"><span data-stu-id="db630-484">The number of points in the array should be a multiple of 3 plus 1, such as 4, 7, or 10.</span></span></param>
        <summary><span data-ttu-id="db630-485"><see cref="T:System.Drawing.PointF" /> 구조체의 배열에서 일련의 베지어 스플라인을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-485">Draws a series of Bézier splines from an array of <see cref="T:System.Drawing.PointF" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-486">배열의 점 개수 첫 번째 스플라인 4 개의 점이 필요 하 고 다른 스플라인 필요한 3 개의 점 때문에 1을 더한 3의 배수 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-486">The number of points in the array should be a multiple of 3 plus 1 because the first spline requires 4 points and any other splines require 3 points each.</span></span> <span data-ttu-id="db630-487">첫 번째 베 지 어 곡선의 첫 번째 요소에서 점 배열에서 네 번째 요소에 그려집니다.</span><span class="sxs-lookup"><span data-stu-id="db630-487">The first Bézier curve is drawn from the first point to the fourth point in the point array.</span></span> <span data-ttu-id="db630-488">두 번째 및 세 번째 요소는 곡선의 모양을 결정 하는 컨트롤 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-488">The second and third points are control points that determine the shape of the curve.</span></span> <span data-ttu-id="db630-489">각 후속 곡선 정확히 세 개 이상의 점 해야 합니다: 두 개 이상의 지점 및 끝 지점 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-489">Each subsequent curve needs exactly three more points: two more control points and an ending point.</span></span> <span data-ttu-id="db630-490">이전 곡선의 끝 지점은 각 추가 곡선에 대 한 시작 점으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-490">The ending point of the previous curve is used as the starting point for each additional curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-491">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-491">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-492">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-492">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-493">Black 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-493">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="db630-494">시작, 종료 및 첫 번째 곡선 및 끝점에 대 한 두 개의 제어점과 두 번째 곡선을 두 개의 제어 지점을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-494">Creates the start, end, and two control points for a first curve and endpoint and two control points for a second curve.</span></span>  
  
-   <span data-ttu-id="db630-495">화면에 연속 된 베 지 어 곡선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-495">Draws the successive Bézier curves to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#15)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#15)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-496"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-496"><paramref name="pen" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="db630-497">또는</span><span class="sxs-lookup"><span data-stu-id="db630-497">-or-</span></span> 
 <span data-ttu-id="db630-498"><paramref name="points" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-498"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawClosedCurve">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db630-499"><see cref="T:System.Drawing.Point" /> 구조체의 배열에 의해 정의되는 폐쇄형 카디널 스플라인을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-499">Draws a closed cardinal spline defined by an array of <see cref="T:System.Drawing.Point" /> structures.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawClosedCurve">
      <MemberSignature Language="C#" Value="public void DrawClosedCurve (System.Drawing.Pen pen, System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawClosedCurve(class System.Drawing.Pen pen, valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawClosedCurve(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.DrawClosedCurve : System.Drawing.Pen * System.Drawing.Point[] -&gt; unit" Usage="graphics.DrawClosedCurve (pen, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-500">곡선의 색, 너비 및 높이를 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-500"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and height of the curve.</span></span></param>
        <param name="points"><span data-ttu-id="db630-501">스플라인을 정의하는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-501">Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.</span></span></param>
        <summary><span data-ttu-id="db630-502"><see cref="T:System.Drawing.Point" /> 구조체의 배열에 의해 정의되는 폐쇄형 카디널 스플라인을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-502">Draws a closed cardinal spline defined by an array of <see cref="T:System.Drawing.Point" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-503">이 메서드는 배열의 각 요소를 통과 하는 폐쇄형된 카디널 스플라인을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-503">This method draws a closed cardinal spline that passes through each point in the array.</span></span> <span data-ttu-id="db630-504">마지막 지점을 첫 번째 요소와 일치 하지 않는 경우 추가 곡선 세그먼트를 그림을 닫으면 첫 번째 지점과 마지막 지점에서 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-504">If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close the figure.</span></span>  
  
 <span data-ttu-id="db630-505">점 배열에 4 개 이상 있어야 <xref:System.Drawing.Point> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-505">The array of points must contain at least four <xref:System.Drawing.Point> structures.</span></span>  
  
 <span data-ttu-id="db630-506">이 메서드는 0.5의 기본 장력을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-506">This method uses a default tension of 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-507">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-507">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-508">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-508">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-509">빨간색 및 녹색 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-509">Creates red and green pens.</span></span>  
  
-   <span data-ttu-id="db630-510">7 개의 점이 곡선을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-510">Creates seven points to define a curve.</span></span>  
  
-   <span data-ttu-id="db630-511">닫힌 다각형는 7 개의 점이 간의 7 빨간색 직선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-511">Draws seven red straight lines between the seven points to form a closed polygon.</span></span>  
  
-   <span data-ttu-id="db630-512">7 개의 점이 녹색 닫힌된 곡선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-512">Draws a green closed curve through the seven points.</span></span>  
  
 <span data-ttu-id="db630-513">메서드는 0.5의 기본 장력을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-513">The method uses a default tension of 0.5.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#16](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#16)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#16](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#16)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#16](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-514"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-514"><paramref name="pen" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="db630-515">또는</span><span class="sxs-lookup"><span data-stu-id="db630-515">-or-</span></span> 
 <span data-ttu-id="db630-516"><paramref name="points" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-516"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawClosedCurve">
      <MemberSignature Language="C#" Value="public void DrawClosedCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawClosedCurve(class System.Drawing.Pen pen, valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawClosedCurve(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.DrawClosedCurve : System.Drawing.Pen * System.Drawing.PointF[] -&gt; unit" Usage="graphics.DrawClosedCurve (pen, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-517">곡선의 색, 너비 및 높이를 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-517"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and height of the curve.</span></span></param>
        <param name="points"><span data-ttu-id="db630-518">스플라인을 정의하는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-518">Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.</span></span></param>
        <summary><span data-ttu-id="db630-519"><see cref="T:System.Drawing.PointF" /> 구조체의 배열에 의해 정의되는 폐쇄형 카디널 스플라인을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-519">Draws a closed cardinal spline defined by an array of <see cref="T:System.Drawing.PointF" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-520">이 메서드는 배열의 각 요소를 통과 하는 폐쇄형된 카디널 스플라인을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-520">This method draws a closed cardinal spline that passes through each point in the array.</span></span> <span data-ttu-id="db630-521">마지막 지점을 첫 번째 요소와 일치 하지 않는 경우 추가 곡선 세그먼트를 닫아야를 첫 번째 지점과 마지막 지점에서 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-521">If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.</span></span>  
  
 <span data-ttu-id="db630-522">점 배열에 4 개 이상 있어야 <xref:System.Drawing.PointF> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-522">The array of points must contain at least four <xref:System.Drawing.PointF> structures.</span></span>  
  
 <span data-ttu-id="db630-523">이 메서드는 0.5의 기본 장력을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-523">This method uses a default tension of 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-524">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-524">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-525">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-525">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-526">빨간색 및 녹색 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-526">Creates red and green pens.</span></span>  
  
-   <span data-ttu-id="db630-527">7 개의 점이 곡선을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-527">Creates seven points to define a curve.</span></span>  
  
-   <span data-ttu-id="db630-528">닫힌 다각형는 7 개의 점이 간의 7 빨간색 직선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-528">Draws seven red straight lines between the seven points to form a closed polygon.</span></span>  
  
-   <span data-ttu-id="db630-529">7 개의 점이 녹색 닫힌된 곡선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-529">Draws a green closed curve through the seven points.</span></span>  
  
 <span data-ttu-id="db630-530">메서드는 0.5의 기본 장력을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-530">The method uses a default tension of 0.5.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#18](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#18)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#18](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#18)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#18](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-531"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-531"><paramref name="pen" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="db630-532">또는</span><span class="sxs-lookup"><span data-stu-id="db630-532">-or-</span></span> 
 <span data-ttu-id="db630-533"><paramref name="points" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-533"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawClosedCurve">
      <MemberSignature Language="C#" Value="public void DrawClosedCurve (System.Drawing.Pen pen, System.Drawing.Point[] points, float tension, System.Drawing.Drawing2D.FillMode fillmode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawClosedCurve(class System.Drawing.Pen pen, valuetype System.Drawing.Point[] points, float32 tension, valuetype System.Drawing.Drawing2D.FillMode fillmode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawClosedCurve(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::Point&gt; ^ points, float tension, System::Drawing::Drawing2D::FillMode fillmode);" />
      <MemberSignature Language="F#" Value="member this.DrawClosedCurve : System.Drawing.Pen * System.Drawing.Point[] * single * System.Drawing.Drawing2D.FillMode -&gt; unit" Usage="graphics.DrawClosedCurve (pen, points, tension, fillmode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="tension" Type="System.Single" />
        <Parameter Name="fillmode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-534">곡선의 색, 너비 및 높이를 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-534"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and height of the curve.</span></span></param>
        <param name="points"><span data-ttu-id="db630-535">스플라인을 정의하는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-535">Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.</span></span></param>
        <param name="tension"><span data-ttu-id="db630-536">곡선의 장력을 지정하는 0.0F 보다 크거나 같은 값입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-536">Value greater than or equal to 0.0F that specifies the tension of the curve.</span></span></param>
        <param name="fillmode"><span data-ttu-id="db630-537">곡선이 채워지는 방법을 결정하는 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-537">Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the curve is filled.</span></span> <span data-ttu-id="db630-538">이 매개 변수는 필수이지만 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-538">This parameter is required but ignored.</span></span></param>
        <summary><span data-ttu-id="db630-539">지정된 장력을 사용하여 <see cref="T:System.Drawing.Point" /> 구조체의 배열에 의해 정의되는 폐쇄형 카디널 스플라인을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-539">Draws a closed cardinal spline defined by an array of <see cref="T:System.Drawing.Point" /> structures using a specified tension.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-540">이 메서드는 배열의 각 요소를 통과 하는 폐쇄형된 카디널 스플라인을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-540">This method draws a closed cardinal spline that passes through each point in the array.</span></span> <span data-ttu-id="db630-541">마지막 지점을 첫 번째 요소와 일치 하지 않는 경우 추가 곡선 세그먼트를 닫아야를 첫 번째 지점과 마지막 지점에서 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-541">If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.</span></span>  
  
 <span data-ttu-id="db630-542">점 배열에 4 개 이상 있어야 <xref:System.Drawing.Point> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-542">The array of points must contain at least four <xref:System.Drawing.Point> structures.</span></span>  
  
 <span data-ttu-id="db630-543">`tension` 매개 변수는 스플라인의 모양을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-543">The `tension` parameter determines the shape of the spline.</span></span> <span data-ttu-id="db630-544">경우 값은 `tension` 매개 변수는 0.0F,이 메서드는 요소를 연결 하려면 직선 세그먼트를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-544">If the value of the `tension` parameter is 0.0F, this method draws straight line segments to connect the points.</span></span> <span data-ttu-id="db630-545">일반적으로 `tension` 매개 변수 보다 작거나 1.0F로는 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-545">Usually, the `tension` parameter is less than or equal to 1.0F.</span></span> <span data-ttu-id="db630-546">1.0F 값 이상한 결과 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-546">Values over 1.0F produce unusual results.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-547">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-547">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-548">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-548">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-549">빨간색 및 녹색 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-549">Creates red and green pens.</span></span>  
  
-   <span data-ttu-id="db630-550">7 개의 점이 곡선을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-550">Creates seven points to define the curve.</span></span>  
  
-   <span data-ttu-id="db630-551">다각형을 7 개의 점이 간의 7 빨간색 직선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-551">Draws seven red straight lines between the seven points to form a polygon.</span></span>  
  
-   <span data-ttu-id="db630-552">장력을 채우기 모드 설정을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-552">Creates tension and fill mode settings.</span></span>  
  
-   <span data-ttu-id="db630-553">7 개의 점이 녹색 닫힌된 곡선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-553">Draws a green closed curve through the seven points.</span></span>  
  
 <span data-ttu-id="db630-554">1.0의 장력을 사용 하 여 메서드와 채우기 모드를 설정 `FillMode.Alternate`합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-554">The method uses a tension of 1.0 and sets the fill mode to `FillMode.Alternate`.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#17](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#17)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#17](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#17)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#17](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-555"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-555"><paramref name="pen" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="db630-556">또는</span><span class="sxs-lookup"><span data-stu-id="db630-556">-or-</span></span> 
 <span data-ttu-id="db630-557"><paramref name="points" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-557"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawClosedCurve">
      <MemberSignature Language="C#" Value="public void DrawClosedCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points, float tension, System.Drawing.Drawing2D.FillMode fillmode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawClosedCurve(class System.Drawing.Pen pen, valuetype System.Drawing.PointF[] points, float32 tension, valuetype System.Drawing.Drawing2D.FillMode fillmode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawClosedCurve(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::PointF&gt; ^ points, float tension, System::Drawing::Drawing2D::FillMode fillmode);" />
      <MemberSignature Language="F#" Value="member this.DrawClosedCurve : System.Drawing.Pen * System.Drawing.PointF[] * single * System.Drawing.Drawing2D.FillMode -&gt; unit" Usage="graphics.DrawClosedCurve (pen, points, tension, fillmode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="tension" Type="System.Single" />
        <Parameter Name="fillmode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-558">곡선의 색, 너비 및 높이를 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-558"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and height of the curve.</span></span></param>
        <param name="points"><span data-ttu-id="db630-559">스플라인을 정의하는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-559">Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.</span></span></param>
        <param name="tension"><span data-ttu-id="db630-560">곡선의 장력을 지정하는 0.0F 보다 크거나 같은 값입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-560">Value greater than or equal to 0.0F that specifies the tension of the curve.</span></span></param>
        <param name="fillmode"><span data-ttu-id="db630-561">곡선이 채워지는 방법을 결정하는 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-561">Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the curve is filled.</span></span> <span data-ttu-id="db630-562">이 매개 변수는 필수이지만 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-562">This parameter is required but is ignored.</span></span></param>
        <summary><span data-ttu-id="db630-563">지정된 장력을 사용하여 <see cref="T:System.Drawing.PointF" /> 구조체의 배열에 의해 정의되는 폐쇄형 카디널 스플라인을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-563">Draws a closed cardinal spline defined by an array of <see cref="T:System.Drawing.PointF" /> structures using a specified tension.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-564">이 메서드는 배열의 각 요소를 통과 하는 폐쇄형된 카디널 스플라인을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-564">This method draws a closed cardinal spline that passes through each point in the array.</span></span> <span data-ttu-id="db630-565">마지막 지점을 첫 번째 요소와 일치 하지 않는 경우 추가 곡선 세그먼트를 닫아야를 첫 번째 지점과 마지막 지점에서 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-565">If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.</span></span>  
  
 <span data-ttu-id="db630-566">점 배열에 4 개 이상 있어야 <xref:System.Drawing.PointF> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-566">The array of points must contain at least four <xref:System.Drawing.PointF> structures.</span></span>  
  
 <span data-ttu-id="db630-567">`tension` 매개 변수는 스플라인의 모양을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-567">The `tension` parameter determines the shape of the spline.</span></span> <span data-ttu-id="db630-568">경우 값은 `tension` 매개 변수는 0.0F,이 메서드는 요소를 연결 하려면 직선 세그먼트를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-568">If the value of the `tension` parameter is 0.0F, this method draws straight line segments to connect the points.</span></span> <span data-ttu-id="db630-569">일반적으로 `tension` 매개 변수 보다 작거나 1.0F로는 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-569">Usually, the `tension` parameter is less than or equal to 1.0F.</span></span> <span data-ttu-id="db630-570">1.0F 값 이상한 결과 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-570">Values over 1.0F produce unusual results.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-571">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-571">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-572">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-572">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-573">빨간색 및 녹색 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-573">Creates red and green pens.</span></span>  
  
-   <span data-ttu-id="db630-574">7 개의 점이 곡선을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-574">Creates seven points to define the curve.</span></span>  
  
-   <span data-ttu-id="db630-575">다각형을 7 개의 점이 간의 7 빨간색 직선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-575">Draws seven red straight lines between the seven points to form a polygon.</span></span>  
  
-   <span data-ttu-id="db630-576">장력을 채우기 모드 설정을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-576">Creates tension and fill mode settings.</span></span>  
  
-   <span data-ttu-id="db630-577">7 개의 점이 녹색 닫힌된 곡선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-577">Draws a green closed curve through the seven points.</span></span>  
  
 <span data-ttu-id="db630-578">1.0의 장력을 사용 하 여 메서드와 채우기 모드를 설정 `FillMode.Alternate`합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-578">The method uses a tension of 1.0 and sets the fill mode to `FillMode.Alternate`.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#19](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#19)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#19](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#19)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#19](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-579"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-579"><paramref name="pen" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="db630-580">또는</span><span class="sxs-lookup"><span data-stu-id="db630-580">-or-</span></span> 
 <span data-ttu-id="db630-581"><paramref name="points" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-581"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawCurve">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db630-582"><see cref="T:System.Drawing.Point" /> 구조체의 지정된 배열을 따라 카디널 스플라인을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-582">Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.Point" /> structures.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawCurve">
      <MemberSignature Language="C#" Value="public void DrawCurve (System.Drawing.Pen pen, System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawCurve(class System.Drawing.Pen pen, valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawCurve(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.DrawCurve : System.Drawing.Pen * System.Drawing.Point[] -&gt; unit" Usage="graphics.DrawCurve (pen, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-583">곡선의 색, 너비 및 높이를 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-583"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and height of the curve.</span></span></param>
        <param name="points"><span data-ttu-id="db630-584">스플라인을 정의하는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-584">Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.</span></span></param>
        <summary><span data-ttu-id="db630-585"><see cref="T:System.Drawing.Point" /> 구조체의 지정된 배열을 따라 카디널 스플라인을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-585">Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.Point" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-586">이 메서드는 배열의 각 요소를 통과 하는 카디널 스플라인을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-586">This method draws a cardinal spline that passes through each point in the array.</span></span>  
  
 <span data-ttu-id="db630-587">점 배열에는 세 가지 이상을 포함 해야 합니다 <xref:System.Drawing.Point> 는 곡선을 그릴 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-587">The array of points must contain at least three <xref:System.Drawing.Point> structures for a curve to be drawn.</span></span>  
  
 <span data-ttu-id="db630-588">이 메서드는 0.5의 기본 장력을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-588">This method uses a default tension of 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-589">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-589">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-590">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-590">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-591">빨간색 및 녹색 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-591">Creates red and green pens.</span></span>  
  
-   <span data-ttu-id="db630-592">7 개의 점이 곡선을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-592">Creates seven points to define a curve.</span></span>  
  
-   <span data-ttu-id="db630-593">불완전 한 다각형을 7 개의 점이 사이 6 빨간색 직선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-593">Draws six red straight lines between the seven points to form an incomplete polygon.</span></span>  
  
-   <span data-ttu-id="db630-594">7 개의 점이 통해 열린 녹색 곡선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-594">Draws an open green curve through the seven points.</span></span>  
  
 <span data-ttu-id="db630-595">메서드는 0.5의 기본 장력을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-595">The method uses a default tension of 0.5.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#20)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#20)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-596"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-596"><paramref name="pen" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="db630-597">또는</span><span class="sxs-lookup"><span data-stu-id="db630-597">-or-</span></span> 
 <span data-ttu-id="db630-598"><paramref name="points" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-598"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawCurve">
      <MemberSignature Language="C#" Value="public void DrawCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawCurve(class System.Drawing.Pen pen, valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawCurve(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.DrawCurve : System.Drawing.Pen * System.Drawing.PointF[] -&gt; unit" Usage="graphics.DrawCurve (pen, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-599">곡선의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-599"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</span></span></param>
        <param name="points"><span data-ttu-id="db630-600">스플라인을 정의하는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-600">Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.</span></span></param>
        <summary><span data-ttu-id="db630-601"><see cref="T:System.Drawing.PointF" /> 구조체의 지정된 배열을 따라 카디널 스플라인을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-601">Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.PointF" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-602">이 메서드는 배열의 각 요소를 통과 하는 카디널 스플라인을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-602">This method draws a cardinal spline that passes through each point in the array.</span></span>  
  
 <span data-ttu-id="db630-603">점 배열에는 세 가지 이상을 포함 해야 합니다 <xref:System.Drawing.PointF> 는 곡선을 그릴 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-603">The array of points must contain at least three <xref:System.Drawing.PointF> structures for a curve to be drawn.</span></span>  
  
 <span data-ttu-id="db630-604">이 메서드는 0.5의 기본 장력을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-604">This method uses a default tension of 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-605">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-605">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-606">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-606">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-607">빨간색 및 녹색 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-607">Creates red and green pens.</span></span>  
  
-   <span data-ttu-id="db630-608">7 개의 점이 곡선을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-608">Creates seven points to define a curve.</span></span>  
  
-   <span data-ttu-id="db630-609">불완전 한 다각형을 7 개의 점이 사이 6 빨간색 직선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-609">Draws six red straight lines between the seven points to form an incomplete polygon.</span></span>  
  
-   <span data-ttu-id="db630-610">7 개의 점이 통해 열린 녹색 곡선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-610">Draws an open green curve through the seven points.</span></span>  
  
 <span data-ttu-id="db630-611">메서드는 0.5의 기본 장력을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-611">The method uses a default tension of 0.5.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#23](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#23)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#23](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#23)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#23](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-612"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-612"><paramref name="pen" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="db630-613">또는</span><span class="sxs-lookup"><span data-stu-id="db630-613">-or-</span></span> 
 <span data-ttu-id="db630-614"><paramref name="points" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-614"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawCurve">
      <MemberSignature Language="C#" Value="public void DrawCurve (System.Drawing.Pen pen, System.Drawing.Point[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawCurve(class System.Drawing.Pen pen, valuetype System.Drawing.Point[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawCurve(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::Point&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.DrawCurve : System.Drawing.Pen * System.Drawing.Point[] * single -&gt; unit" Usage="graphics.DrawCurve (pen, points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-615">곡선의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-615"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</span></span></param>
        <param name="points"><span data-ttu-id="db630-616">스플라인을 정의하는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-616">Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.</span></span></param>
        <param name="tension"><span data-ttu-id="db630-617">곡선의 장력을 지정하는 0.0F 보다 크거나 같은 값입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-617">Value greater than or equal to 0.0F that specifies the tension of the curve.</span></span></param>
        <summary><span data-ttu-id="db630-618">지정된 장력을 사용하여 <see cref="T:System.Drawing.Point" /> 구조체의 지정된 배열을 따라 카디널 스플라인을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-618">Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.Point" /> structures using a specified tension.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-619">이 메서드는 배열의 각 요소를 통과 하는 카디널 스플라인을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-619">This method draws a cardinal spline that passes through each point in the array.</span></span>  
  
 <span data-ttu-id="db630-620">점 배열에는 세 가지 이상을 포함 해야 합니다 <xref:System.Drawing.Point> 는 곡선을 그릴 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-620">The array of points must contain at least three <xref:System.Drawing.Point> structures for a curve to be drawn.</span></span>  
  
 <span data-ttu-id="db630-621">`tension` 매개 변수는 스플라인의 모양을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-621">The `tension` parameter determines the shape of the spline.</span></span> <span data-ttu-id="db630-622">경우 값은 `tension` 매개 변수는 0.0F,이 메서드는 요소를 연결 하려면 직선 세그먼트를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-622">If the value of the `tension` parameter is 0.0F, this method draws straight line segments to connect the points.</span></span> <span data-ttu-id="db630-623">일반적으로 `tension` 매개 변수 보다 작거나 1.0F로는 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-623">Usually, the `tension` parameter is less than or equal to 1.0F.</span></span> <span data-ttu-id="db630-624">1.0F 값 이상한 결과 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-624">Values over 1.0F produce unusual results.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-625">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-625">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-626">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-626">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-627">빨간색 및 녹색 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-627">Creates red and green pens.</span></span>  
  
-   <span data-ttu-id="db630-628">7 개의 점이 곡선을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-628">Creates seven points to define the curve.</span></span>  
  
-   <span data-ttu-id="db630-629">불완전 한 다각형을 7 개의 점이 사이 6 빨간색 직선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-629">Draws six red straight lines between the seven points to form an incomplete polygon.</span></span>  
  
-   <span data-ttu-id="db630-630">장력 설정을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-630">Creates a tension setting.</span></span>  
  
-   <span data-ttu-id="db630-631">7 개의 점이 통해 열린 녹색 닫힌된 곡선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-631">Draws an open green closed curve through the seven points.</span></span>  
  
 <span data-ttu-id="db630-632">메서드는 1.0의 장력을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-632">The method uses a tension of 1.0.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#22](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#22)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#22](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#22)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#22](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-633"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-633"><paramref name="pen" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="db630-634">또는</span><span class="sxs-lookup"><span data-stu-id="db630-634">-or-</span></span> 
 <span data-ttu-id="db630-635"><paramref name="points" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-635"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawCurve">
      <MemberSignature Language="C#" Value="public void DrawCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawCurve(class System.Drawing.Pen pen, valuetype System.Drawing.PointF[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawCurve(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::PointF&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.DrawCurve : System.Drawing.Pen * System.Drawing.PointF[] * single -&gt; unit" Usage="graphics.DrawCurve (pen, points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-636">곡선의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-636"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</span></span></param>
        <param name="points"><span data-ttu-id="db630-637">곡선을 정의하는 점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-637">Array of <see cref="T:System.Drawing.PointF" /> structures that represent the points that define the curve.</span></span></param>
        <param name="tension"><span data-ttu-id="db630-638">곡선의 장력을 지정하는 0.0F 보다 크거나 같은 값입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-638">Value greater than or equal to 0.0F that specifies the tension of the curve.</span></span></param>
        <summary><span data-ttu-id="db630-639">지정된 장력을 사용하여 <see cref="T:System.Drawing.PointF" /> 구조체의 지정된 배열을 따라 카디널 스플라인을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-639">Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.PointF" /> structures using a specified tension.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-640">이 메서드는 배열의 각 요소를 통과 하는 카디널 스플라인을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-640">This method draws a cardinal spline that passes through each point in the array.</span></span>  
  
 <span data-ttu-id="db630-641">점 배열에는 세 가지 이상을 포함 해야 합니다 <xref:System.Drawing.PointF> 는 곡선을 그릴 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-641">The array of points must contain at least three <xref:System.Drawing.PointF> structures for a curve to be drawn.</span></span>  
  
 <span data-ttu-id="db630-642">`tension` 매개 변수는 스플라인의 모양을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-642">The `tension` parameter determines the shape of the spline.</span></span> <span data-ttu-id="db630-643">경우 값은 `tension` 매개 변수는 0.0F,이 메서드는 요소를 연결 하려면 직선 세그먼트를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-643">If the value of the `tension` parameter is 0.0F, this method draws straight line segments to connect the points.</span></span> <span data-ttu-id="db630-644">일반적으로 `tension` 매개 변수 보다 작거나 1.0F로는 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-644">Usually, the `tension` parameter is less than or equal to 1.0F.</span></span> <span data-ttu-id="db630-645">1.0F 값 이상한 결과 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-645">Values over 1.0F produce unusual results.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-646">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-646">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-647">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-647">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-648">빨간색 및 녹색 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-648">Creates red and green pens.</span></span>  
  
-   <span data-ttu-id="db630-649">7 개의 점이 곡선을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-649">Creates seven points to define the curve.</span></span>  
  
-   <span data-ttu-id="db630-650">불완전 한 다각형을 7 개의 점이 사이 6 빨간색 직선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-650">Draws six red straight lines between the seven points to form an incomplete polygon.</span></span>  
  
-   <span data-ttu-id="db630-651">장력 설정을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-651">Creates a tension setting.</span></span>  
  
-   <span data-ttu-id="db630-652">7 개의 점이 통해 열린 녹색 닫힌된 곡선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-652">Draws an open green closed curve through the seven points.</span></span>  
  
 <span data-ttu-id="db630-653">메서드는 1.0의 장력을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-653">The method uses a tension of 1.0.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#26](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#26)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#26](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#26)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#26](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-654"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-654"><paramref name="pen" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="db630-655">또는</span><span class="sxs-lookup"><span data-stu-id="db630-655">-or-</span></span> 
 <span data-ttu-id="db630-656"><paramref name="points" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-656"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawCurve">
      <MemberSignature Language="C#" Value="public void DrawCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points, int offset, int numberOfSegments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawCurve(class System.Drawing.Pen pen, valuetype System.Drawing.PointF[] points, int32 offset, int32 numberOfSegments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawCurve(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::PointF&gt; ^ points, int offset, int numberOfSegments);" />
      <MemberSignature Language="F#" Value="member this.DrawCurve : System.Drawing.Pen * System.Drawing.PointF[] * int * int -&gt; unit" Usage="graphics.DrawCurve (pen, points, offset, numberOfSegments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="numberOfSegments" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-657">곡선의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-657"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</span></span></param>
        <param name="points"><span data-ttu-id="db630-658">스플라인을 정의하는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-658">Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.</span></span></param>
        <param name="offset"><span data-ttu-id="db630-659"><paramref name="points" /> 매개 변수 배열의 첫째 요소에서 곡선의 시작점까지의 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-659">Offset from the first element in the array of the <paramref name="points" /> parameter to the starting point in the curve.</span></span></param>
        <param name="numberOfSegments"><span data-ttu-id="db630-660">시작점 다음부터 곡선에 포함될 세그먼트의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-660">Number of segments after the starting point to include in the curve.</span></span></param>
        <summary><span data-ttu-id="db630-661"><see cref="T:System.Drawing.PointF" /> 구조체의 지정된 배열을 따라 카디널 스플라인을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-661">Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.PointF" /> structures.</span></span> <span data-ttu-id="db630-662">그리기는 배열의 시작에서 오프셋을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-662">The drawing begins offset from the beginning of the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-663">이 메서드는 배열의 각 요소를 통과 하는 카디널 스플라인을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-663">This method draws a cardinal spline that passes through each point in the array.</span></span>  
  
 <span data-ttu-id="db630-664">점 배열에는 세 가지 이상을 포함 해야 합니다 <xref:System.Drawing.PointF> 는 곡선을 그릴 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-664">The array of points must contain at least three <xref:System.Drawing.PointF> structures for a curve to be drawn.</span></span>  
  
 <span data-ttu-id="db630-665">값을 `offset` 매개 변수 배열에서 건너뛸 요소 수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-665">The value of the `offset` parameter specifies the number of elements to skip in the array.</span></span> <span data-ttu-id="db630-666">건너뛴된 요소 앞의 첫 번째 요소에는 곡선의 시작점을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-666">The first element after the skipped elements represents the starting point of the curve.</span></span>  
  
 <span data-ttu-id="db630-667">값을 `numberOfSegments` 매개 변수를 그리는 곡선의 시작점을 후 세그먼트의 수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-667">The value of the `numberOfSegments` parameter specifies the number of segments, after the starting point, to draw in the curve.</span></span> <span data-ttu-id="db630-668">값을 `numberOfSegments` 매개 변수는 1 이상 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-668">The value of the `numberOfSegments` parameter must be at least 1.</span></span> <span data-ttu-id="db630-669">값을 `offset` 매개 변수 값의 합 합니다 `numberOfSegments` 매개 변수 배열의 요소 개수 보다 작아야를 `points` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="db630-669">The value of the `offset` parameter plus the value of the `numberOfSegments` parameter must be less than the number of elements in the array of the `points` parameter.</span></span>  
  
 <span data-ttu-id="db630-670">이 메서드는 0.5의 기본 장력을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-670">This method uses a default tension of 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-671">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-671">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-672">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-672">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-673">빨간색 및 녹색 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-673">Creates red and green pens.</span></span>  
  
-   <span data-ttu-id="db630-674">7 개의 점이 곡선을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-674">Creates seven points to define a curve.</span></span>  
  
-   <span data-ttu-id="db630-675">불완전 한 다각형을 7 개의 점이 사이 6 빨간색 직선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-675">Draws six red straight lines between the seven points to form an incomplete polygon.</span></span>  
  
-   <span data-ttu-id="db630-676">시작 지점 오프셋 및 세그먼트의 수를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-676">Defines the starting point offset and number of segments.</span></span>  
  
-   <span data-ttu-id="db630-677">마지막 다섯 개 지점을 통해 열린 녹색 곡선 (세 번째 요소부터 시작)를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-677">Draws an open green curve (starting at the third point) through the last five points.</span></span>  
  
 <span data-ttu-id="db630-678">메서드는 0.5의 기본 장력을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-678">The method uses a default tension of 0.5.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#24](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#24)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#24](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#24)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#24](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-679"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-679"><paramref name="pen" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="db630-680">또는</span><span class="sxs-lookup"><span data-stu-id="db630-680">-or-</span></span> 
 <span data-ttu-id="db630-681"><paramref name="points" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-681"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawCurve">
      <MemberSignature Language="C#" Value="public void DrawCurve (System.Drawing.Pen pen, System.Drawing.Point[] points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawCurve(class System.Drawing.Pen pen, valuetype System.Drawing.Point[] points, int32 offset, int32 numberOfSegments, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawCurve(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::Point&gt; ^ points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="F#" Value="member this.DrawCurve : System.Drawing.Pen * System.Drawing.Point[] * int * int * single -&gt; unit" Usage="graphics.DrawCurve (pen, points, offset, numberOfSegments, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="numberOfSegments" Type="System.Int32" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-682">곡선의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-682"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</span></span></param>
        <param name="points"><span data-ttu-id="db630-683">스플라인을 정의하는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-683">Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.</span></span></param>
        <param name="offset"><span data-ttu-id="db630-684"><paramref name="points" /> 매개 변수 배열의 첫째 요소에서 곡선의 시작점까지의 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-684">Offset from the first element in the array of the <paramref name="points" /> parameter to the starting point in the curve.</span></span></param>
        <param name="numberOfSegments"><span data-ttu-id="db630-685">시작점 다음부터 곡선에 포함될 세그먼트의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-685">Number of segments after the starting point to include in the curve.</span></span></param>
        <param name="tension"><span data-ttu-id="db630-686">곡선의 장력을 지정하는 0.0F 보다 크거나 같은 값입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-686">Value greater than or equal to 0.0F that specifies the tension of the curve.</span></span></param>
        <summary><span data-ttu-id="db630-687">지정된 장력을 사용하여 <see cref="T:System.Drawing.Point" /> 구조체의 지정된 배열을 따라 카디널 스플라인을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-687">Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.Point" /> structures using a specified tension.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-688">이 메서드는 배열의 각 요소를 통과 하는 카디널 스플라인을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-688">This method draws a cardinal spline that passes through each point in the array.</span></span>  
  
 <span data-ttu-id="db630-689">점 배열에는 세 가지 이상을 포함 해야 합니다 <xref:System.Drawing.Point> 는 곡선을 그릴 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-689">The array of points must contain at least three <xref:System.Drawing.Point> structures for a curve to be drawn.</span></span>  
  
 <span data-ttu-id="db630-690">값을 `offset` 매개 변수 배열에서 건너뛸 요소 수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-690">The value of the `offset` parameter specifies the number of elements to skip in the array.</span></span> <span data-ttu-id="db630-691">건너뛴된 요소 앞의 첫 번째 요소에는 곡선의 시작점을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-691">The first element after the skipped elements represents the starting point of the curve.</span></span>  
  
 <span data-ttu-id="db630-692">값을 `numberOfSegments` 매개 변수를 그리는 곡선의 시작점을 후 세그먼트의 수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-692">The value of the `numberOfSegments` parameter specifies the number of segments, after the starting point, to draw in the curve.</span></span> <span data-ttu-id="db630-693">값을 `numberOfSegments` 매개 변수는 1 이상 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-693">The value of the `numberOfSegments` parameter must be at least 1.</span></span> <span data-ttu-id="db630-694">값을 `offset` 매개 변수 값의 합 합니다 `numberOfSegments` 매개 변수 배열의 요소 개수 보다 작아야를 `points` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="db630-694">The value of the `offset` parameter plus the value of the `numberOfSegments` parameter must be less than the number of elements in the array of the `points` parameter.</span></span>  
  
 <span data-ttu-id="db630-695">`tension` 매개 변수는 스플라인의 모양을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-695">The `tension` parameter determines the shape of the spline.</span></span> <span data-ttu-id="db630-696">경우 값은 `tension` 매개 변수는 0.0F,이 메서드는 요소를 연결 하려면 직선 세그먼트를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-696">If the value of the `tension` parameter is 0.0F, this method draws straight line segments to connect the points.</span></span> <span data-ttu-id="db630-697">일반적으로 `tension` 매개 변수 보다 작거나 1.0F로는 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-697">Usually, the `tension` parameter is less than or equal to 1.0F.</span></span> <span data-ttu-id="db630-698">1.0F 값 이상한 결과 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-698">Values over 1.0F produce unusual results.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-699">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-699">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-700">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-700">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-701">빨간색 및 녹색 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-701">Creates red and green pens.</span></span>  
  
-   <span data-ttu-id="db630-702">7 개의 점이 곡선을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-702">Creates seven points to define a curve.</span></span>  
  
-   <span data-ttu-id="db630-703">불완전 한 다각형을 7 개의 점이 사이 6 빨간색 직선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-703">Draws six red straight lines between the seven points to form an incomplete polygon.</span></span>  
  
-   <span data-ttu-id="db630-704">시작 지점 오프셋 및 세그먼트의 수를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-704">Defines the starting point offset and number of segments.</span></span>  
  
-   <span data-ttu-id="db630-705">장력을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-705">Defines the tension.</span></span>  
  
-   <span data-ttu-id="db630-706">마지막 다섯 개 지점을 통해 열린 녹색 곡선 (세 번째 요소부터 시작)를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-706">Draws an open green curve (starting at the third point) through the last five points.</span></span>  
  
 <span data-ttu-id="db630-707">메서드는 1.0 장력을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-707">The method sets the tension to 1.0.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#21](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#21)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#21)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-708"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-708"><paramref name="pen" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="db630-709">또는</span><span class="sxs-lookup"><span data-stu-id="db630-709">-or-</span></span> 
 <span data-ttu-id="db630-710"><paramref name="points" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-710"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawCurve">
      <MemberSignature Language="C#" Value="public void DrawCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawCurve(class System.Drawing.Pen pen, valuetype System.Drawing.PointF[] points, int32 offset, int32 numberOfSegments, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawCurve(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::PointF&gt; ^ points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="F#" Value="member this.DrawCurve : System.Drawing.Pen * System.Drawing.PointF[] * int * int * single -&gt; unit" Usage="graphics.DrawCurve (pen, points, offset, numberOfSegments, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="numberOfSegments" Type="System.Int32" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-711">곡선의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-711"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</span></span></param>
        <param name="points"><span data-ttu-id="db630-712">스플라인을 정의하는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-712">Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.</span></span></param>
        <param name="offset"><span data-ttu-id="db630-713"><paramref name="points" /> 매개 변수 배열의 첫째 요소에서 곡선의 시작점까지의 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-713">Offset from the first element in the array of the <paramref name="points" /> parameter to the starting point in the curve.</span></span></param>
        <param name="numberOfSegments"><span data-ttu-id="db630-714">시작점 다음부터 곡선에 포함될 세그먼트의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-714">Number of segments after the starting point to include in the curve.</span></span></param>
        <param name="tension"><span data-ttu-id="db630-715">곡선의 장력을 지정하는 0.0F 보다 크거나 같은 값입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-715">Value greater than or equal to 0.0F that specifies the tension of the curve.</span></span></param>
        <summary><span data-ttu-id="db630-716">지정된 장력을 사용하여 <see cref="T:System.Drawing.PointF" /> 구조체의 지정된 배열을 따라 카디널 스플라인을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-716">Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.PointF" /> structures using a specified tension.</span></span> <span data-ttu-id="db630-717">그리기는 배열의 시작에서 오프셋을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-717">The drawing begins offset from the beginning of the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-718">이 메서드는 배열의 각 요소를 통과 하는 카디널 스플라인을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-718">This method draws a cardinal spline that passes through each point in the array.</span></span>  
  
 <span data-ttu-id="db630-719">점 배열에는 세 가지 이상을 포함 해야 합니다 <xref:System.Drawing.PointF> 곡선을 그릴 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-719">The array of points must contain at least three <xref:System.Drawing.PointF> structures for curve to be drawn.</span></span>  
  
 <span data-ttu-id="db630-720">값을 `offset` 매개 변수 배열에서 건너뛸 요소 수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-720">The value of the `offset` parameter specifies the number of elements to skip in the array.</span></span> <span data-ttu-id="db630-721">건너뛴된 요소 앞의 첫 번째 요소에는 곡선의 시작점을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-721">The first element after the skipped elements represents the starting point of the curve.</span></span>  
  
 <span data-ttu-id="db630-722">값을 `numberOfSegments` 매개 변수를 그리는 곡선의 시작점을 후 세그먼트의 수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-722">The value of the `numberOfSegments` parameter specifies the number of segments, after the starting point, to draw in the curve.</span></span> <span data-ttu-id="db630-723">값을 `numberOfSegments` 매개 변수는 1 이상 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-723">The value of the `numberOfSegments` parameter must be at least 1.</span></span> <span data-ttu-id="db630-724">값을 `offset` 매개 변수 값의 합 합니다 `numberOfSegments` 매개 변수 배열의 요소 개수 보다 작아야를 `points` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="db630-724">The value of the `offset` parameter plus the value of the `numberOfSegments` parameter must be less than the number of elements in the array of the `points` parameter.</span></span>  
  
 <span data-ttu-id="db630-725">`tension` 매개 변수는 스플라인의 모양을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-725">The `tension` parameter determines the shape of the spline.</span></span> <span data-ttu-id="db630-726">경우 값은 `tension` 매개 변수는 0.0F,이 메서드는 요소를 연결 하려면 직선 세그먼트를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-726">If the value of the `tension` parameter is 0.0F, this method draws straight line segments to connect the points.</span></span> <span data-ttu-id="db630-727">일반적으로 `tension` 매개 변수 보다 작거나 1.0F로는 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-727">Usually, the `tension` parameter is less than or equal to 1.0F.</span></span> <span data-ttu-id="db630-728">1.0F 값 이상한 결과 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-728">Values over 1.0F produce unusual results.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-729">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-729">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-730">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-730">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-731">빨간색 및 녹색 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-731">Creates red and green pens.</span></span>  
  
-   <span data-ttu-id="db630-732">7 개의 점이 곡선을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-732">Creates seven points to define a curve.</span></span>  
  
-   <span data-ttu-id="db630-733">불완전 한 다각형을 7 개의 점이 사이 6 빨간색 직선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-733">Draws six red straight lines between the seven points to form an incomplete polygon.</span></span>  
  
-   <span data-ttu-id="db630-734">시작 지점 오프셋 및 세그먼트의 수를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-734">Defines the starting point offset and number of segments.</span></span>  
  
-   <span data-ttu-id="db630-735">장력을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-735">Defines the tension.</span></span>  
  
-   <span data-ttu-id="db630-736">마지막 다섯 개 지점을 통해 열린 녹색 곡선 (세 번째 요소부터 시작)를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-736">Draws an open green curve (starting at the third point) through the last five points.</span></span>  
  
 <span data-ttu-id="db630-737">메서드는 1.0 장력을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-737">The method sets the tension to 1.0.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#25](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#25)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#25](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#25)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#25](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-738"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-738"><paramref name="pen" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="db630-739">또는</span><span class="sxs-lookup"><span data-stu-id="db630-739">-or-</span></span> 
 <span data-ttu-id="db630-740"><paramref name="points" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-740"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawEllipse">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db630-741">좌표, 높이, 너비의 쌍으로 지정된 경계 사각형에 의해 정의되는 타원을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-741">Draws an ellipse defined by a bounding rectangle specified by a pair of coordinates, a height, and a width.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawEllipse">
      <MemberSignature Language="C#" Value="public void DrawEllipse (System.Drawing.Pen pen, System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawEllipse(class System.Drawing.Pen pen, valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawEllipse(System::Drawing::Pen ^ pen, System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.DrawEllipse : System.Drawing.Pen * System.Drawing.Rectangle -&gt; unit" Usage="graphics.DrawEllipse (pen, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-742">타원의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-742"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the ellipse.</span></span></param>
        <param name="rect"><span data-ttu-id="db630-743">타원의 경계를 정의하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-743"><see cref="T:System.Drawing.Rectangle" /> structure that defines the boundaries of the ellipse.</span></span></param>
        <summary><span data-ttu-id="db630-744">경계 <see cref="T:System.Drawing.Rectangle" /> 구조체에 의해 지정된 타원을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-744">Draws an ellipse specified by a bounding <see cref="T:System.Drawing.Rectangle" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-745">이 메서드는 지정 된 경계 사각형에 의해 정의 된 타원을 그립니다는 `rect` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-745">This method draws an ellipse that is defined by the bounding rectangle specified by the `rect` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-746">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-746">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-747">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-747">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-748">Black 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-748">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="db630-749">타원을 바인딩된 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-749">Creates a rectangle to bound an ellipse.</span></span>  
  
-   <span data-ttu-id="db630-750">화면에 타원을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-750">Draws the ellipse to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#27](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#27)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#27](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#27)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#27](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-751"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-751"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawEllipse">
      <MemberSignature Language="C#" Value="public void DrawEllipse (System.Drawing.Pen pen, System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawEllipse(class System.Drawing.Pen pen, valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawEllipse(System::Drawing::Pen ^ pen, System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.DrawEllipse : System.Drawing.Pen * System.Drawing.RectangleF -&gt; unit" Usage="graphics.DrawEllipse (pen, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-752">타원의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-752"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the ellipse.</span></span></param>
        <param name="rect"><span data-ttu-id="db630-753">타원의 경계를 정의하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-753"><see cref="T:System.Drawing.RectangleF" /> structure that defines the boundaries of the ellipse.</span></span></param>
        <summary><span data-ttu-id="db630-754">경계 <see cref="T:System.Drawing.RectangleF" />에 의해 정의되는 타원을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-754">Draws an ellipse defined by a bounding <see cref="T:System.Drawing.RectangleF" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-755">이 메서드는 지정 된 경계 사각형에 의해 정의 된 타원을 그립니다는 `rect` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-755">This method draws an ellipse that is defined by the bounding rectangle specified by the `rect` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-756">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-756">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-757">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-757">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-758">Black 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-758">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="db630-759">타원을 바인딩된 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-759">Creates a rectangle to bound an ellipse.</span></span>  
  
-   <span data-ttu-id="db630-760">화면에 타원을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-760">Draws the ellipse to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#28](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#28)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#28](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#28)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#28](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-761"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-761"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawEllipse">
      <MemberSignature Language="C#" Value="public void DrawEllipse (System.Drawing.Pen pen, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawEllipse(class System.Drawing.Pen pen, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawEllipse(System::Drawing::Pen ^ pen, int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.DrawEllipse : System.Drawing.Pen * int * int * int * int -&gt; unit" Usage="graphics.DrawEllipse (pen, x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-762">타원의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-762"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the ellipse.</span></span></param>
        <param name="x"><span data-ttu-id="db630-763">타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-763">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="y"><span data-ttu-id="db630-764">타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-764">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="width"><span data-ttu-id="db630-765">타원을 정의하는 경계 사각형의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-765">Width of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="height"><span data-ttu-id="db630-766">타원을 정의하는 경계 사각형의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-766">Height of the bounding rectangle that defines the ellipse.</span></span></param>
        <summary><span data-ttu-id="db630-767">직사각형의 왼쪽 위 모퉁이 좌표, 높이 및 너비로 지정된 경계 사각형에 의해 정의되는 타원을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-767">Draws an ellipse defined by a bounding rectangle specified by coordinates for the upper-left corner of the rectangle, a height, and a width.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-768">이 메서드는에 설명 된 경계 사각형에 의해 정의 된 타원을 그립니다 합니다 `x`, `y`를 `width`, 및 `height` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-768">This method draws an ellipse that is defined by the bounding rectangle described by the `x`, `y`, `width`, and `height` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-769">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-769">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-770">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-770">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-771">Black 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-771">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="db630-772">타원의 경계가 사각형의 크기와 위치를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-772">Creates the position and size of a rectangle to bound an ellipse.</span></span>  
  
-   <span data-ttu-id="db630-773">화면에 타원을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-773">Draws the ellipse to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#29](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#29)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#29](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#29)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#29](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-774"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-774"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawEllipse">
      <MemberSignature Language="C#" Value="public void DrawEllipse (System.Drawing.Pen pen, float x, float y, float width, float height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawEllipse(class System.Drawing.Pen pen, float32 x, float32 y, float32 width, float32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawEllipse(System::Drawing::Pen ^ pen, float x, float y, float width, float height);" />
      <MemberSignature Language="F#" Value="member this.DrawEllipse : System.Drawing.Pen * single * single * single * single -&gt; unit" Usage="graphics.DrawEllipse (pen, x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-775">타원의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-775"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the ellipse.</span></span></param>
        <param name="x"><span data-ttu-id="db630-776">타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-776">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="y"><span data-ttu-id="db630-777">타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-777">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="width"><span data-ttu-id="db630-778">타원을 정의하는 경계 사각형의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-778">Width of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="height"><span data-ttu-id="db630-779">타원을 정의하는 경계 사각형의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-779">Height of the bounding rectangle that defines the ellipse.</span></span></param>
        <summary><span data-ttu-id="db630-780">좌표, 높이, 너비의 쌍으로 지정된 경계 사각형에 의해 정의되는 타원을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-780">Draws an ellipse defined by a bounding rectangle specified by a pair of coordinates, a height, and a width.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-781">이 메서드는에 설명 된 경계 사각형에 의해 정의 된 타원을 그립니다 합니다 `x`, `y`를 `width`, 및 `height` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-781">This method draws an ellipse that is defined by the bounding rectangle described by the `x`, `y`, `width`, and `height` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-782">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-782">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-783">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-783">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-784">Black 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-784">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="db630-785">타원의 경계가 사각형의 크기와 위치를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-785">Creates the position and size of a rectangle to bound an ellipse.</span></span>  
  
-   <span data-ttu-id="db630-786">화면에 타원을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-786">Draws the ellipse to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#30](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#30)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#30)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-787"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-787"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawIcon">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db630-788">지정된 <see cref="T:System.Drawing.Icon" />에 의해 나타나는 이미지를 지정된 좌표에 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-788">Draws the image represented by the specified <see cref="T:System.Drawing.Icon" /> at the specified coordinates.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawIcon">
      <MemberSignature Language="C#" Value="public void DrawIcon (System.Drawing.Icon icon, System.Drawing.Rectangle targetRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawIcon(class System.Drawing.Icon icon, valuetype System.Drawing.Rectangle targetRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawIcon(System::Drawing::Icon ^ icon, System::Drawing::Rectangle targetRect);" />
      <MemberSignature Language="F#" Value="member this.DrawIcon : System.Drawing.Icon * System.Drawing.Rectangle -&gt; unit" Usage="graphics.DrawIcon (icon, targetRect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="icon" Type="System.Drawing.Icon" />
        <Parameter Name="targetRect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="icon"><span data-ttu-id="db630-789">그릴 <see cref="T:System.Drawing.Icon" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-789"><see cref="T:System.Drawing.Icon" /> to draw.</span></span></param>
        <param name="targetRect"><span data-ttu-id="db630-790">표시 화면에 결과로 나타날 이미지의 위치와 크기를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-790"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the resulting image on the display surface.</span></span> <span data-ttu-id="db630-791"><paramref name="icon" /> 매개 변수에 포함된 이미지는 이 사각형 영역의 크기에 맞게 크기가 조정됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-791">The image contained in the <paramref name="icon" /> parameter is scaled to the dimensions of this rectangular area.</span></span></param>
        <summary><span data-ttu-id="db630-792">지정된 <see cref="T:System.Drawing.Icon" />에 의해 나타나는 이미지를 <see cref="T:System.Drawing.Rectangle" /> 구조체에 의해 지정된 영역 안에 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-792">Draws the image represented by the specified <see cref="T:System.Drawing.Icon" /> within the area specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="db630-793">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-793">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-794">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-794">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-795">표준 Windows 아이콘 파일 예제 폴더에 SampIcon.ico에서에서 아이콘을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-795">Creates an icon from a standard Windows icon file SampIcon.ico in the example folder.</span></span>  
  
-   <span data-ttu-id="db630-796">아이콘을 그릴 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-796">Creates a rectangle in which to draw the icon.</span></span>  
  
-   <span data-ttu-id="db630-797">화면에 아이콘을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-797">Draws the icon to the screen.</span></span>  
  
 <span data-ttu-id="db630-798">사각형의 위치 화면에서 아이콘을 찾아 그려지는 아이콘의 배율을 사각형의 크기를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-798">The position of the rectangle locates the icon on the screen, and the size of the rectangle determines the scaling of the drawn icon.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#31](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#31)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#31](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#31)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#31](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#31)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-799"><paramref name="icon" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-799"><paramref name="icon" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawIcon">
      <MemberSignature Language="C#" Value="public void DrawIcon (System.Drawing.Icon icon, int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawIcon(class System.Drawing.Icon icon, int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawIcon(System::Drawing::Icon ^ icon, int x, int y);" />
      <MemberSignature Language="F#" Value="member this.DrawIcon : System.Drawing.Icon * int * int -&gt; unit" Usage="graphics.DrawIcon (icon, x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="icon" Type="System.Drawing.Icon" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="icon"><span data-ttu-id="db630-800">그릴 <see cref="T:System.Drawing.Icon" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-800"><see cref="T:System.Drawing.Icon" /> to draw.</span></span></param>
        <param name="x"><span data-ttu-id="db630-801">그려지는 이미지의 왼쪽 위 모퉁이에 대한 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-801">The x-coordinate of the upper-left corner of the drawn image.</span></span></param>
        <param name="y"><span data-ttu-id="db630-802">그려지는 이미지의 왼쪽 위 모퉁이에 대한 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-802">The y-coordinate of the upper-left corner of the drawn image.</span></span></param>
        <summary><span data-ttu-id="db630-803">지정된 <see cref="T:System.Drawing.Icon" />에 의해 나타나는 이미지를 지정된 좌표에 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-803">Draws the image represented by the specified <see cref="T:System.Drawing.Icon" /> at the specified coordinates.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="db630-804">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-804">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-805">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-805">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-806">표준 Windows 아이콘 파일 예제 폴더에 SampIcon.ico에서에서 아이콘을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-806">Creates an icon from a standard Windows icon file SampIcon.ico in the example folder.</span></span>  
  
-   <span data-ttu-id="db630-807">아이콘을 그립니다.를 왼쪽 위 모퉁이의 좌표를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-807">Creates the coordinates of the upper-left corner at which to draw the icon.</span></span>  
  
-   <span data-ttu-id="db630-808">화면에 아이콘을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-808">Draws the icon to the screen.</span></span>  
  
 <span data-ttu-id="db630-809">그려지는 아이콘이 확장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-809">The drawn icon is unscaled.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#32](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#32)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#32](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#32)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#32](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-810"><paramref name="icon" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-810"><paramref name="icon" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawIconUnstretched">
      <MemberSignature Language="C#" Value="public void DrawIconUnstretched (System.Drawing.Icon icon, System.Drawing.Rectangle targetRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawIconUnstretched(class System.Drawing.Icon icon, valuetype System.Drawing.Rectangle targetRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawIconUnstretched(System.Drawing.Icon,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawIconUnstretched(System::Drawing::Icon ^ icon, System::Drawing::Rectangle targetRect);" />
      <MemberSignature Language="F#" Value="member this.DrawIconUnstretched : System.Drawing.Icon * System.Drawing.Rectangle -&gt; unit" Usage="graphics.DrawIconUnstretched (icon, targetRect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="icon" Type="System.Drawing.Icon" />
        <Parameter Name="targetRect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="icon"><span data-ttu-id="db630-811">그릴 <see cref="T:System.Drawing.Icon" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-811"><see cref="T:System.Drawing.Icon" /> to draw.</span></span></param>
        <param name="targetRect"><span data-ttu-id="db630-812">결과로 나타날 이미지의 위치와 크기를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-812"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the resulting image.</span></span> <span data-ttu-id="db630-813">이미지는 이 사각형에 맞게 크기 조정되지 않으며, 원래 크기를 유지합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-813">The image is not scaled to fit this rectangle, but retains its original size.</span></span> <span data-ttu-id="db630-814">이미지가 사각형보다 크면, 그 안에 맞추기 위해 잘려집니다.</span><span class="sxs-lookup"><span data-stu-id="db630-814">If the image is larger than the rectangle, it is clipped to fit inside it.</span></span></param>
        <summary><span data-ttu-id="db630-815">이미지의 크기 조정 없이 지정된 <see cref="T:System.Drawing.Icon" />에 의해 나타나는 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-815">Draws the image represented by the specified <see cref="T:System.Drawing.Icon" /> without scaling the image.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="db630-816">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-816">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-817">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-817">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-818">표준 Windows 아이콘 파일 예제 폴더에 SampIcon.ico에서에서 아이콘을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-818">Creates an icon from a standard Windows icon file SampIcon.ico in the example folder.</span></span>  
  
-   <span data-ttu-id="db630-819">아이콘을 그릴 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-819">Creates a rectangle in which to draw the icon.</span></span>  
  
-   <span data-ttu-id="db630-820">화면에 아이콘을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-820">Draws the icon to the screen.</span></span>  
  
 <span data-ttu-id="db630-821">사각형의 위치 아이콘을 화면의 찾고 그려지는 아이콘은 실제 크기 이며 잘리지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-821">The position of the rectangle locates the icon on the screen, and the drawn icon is unscaled and unclipped.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#33](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#33)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#33](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#33)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#33](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-822"><paramref name="icon" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-822"><paramref name="icon" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawImage">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db630-823">지정된 <see cref="T:System.Drawing.Image" />를 지정된 위치에 원래 크기로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-823">Draws the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the original size.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Point -&gt; unit" Usage="graphics.DrawImage (image, point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="db630-824">그릴 <see cref="T:System.Drawing.Image" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-824"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="point"><span data-ttu-id="db630-825">그려지는 이미지의 왼쪽 위 모퉁이 위치를 나타내는 <see cref="T:System.Drawing.Point" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-825"><see cref="T:System.Drawing.Point" /> structure that represents the location of the upper-left corner of the drawn image.</span></span></param>
        <summary><span data-ttu-id="db630-826">지정된 위치에 원래의 크기를 사용하여 특정 <see cref="T:System.Drawing.Image" />를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-826">Draws the specified <see cref="T:System.Drawing.Image" />, using its original physical size, at the specified location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-827"><xref:System.Drawing.Image> 픽셀 너비에 대 한 값 및 가로 해상도 (인치당 도트 수)에 대 한 값을 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-827">An <xref:System.Drawing.Image> stores a value for pixel width and a value for horizontal resolution (dots per inch).</span></span> <span data-ttu-id="db630-828">이미지를 인치 단위로 측정 된 실제 너비를 픽셀 너비의 가로 해상도 나눈 것입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-828">The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</span></span> <span data-ttu-id="db630-829">예를 들어, 216 픽셀 너비, 72 인치당의 가로 해상도 사용 하 여 이미지에는 실제 너비는 3 인치</span><span class="sxs-lookup"><span data-stu-id="db630-829">For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches.</span></span> <span data-ttu-id="db630-830">이와 유사 픽셀 높이 실제 높이에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-830">Similar remarks apply to pixel height and physical height.</span></span>  
  
 <span data-ttu-id="db630-831">이 메서드는 이미지 인치 디스플레이 디바이스의 해상도 (인치당 도트 수)와 관계 없이 올바른 크기를 가집니다는 실제 크기를 사용 하 여 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-831">This method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</span></span> <span data-ttu-id="db630-832">예를 들어, 216 픽셀 너비, 72 인치당의 가로 해상도 이미지에는 것으로 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-832">For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</span></span> <span data-ttu-id="db630-833">렌더링된 된 이미지의 픽셀 너비 (216/72) 수는 96dpi 해상도 포함 하는 디바이스에서 해당 이미지를 그릴이 메서드를 호출 하는 경우 \* 96 = 288 개.</span><span class="sxs-lookup"><span data-stu-id="db630-833">If you call this method to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)\*96 = 288.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-834">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-834">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-835">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-835">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-836">JPEG 파일의 예제 폴더에는 예제에서 이미지를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-836">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="db630-837">이미지의 왼쪽 위 모퉁이 그릴 점을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-837">Creates a point at which to draw the upper-left corner of the image.</span></span>  
  
-   <span data-ttu-id="db630-838">화면에 실제 크기의 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-838">Draws the unscaled image to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#34](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#34)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#34](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#34)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#34](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#34)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-839"><paramref name="image" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-839"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-840">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-840">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Point[] destPoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Point[] destPoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, cli::array &lt;System::Drawing::Point&gt; ^ destPoints);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Point[] -&gt; unit" Usage="graphics.DrawImage (image, destPoints)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destPoints" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="db630-841">그릴 <see cref="T:System.Drawing.Image" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-841"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destPoints"><span data-ttu-id="db630-842">평행 사변형을 정의하는 세 개의 <see cref="T:System.Drawing.Point" /> 구조체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-842">Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram.</span></span></param>
        <summary><span data-ttu-id="db630-843">지정된 <see cref="T:System.Drawing.Image" />를 지정된 위치에 지정된 모양과 크기로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-843">Draws the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified shape and size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-844">`destPoints` 세 지점이 평행 사변형의 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-844">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="db630-845">세 가지 <xref:System.Drawing.Point> 구조는 평행 사변형의 왼쪽 위, 오른쪽 위 및 왼쪽 아래 모서리를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-845">The three <xref:System.Drawing.Point> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="db630-846">네 번째 지점은 평행 사변형을 구성 하기 위해 처음 3 개에서 추정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-846">The fourth point is extrapolated from the first three to form a parallelogram.</span></span>  
  
 <span data-ttu-id="db630-847">에 의해 나타나는 이미지를 `image` 매개 변수 크기가 조정 되 고 지정 된 평행 사변형의 모양에 맞추기 위해는 `destPoints` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-847">The image represented by the `image` parameter is scaled and sheared to fit the shape of the parallelogram specified by the `destPoints` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-848">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-848">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-849">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-849">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-850">JPEG 파일의 예제 폴더에는 예제에서 이미지를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-850">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="db630-851">이미지를 그릴는 평행 사변형을 정의 하는 지점을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-851">Creates points that define a parallelogram in which to draw the image.</span></span>  
  
-   <span data-ttu-id="db630-852">화면에 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-852">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="db630-853">평행 사변형의 위치 화면에서 이미지를 찾아 그려지는 이미지의 배율과 평행 사변형의 원래 이미지 및 크기의 크기 및 모양을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-853">The position of the parallelogram locates the image on the screen, and the size of the original image and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#35](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#35)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#35](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#35)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#35](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-854"><paramref name="image" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-854"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-855">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-855">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.PointF point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.PointF point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::PointF point);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.PointF -&gt; unit" Usage="graphics.DrawImage (image, point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="point" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="db630-856">그릴 <see cref="T:System.Drawing.Image" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-856"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="point"><span data-ttu-id="db630-857">그려지는 이미지의 왼쪽 위 모퉁이를 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-857"><see cref="T:System.Drawing.PointF" /> structure that represents the upper-left corner of the drawn image.</span></span></param>
        <summary><span data-ttu-id="db630-858">지정된 위치에 원래의 크기를 사용하여 특정 <see cref="T:System.Drawing.Image" />를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-858">Draws the specified <see cref="T:System.Drawing.Image" />, using its original physical size, at the specified location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-859"><xref:System.Drawing.Image> 픽셀 너비에 대 한 값 및 가로 해상도 (인치당 도트 수)에 대 한 값을 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-859">An <xref:System.Drawing.Image> stores a value for pixel width and a value for horizontal resolution (dots per inch).</span></span> <span data-ttu-id="db630-860">이미지를 인치 단위로 측정 된 실제 너비를 픽셀 너비의 가로 해상도 나눈 것입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-860">The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</span></span> <span data-ttu-id="db630-861">예를 들어, 216 픽셀 너비, 72 인치당의 가로 해상도 사용 하 여 이미지에는 실제 너비는 3 인치</span><span class="sxs-lookup"><span data-stu-id="db630-861">For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches.</span></span> <span data-ttu-id="db630-862">이와 유사 픽셀 높이 실제 높이에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-862">Similar remarks apply to pixel height and physical height.</span></span>  
  
 <span data-ttu-id="db630-863">이 메서드는 이미지 인치 디스플레이 디바이스의 해상도 (인치당 도트 수)와 관계 없이 올바른 크기를 가집니다는 실제 크기를 사용 하 여 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-863">This method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</span></span> <span data-ttu-id="db630-864">예를 들어, 216 픽셀 너비, 72 인치당의 가로 해상도 이미지에는 것으로 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-864">For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</span></span> <span data-ttu-id="db630-865">렌더링된 된 이미지의 픽셀 너비 (216/72) 수는 96dpi 해상도 포함 하는 디바이스에서 해당 이미지를 그릴이 메서드를 호출 하는 경우 \* 96 = 288 개.</span><span class="sxs-lookup"><span data-stu-id="db630-865">If you call this method to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)\*96 = 288.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-866">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-866">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-867">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-867">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-868">JPEG 파일의 예제 폴더에는 예제에서 이미지를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-868">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="db630-869">이미지의 왼쪽 위 모퉁이 그릴 점을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-869">Creates a point at which to draw the upper-left corner of the image.</span></span>  
  
-   <span data-ttu-id="db630-870">화면에 실제 크기의 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-870">Draws the unscaled image to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#40](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#40)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#40)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-871"><paramref name="image" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-871"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-872">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-872">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.PointF[] destPoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.PointF[] destPoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, cli::array &lt;System::Drawing::PointF&gt; ^ destPoints);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.PointF[] -&gt; unit" Usage="graphics.DrawImage (image, destPoints)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="db630-873">그릴 <see cref="T:System.Drawing.Image" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-873"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destPoints"><span data-ttu-id="db630-874">평행 사변형을 정의하는 세 개의 <see cref="T:System.Drawing.PointF" /> 구조체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-874">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram.</span></span></param>
        <summary><span data-ttu-id="db630-875">지정된 <see cref="T:System.Drawing.Image" />를 지정된 위치에 지정된 모양과 크기로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-875">Draws the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified shape and size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-876">`destPoints` 세 지점이 평행 사변형의 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-876">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="db630-877">세 가지 <xref:System.Drawing.PointF> 구조는 평행 사변형의 왼쪽 위, 오른쪽 위 및 왼쪽 아래 모서리를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-877">The three <xref:System.Drawing.PointF> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="db630-878">네 번째 지점은 평행 사변형을 구성 하기 위해 처음 3 개에서 추정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-878">The fourth point is extrapolated from the first three to form a parallelogram.</span></span>  
  
 <span data-ttu-id="db630-879">에 의해 나타나는 이미지를 `image` 개체를 확장 하 고 지정 된 평행 사변형의 모양에 맞추기 위해는 `destPoints` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-879">The image represented by the `image` object is scaled and sheared to fit the shape of the parallelogram specified by the `destPoints` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-880">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-880">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-881">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-881">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-882">JPEG 파일의 예제 폴더에는 예제에서 이미지를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-882">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="db630-883">이미지를 그릴는 평행 사변형을 정의 하는 지점을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-883">Creates points that define a parallelogram in which to draw the image.</span></span>  
  
-   <span data-ttu-id="db630-884">화면에 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-884">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="db630-885">평행 사변형의 위치 화면에서 이미지를 찾아 그려지는 이미지의 배율과 평행 사변형의 원래 이미지 및 크기의 크기 및 모양을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-885">The position of the parallelogram locates the image on the screen, and the size of the original image and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#41](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#41)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#41](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#41)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#41](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-886"><paramref name="image" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-886"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-887">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-887">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Rectangle -&gt; unit" Usage="graphics.DrawImage (image, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="db630-888">그릴 <see cref="T:System.Drawing.Image" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-888"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="rect"><span data-ttu-id="db630-889">그려지는 이미지의 위치와 크기를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-889"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image.</span></span></param>
        <summary><span data-ttu-id="db630-890">지정된 <see cref="T:System.Drawing.Image" />를 지정된 위치에 지정된 크기로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-890">Draws the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-891">에 의해 나타나는 이미지를 `image` 개체의 크기의 크기가 조정 되는 `rect` 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-891">The image represented by the `image` object is scaled to the dimensions of the `rect` rectangle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-892">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-892">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-893">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-893">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-894">JPEG 파일의 예제 폴더에는 예제에서 이미지를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-894">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="db630-895">이미지를 그릴 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-895">Creates a rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="db630-896">화면에 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-896">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="db630-897">사각형의 위치를 화면에 이미지를 찾습니다 하 고 원본 이미지의 크기 및 사각형의 크기 그려지는 이미지의 배율을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-897">The position of the rectangle locates the image on the screen, and the size of the original image and the size of the rectangle determines the scaling of the drawn image.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#46](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#46)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#46](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#46)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#46](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#46)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-898"><paramref name="image" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-898"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-899">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-899">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.RectangleF -&gt; unit" Usage="graphics.DrawImage (image, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="db630-900">그릴 <see cref="T:System.Drawing.Image" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-900"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="rect"><span data-ttu-id="db630-901">그려지는 이미지의 위치와 크기를 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-901"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn image.</span></span></param>
        <summary><span data-ttu-id="db630-902">지정된 <see cref="T:System.Drawing.Image" />를 지정된 위치에 지정된 크기로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-902">Draws the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-903">에 의해 나타나는 이미지를 `image` 개체의 크기의 크기가 조정 되는 `rect` 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-903">The image represented by the `image` object is scaled to the dimensions of the `rect` rectangle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-904">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-904">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-905">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-905">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-906">JPEG 파일의 예제 폴더에는 예제에서 이미지를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-906">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="db630-907">이미지를 그릴 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-907">Creates a rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="db630-908">화면에 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-908">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="db630-909">사각형의 위치를 화면에 이미지를 찾습니다 하 고 이미지의 원래 크기 및 사각형의 크기 그려지는 이미지의 배율을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-909">The position of the rectangle locates the image on the screen, and the original size of the image and the size of the rectangle determines the scaling of the drawn image.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#56](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#56)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#56](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#56)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#56](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#56)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-910"><paramref name="image" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-910"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-911">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-911">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, int x, int y);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * int * int -&gt; unit" Usage="graphics.DrawImage (image, x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="db630-912">그릴 <see cref="T:System.Drawing.Image" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-912"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="x"><span data-ttu-id="db630-913">그려지는 이미지의 왼쪽 위 모퉁이에 대한 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-913">The x-coordinate of the upper-left corner of the drawn image.</span></span></param>
        <param name="y"><span data-ttu-id="db630-914">그려지는 이미지의 왼쪽 위 모퉁이에 대한 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-914">The y-coordinate of the upper-left corner of the drawn image.</span></span></param>
        <summary><span data-ttu-id="db630-915">지정된 이미지를 좌표 쌍으로 지정된 위치에 원래 실제 크기로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-915">Draws the specified image, using its original physical size, at the location specified by a coordinate pair.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-916"><xref:System.Drawing.Image> 픽셀 너비에 대 한 값 및 가로 해상도 (인치당 도트 수)에 대 한 값을 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-916">An <xref:System.Drawing.Image> stores a value for pixel width and a value for horizontal resolution (dots per inch).</span></span> <span data-ttu-id="db630-917">이미지를 인치 단위로 측정 된 실제 너비를 픽셀 너비의 가로 해상도 나눈 것입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-917">The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</span></span> <span data-ttu-id="db630-918">예를 들어, 216 픽셀 너비, 72 인치당의 가로 해상도 사용 하 여 이미지에는 실제 너비는 3 인치</span><span class="sxs-lookup"><span data-stu-id="db630-918">For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches.</span></span> <span data-ttu-id="db630-919">이와 유사 픽셀 높이 실제 높이에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-919">Similar remarks apply to pixel height and physical height.</span></span>  
  
 <span data-ttu-id="db630-920"><xref:System.Drawing.Graphics.DrawImage%2A> 메서드 인치 디스플레이 디바이스의 해상도 (인치당 도트 수)와 관계 없이 올바른 크기를 가집니다 이미지는 실제 크기를 사용 하 여 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-920">The <xref:System.Drawing.Graphics.DrawImage%2A> method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</span></span> <span data-ttu-id="db630-921">예를 들어, 216 픽셀 너비, 72 인치당의 가로 해상도 이미지에는 것으로 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-921">For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</span></span> <span data-ttu-id="db630-922">호출 하는 경우 <xref:System.Drawing.Graphics.DrawImage%2A> 96dpi 해상도 포함 하는 디바이스에서 해당 이미지를 그릴 렌더링 되는 이미지의 픽셀 너비 됩니다 (216/72) \* 96 = 288 개.</span><span class="sxs-lookup"><span data-stu-id="db630-922">If you call <xref:System.Drawing.Graphics.DrawImage%2A> to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)\*96 = 288.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-923">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-923">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-924">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-924">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-925">JPEG 파일의 예의 예제 폴더에는 예제 폴더에는 예제에서 이미지를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-925">Creates an image from a JPEG file SampImag.jpg in the folder of the example SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="db630-926">그릴 이미지의 왼쪽 위 모퉁이 있는 점의 좌표를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-926">Creates the coordinates of a point at which to draw the upper-left corner of the image.</span></span>  
  
-   <span data-ttu-id="db630-927">실제 크기의 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-927">Draws the unscaled image.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#58](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#58)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#58](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#58)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#58](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#58)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-928"><paramref name="image" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-928"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-929">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-929">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, float x, float y);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * single * single -&gt; unit" Usage="graphics.DrawImage (image, x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="db630-930">그릴 <see cref="T:System.Drawing.Image" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-930"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="x"><span data-ttu-id="db630-931">그려지는 이미지의 왼쪽 위 모퉁이에 대한 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-931">The x-coordinate of the upper-left corner of the drawn image.</span></span></param>
        <param name="y"><span data-ttu-id="db630-932">그려지는 이미지의 왼쪽 위 모퉁이에 대한 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-932">The y-coordinate of the upper-left corner of the drawn image.</span></span></param>
        <summary><span data-ttu-id="db630-933">지정된 위치에 원래의 크기를 사용하여 특정 <see cref="T:System.Drawing.Image" />를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-933">Draws the specified <see cref="T:System.Drawing.Image" />, using its original physical size, at the specified location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-934"><xref:System.Drawing.Image> 픽셀 너비에 대 한 값 및 가로 해상도 (인치당 도트 수)에 대 한 값을 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-934">An <xref:System.Drawing.Image> stores a value for pixel width and a value for horizontal resolution (dots per inch).</span></span> <span data-ttu-id="db630-935">이미지를 인치 단위로 측정 된 실제 너비를 픽셀 너비의 가로 해상도 나눈 것입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-935">The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</span></span> <span data-ttu-id="db630-936">예를 들어, 216 픽셀 너비, 72 인치당의 가로 해상도 사용 하 여 이미지에는 실제 너비는 3 인치</span><span class="sxs-lookup"><span data-stu-id="db630-936">For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches.</span></span> <span data-ttu-id="db630-937">이와 유사 픽셀 높이 실제 높이에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-937">Similar remarks apply to pixel height and physical height.</span></span>  
  
 <span data-ttu-id="db630-938">이 메서드는 이미지 인치 디스플레이 디바이스의 해상도 (인치당 도트 수)와 관계 없이 올바른 크기를 가집니다는 실제 크기를 사용 하 여 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-938">This method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</span></span> <span data-ttu-id="db630-939">예를 들어, 216 픽셀 너비, 72 인치당의 가로 해상도 이미지에는 것으로 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-939">For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</span></span> <span data-ttu-id="db630-940">렌더링된 된 이미지의 픽셀 너비 (216/72) 수는 96dpi 해상도 포함 하는 디바이스에서 해당 이미지를 그릴이 메서드를 호출 하는 경우 \* 96 = 288 개.</span><span class="sxs-lookup"><span data-stu-id="db630-940">If you call this method to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)\*96 = 288.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-941">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-941">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-942">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-942">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-943">JPEG 파일의 예제 폴더에는 예제에서 이미지를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-943">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="db630-944">그릴 이미지의 왼쪽 위 모퉁이 있는 점의 좌표를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-944">Creates the coordinates of a point at which to draw the upper-left corner of the image.</span></span>  
  
-   <span data-ttu-id="db630-945">화면에 실제 크기의 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-945">Draws the unscaled image to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#61](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#61)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#61](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#61)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#61](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#61)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-946"><paramref name="image" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-946"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-947">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-947">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Point[] destPoints, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit srcUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, cli::array &lt;System::Drawing::Point&gt; ^ destPoints, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit srcUnit);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Point[] * System.Drawing.Rectangle * System.Drawing.GraphicsUnit -&gt; unit" Usage="graphics.DrawImage (image, destPoints, srcRect, srcUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destPoints" Type="System.Drawing.Point[]" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="db630-948">그릴 <see cref="T:System.Drawing.Image" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-948"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destPoints"><span data-ttu-id="db630-949">평행 사변형을 정의하는 세 개의 <see cref="T:System.Drawing.Point" /> 구조체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-949">Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram.</span></span></param>
        <param name="srcRect"><span data-ttu-id="db630-950">그릴 <paramref name="image" /> 개체의 부분을 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-950"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <paramref name="image" /> object to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="db630-951"><paramref name="srcRect" /> 매개 변수가 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-951">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.</span></span></param>
        <summary><span data-ttu-id="db630-952">지정된 <see cref="T:System.Drawing.Image" />의 지정된 부분을 지정된 위치에 지정된 크기로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-952">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-953">`destPoints` 세 지점이 평행 사변형의 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-953">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="db630-954">세 가지 <xref:System.Drawing.Point> 구조는 평행 사변형의 왼쪽 위, 오른쪽 위 및 왼쪽 아래 모서리를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-954">The three <xref:System.Drawing.Point> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="db630-955">네 번째 지점은 평행 사변형을 구성 하기 위해 처음 3 개에서 추정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-955">The fourth point is extrapolated from the first three to form a parallelogram.</span></span>  
  
 <span data-ttu-id="db630-956">합니다 `srcRect` 의 사각형 부분을 지정 하는 매개 변수는 `image` 그릴 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-956">The `srcRect` parameter specifies a rectangular portion of the `image` object to draw.</span></span> <span data-ttu-id="db630-957">이 부분에서 크기가 조정 되 고 지정 된 평행 사변형 안에 맞추기 위해는 `destPoints` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-957">This portion is scaled and sheared to fit inside the parallelogram specified by the `destPoints` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-958">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-958">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-959">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-959">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-960">JPEG 파일의 예제 폴더에는 예제에서 이미지를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-960">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="db630-961">이미지를 그릴는 평행 사변형을 정의 하는 지점을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-961">Creates points that define a parallelogram in which to draw the image.</span></span>  
  
-   <span data-ttu-id="db630-962">그릴 이미지의 부분의 선택 하려면 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-962">Creates a rectangle to select the portion of the image to draw.</span></span>  
  
-   <span data-ttu-id="db630-963">그래픽 픽셀 단위 그리기를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-963">Sets the graphics drawing unit to pixel.</span></span>  
  
-   <span data-ttu-id="db630-964">화면에 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-964">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="db630-965">평행 사변형의 위치 화면에서 이미지를 찾아 그려지는 이미지의 배율과 평행 사변형의 사각형 및 크기의 크기 및 모양을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-965">The position of the parallelogram locates the image on the screen, and the size of the rectangle and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#36](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#36)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#36](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#36)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#36](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#36)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-966"><paramref name="image" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-966"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-967">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-967">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit srcUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit srcUnit);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.GraphicsUnit -&gt; unit" Usage="graphics.DrawImage (image, destPoints, srcRect, srcUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="db630-968">그릴 <see cref="T:System.Drawing.Image" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-968"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destPoints"><span data-ttu-id="db630-969">평행 사변형을 정의하는 세 개의 <see cref="T:System.Drawing.PointF" /> 구조체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-969">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram.</span></span></param>
        <param name="srcRect"><span data-ttu-id="db630-970">그릴 <paramref name="image" /> 개체의 부분을 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-970"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the <paramref name="image" /> object to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="db630-971"><paramref name="srcRect" /> 매개 변수가 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-971">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.</span></span></param>
        <summary><span data-ttu-id="db630-972">지정된 <see cref="T:System.Drawing.Image" />의 지정된 부분을 지정된 위치에 지정된 크기로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-972">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-973">`destPoints` 세 지점이 평행 사변형의 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-973">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="db630-974">세 가지 <xref:System.Drawing.PointF> 구조는 평행 사변형의 왼쪽 위, 오른쪽 위 및 왼쪽 아래 모서리를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-974">The three <xref:System.Drawing.PointF> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="db630-975">네 번째 지점은 평행 사변형을 구성 하기 위해 처음 3 개에서 추정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-975">The fourth point is extrapolated from the first three to form a parallelogram.</span></span>  
  
 <span data-ttu-id="db630-976">합니다 `srcRect` 의 사각형 부분을 지정 하는 매개 변수는 `image` 그릴 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-976">The `srcRect` parameter specifies a rectangular portion of the `image` object to draw.</span></span> <span data-ttu-id="db630-977">이 부분에서 크기가 조정 되 고 지정 된 평행 사변형 안에 맞추기 위해는 `destPoints` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-977">This portion is scaled and sheared to fit inside the parallelogram specified by the `destPoints` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-978">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-978">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-979">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-979">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-980">JPEG 파일의 예제 폴더에는 예제에서 이미지를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-980">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="db630-981">이미지를 그릴 대상 평행 사변형을 정의 하는 지점을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-981">Creates points that define a destination parallelogram in which to draw the image.</span></span>  
  
-   <span data-ttu-id="db630-982">이미지의 일부를 추출할 소스 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-982">Creates a source rectangle from which to extract a portion of the image.</span></span>  
  
-   <span data-ttu-id="db630-983">소스 사각형의 측정 단위를 픽셀로 설정입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-983">Sets the unit of measure of the source rectangle to pixels.</span></span>  
  
-   <span data-ttu-id="db630-984">화면에 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-984">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="db630-985">대상 평행 사변형의 위치는 화면에서 이미지를 정하고, 대상 평행 사변형의 소스 사각형 및 크기의 크기 및 모양을 결정합니다 그려지는 이미지의 배율과 및 사각형의 크기에 따라 결정 원본 이미지의 어떤 부분이 화면에 그려집니다.</span><span class="sxs-lookup"><span data-stu-id="db630-985">The position of the destination parallelogram locates the image on the screen, the size of the source rectangle and the size and shape of the destination parallelogram determines the scaling and shearing of the drawn image, and the size of the rectangle determines what portion of the original image is drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#42](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#42)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#42](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#42)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#42](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-986"><paramref name="image" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-986"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-987">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-987">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Rectangle destRect, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit srcUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::Rectangle destRect, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit srcUnit);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Rectangle * System.Drawing.Rectangle * System.Drawing.GraphicsUnit -&gt; unit" Usage="graphics.DrawImage (image, destRect, srcRect, srcUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="db630-988">그릴 <see cref="T:System.Drawing.Image" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-988"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destRect"><span data-ttu-id="db630-989">그려지는 이미지의 위치와 크기를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-989"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image.</span></span> <span data-ttu-id="db630-990">이미지는 사각형에 맞게 크기가 조정됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-990">The image is scaled to fit the rectangle.</span></span></param>
        <param name="srcRect"><span data-ttu-id="db630-991">그릴 <paramref name="image" /> 개체의 부분을 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-991"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <paramref name="image" /> object to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="db630-992"><paramref name="srcRect" /> 매개 변수가 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-992">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.</span></span></param>
        <summary><span data-ttu-id="db630-993">지정된 <see cref="T:System.Drawing.Image" />의 지정된 부분을 지정된 위치에 지정된 크기로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-993">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-994">합니다 `srcRect` 의 사각형 부분을 지정 하는 매개 변수는 `image` 그릴 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-994">The `srcRect` parameter specifies a rectangular portion of the `image` object to draw.</span></span> <span data-ttu-id="db630-995">이 부분에서 지정 된 사각형 내에 맞게 크기가 조정 되는 `destRect` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-995">This portion is scaled to fit inside the rectangle specified by the `destRect` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-996">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-996">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-997">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-997">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-998">JPEG 파일의 예제 폴더에는 예제에서 이미지를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-998">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="db630-999">이미지를 그릴 대상 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-999">Creates a destination rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="db630-1000">이미지의 일부를 추출할 소스 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1000">Creates a source rectangle from which to extract a portion of the image.</span></span>  
  
-   <span data-ttu-id="db630-1001">소스 사각형의 측정 단위를 픽셀로 설정입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1001">Sets the unit of measure of the source rectangle to pixels.</span></span>  
  
-   <span data-ttu-id="db630-1002">화면에 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1002">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="db630-1003">대상 사각형의 위치는 화면에서 이미지를 정하고, 원본 및 대상 사각형의 크기는 그려지는 이미지의 배율을 결정 및 소스 사각형의 크기에 그려지는 원본 이미지의 어떤 부분을 결정 합니다 화면입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1003">The position of the destination rectangle locates the image on the screen, the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#47](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#47)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#47](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#47)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#47](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#47)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1004"><paramref name="image" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1004"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-1005">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-1005">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.RectangleF destRect, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.RectangleF destRect, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit srcUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::RectangleF destRect, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit srcUnit);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.RectangleF * System.Drawing.RectangleF * System.Drawing.GraphicsUnit -&gt; unit" Usage="graphics.DrawImage (image, destRect, srcRect, srcUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="db630-1006">그릴 <see cref="T:System.Drawing.Image" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1006"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destRect"><span data-ttu-id="db630-1007">그려지는 이미지의 위치와 크기를 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1007"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn image.</span></span> <span data-ttu-id="db630-1008">이미지는 사각형에 맞게 크기가 조정됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1008">The image is scaled to fit the rectangle.</span></span></param>
        <param name="srcRect"><span data-ttu-id="db630-1009">그릴 <paramref name="image" /> 개체의 부분을 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1009"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the <paramref name="image" /> object to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="db630-1010"><paramref name="srcRect" /> 매개 변수가 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1010">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.</span></span></param>
        <summary><span data-ttu-id="db630-1011">지정된 <see cref="T:System.Drawing.Image" />의 지정된 부분을 지정된 위치에 지정된 크기로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1011">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1012">합니다 `srcRect` 의 사각형 부분을 지정 하는 매개 변수는 `image` 그릴 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1012">The `srcRect` parameter specifies a rectangular portion of the `image` object to draw.</span></span> <span data-ttu-id="db630-1013">이 부분에서 지정 된 사각형 내에 맞게 크기가 조정 되는 `destRect` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1013">This portion is scaled to fit inside the rectangle specified by the `destRect` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1014">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1014">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1015">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1015">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1016">JPEG 파일의 예제 폴더에는 예제에서 이미지를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1016">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="db630-1017">이미지를 그릴 대상 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1017">Creates a destination rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="db630-1018">이미지의 일부를 추출할 소스 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1018">Creates a source rectangle from which to extract a portion of the image.</span></span>  
  
-   <span data-ttu-id="db630-1019">소스 사각형의 측정 단위를 픽셀로 설정입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1019">Sets the unit of measure of the source rectangle to pixels.</span></span>  
  
-   <span data-ttu-id="db630-1020">화면에 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1020">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="db630-1021">대상 사각형의 위치는 화면에서 이미지를 정하고, 원본 및 대상 사각형의 크기는 그려지는 이미지의 배율을 결정 및 소스 사각형의 크기에 그려지는 원본 이미지의 어떤 부분을 결정 합니다 화면입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1021">The position of the destination rectangle locates the image on the screen, the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#57](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#57)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#57](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#57)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#57](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#57)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1022"><paramref name="image" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1022"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-1023">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-1023">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Point[] destPoints, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, cli::array &lt;System::Drawing::Point&gt; ^ destPoints, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Point[] * System.Drawing.Rectangle * System.Drawing.GraphicsUnit * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.DrawImage (image, destPoints, srcRect, srcUnit, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destPoints" Type="System.Drawing.Point[]" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="db630-1024">그릴 <see cref="T:System.Drawing.Image" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1024"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destPoints"><span data-ttu-id="db630-1025">평행 사변형을 정의하는 세 개의 <see cref="T:System.Drawing.Point" /> 구조체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1025">Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram.</span></span></param>
        <param name="srcRect"><span data-ttu-id="db630-1026">그릴 <paramref name="image" /> 개체의 부분을 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1026"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <paramref name="image" /> object to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="db630-1027"><paramref name="srcRect" /> 매개 변수가 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1027">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="db630-1028"><paramref name="image" /> 개체에 대한 다시 칠하기와 감마 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1028"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <paramref name="image" /> object.</span></span></param>
        <summary><span data-ttu-id="db630-1029">지정된 <see cref="T:System.Drawing.Image" />의 지정된 부분을 지정된 위치에 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1029">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1030">`destPoints` 세 지점이 평행 사변형의 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1030">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="db630-1031">세 가지 <xref:System.Drawing.Point> 구조는 평행 사변형의 왼쪽 위, 오른쪽 위 및 왼쪽 아래 모서리를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1031">The three <xref:System.Drawing.Point> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="db630-1032">네 번째 지점은 평행 사변형을 구성 하기 위해 처음 3 개에서 추정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1032">The fourth point is extrapolated from the first three to form a parallelogram.</span></span>  
  
 <span data-ttu-id="db630-1033">합니다 `srcRect` 의 사각형 부분을 지정 하는 매개 변수는`image` 그릴 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1033">The `srcRect` parameter specifies a rectangular portion of the`image` object to draw.</span></span> <span data-ttu-id="db630-1034">이 부분에서 크기가 조정 되 고 지정 된 평행 사변형 안에 맞추기 위해는 `destPoints` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1034">This portion is scaled and sheared to fit inside the parallelogram specified by the `destPoints` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1035">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1035">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1036">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1036">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1037">JPEG 파일의 예제 폴더에는 예제에서 이미지를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1037">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="db630-1038">이미지를 그릴는 평행 사변형을 정의 하는 지점을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1038">Creates points that define a parallelogram in which to draw the image.</span></span>  
  
-   <span data-ttu-id="db630-1039">그릴 이미지의 부분의 선택 하려면 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1039">Creates a rectangle to select the portion of the image to draw.</span></span>  
  
-   <span data-ttu-id="db630-1040">그래픽 픽셀 단위 그리기를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1040">Sets the graphics drawing unit to pixel.</span></span>  
  
-   <span data-ttu-id="db630-1041">화면에 원본 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1041">Draws the original image to the screen.</span></span>  
  
-   <span data-ttu-id="db630-1042">조정된 된 이미지를 그릴 추가 평행 사변형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1042">Creates an additional parallelogram in which to draw an adjusted image.</span></span>  
  
-   <span data-ttu-id="db630-1043">만들고 더 큰 평균 보다 감마 값 조정된 된 이미지의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1043">Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</span></span>  
  
-   <span data-ttu-id="db630-1044">화면으로 조정된 된 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1044">Draws the adjusted image to the screen.</span></span>  
  
 <span data-ttu-id="db630-1045">원래, 조정 되지 않은 평행 사변형에 대 한 위치를 화면에 이미지를 찾는 및 그려지는 이미지의 배율과 평행 사변형의 사각형 및 크기의 크기 및 모양을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1045">For the original, unadjusted parallelogram, the position locates the image on the screen, and the size of the rectangle and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#37](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#37)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#37](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#37)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#37](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#37)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1046"><paramref name="image" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1046"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-1047">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-1047">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.GraphicsUnit * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.DrawImage (image, destPoints, srcRect, srcUnit, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="db630-1048">그릴 <see cref="T:System.Drawing.Image" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1048"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destPoints"><span data-ttu-id="db630-1049">평행 사변형을 정의하는 세 개의 <see cref="T:System.Drawing.PointF" /> 구조체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1049">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram.</span></span></param>
        <param name="srcRect"><span data-ttu-id="db630-1050">그릴 <paramref name="image" /> 개체의 부분을 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1050"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the <paramref name="image" /> object to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="db630-1051"><paramref name="srcRect" /> 매개 변수가 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1051">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="db630-1052"><paramref name="image" /> 개체에 대한 다시 칠하기와 감마 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1052"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <paramref name="image" /> object.</span></span></param>
        <summary><span data-ttu-id="db630-1053">지정된 <see cref="T:System.Drawing.Image" />의 지정된 부분을 지정된 위치에 지정된 크기로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1053">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1054">`destPoints` 세 지점이 평행 사변형의 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1054">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="db630-1055">세 가지 <xref:System.Drawing.PointF> 구조는 평행 사변형의 왼쪽 위, 오른쪽 위 및 왼쪽 아래 모서리를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1055">The three <xref:System.Drawing.PointF> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="db630-1056">네 번째 지점은 평행 사변형을 구성 하기 위해 처음 3 개에서 추정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1056">The fourth point is extrapolated from the first three to form a parallelogram.</span></span>  
  
 <span data-ttu-id="db630-1057">합니다 `srcRect` 의 사각형 부분을 지정 하는 매개 변수는 `image` 그릴 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1057">The `srcRect` parameter specifies a rectangular portion of the `image` object to draw.</span></span> <span data-ttu-id="db630-1058">이 부분에서 크기가 조정 되 고 지정 된 평행 사변형 안에 맞추기 위해는 `destPoints` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1058">This portion is scaled and sheared to fit inside the parallelogram specified by the `destPoints` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1059">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1059">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1060">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1060">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1061">JPEG 파일의 예제 폴더에는 예제에서 이미지를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1061">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="db630-1062">이미지를 그릴 대상 평행 사변형을 정의 하는 지점을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1062">Creates points that define a destination parallelogram in which to draw the image.</span></span>  
  
-   <span data-ttu-id="db630-1063">이미지의 일부를 추출할 소스 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1063">Creates a source rectangle from which to extract a portion of the image.</span></span>  
  
-   <span data-ttu-id="db630-1064">소스 사각형의 측정 단위를 픽셀로 설정입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1064">Sets the unit of measure of the source rectangle to pixels.</span></span>  
  
-   <span data-ttu-id="db630-1065">화면에 원본 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1065">Draws the original image to the screen.</span></span>  
  
-   <span data-ttu-id="db630-1066">조정된 된 이미지를 그릴 추가 평행 사변형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1066">Creates an additional parallelogram in which to draw an adjusted image.</span></span>  
  
-   <span data-ttu-id="db630-1067">만들고 더 큰 평균 보다 감마 값 조정된 된 이미지의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1067">Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</span></span>  
  
-   <span data-ttu-id="db630-1068">화면으로 조정된 된 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1068">Draws the adjusted image to the screen.</span></span>  
  
 <span data-ttu-id="db630-1069">위치 조정 되지 않은 원래 대상 평행 사변형에 대 한 크기 및 소스 사각형의 크기를 사용 하는, 화면에 이미지를 찾는 및 그려지는 이미지 및 크기의 배율과 대상 평행 사변형의 모양을 결정 합니다 사각형을 화면에 그려지는 원본 이미지의 부분을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1069">For the original, unadjusted destination parallelogram, the position locates the image on the screen, the size of the source rectangle and the size and shape of the destination parallelogram determines the scaling and shearing of the drawn image, and the size of the rectangle determines what portion of the original image is drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#43](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#43)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#43](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#43)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#43](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#43)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1070"><paramref name="image" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1070"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-1071">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-1071">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, int x, int y, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, int32 x, int32 y, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit srcUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, int x, int y, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit srcUnit);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * int * int * System.Drawing.Rectangle * System.Drawing.GraphicsUnit -&gt; unit" Usage="graphics.DrawImage (image, x, y, srcRect, srcUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="db630-1072">그릴 <see cref="T:System.Drawing.Image" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1072"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="x"><span data-ttu-id="db630-1073">그려지는 이미지의 왼쪽 위 모퉁이에 대한 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1073">The x-coordinate of the upper-left corner of the drawn image.</span></span></param>
        <param name="y"><span data-ttu-id="db630-1074">그려지는 이미지의 왼쪽 위 모퉁이에 대한 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1074">The y-coordinate of the upper-left corner of the drawn image.</span></span></param>
        <param name="srcRect"><span data-ttu-id="db630-1075">그릴 <paramref name="image" /> 개체의 부분을 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1075"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <paramref name="image" /> object to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="db630-1076"><paramref name="srcRect" /> 매개 변수가 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1076">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.</span></span></param>
        <summary><span data-ttu-id="db630-1077">이미지의 부분을 지정된 위치에 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1077">Draws a portion of an image at a specified location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1078"><xref:System.Drawing.Image> 픽셀 너비에 대 한 값 및 가로 해상도 (인치당 도트 수)에 대 한 값을 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1078">An <xref:System.Drawing.Image> stores a value for pixel width and a value for horizontal resolution (dots per inch).</span></span> <span data-ttu-id="db630-1079">이미지를 인치 단위로 측정 된 실제 너비를 픽셀 너비의 가로 해상도 나눈 것입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1079">The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</span></span> <span data-ttu-id="db630-1080">예를 들어, 360 픽셀 너비, 72 인치당의 가로 해상도 사용 하 여 이미지에는 실제 너비는 5 인치입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1080">For example, an image with a pixel width of 360 and a horizontal resolution of 72 dots per inch has a physical width of 5 inches.</span></span> <span data-ttu-id="db630-1081">이와 유사 픽셀 높이 실제 높이에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1081">Similar remarks apply to pixel height and physical height.</span></span>  
  
 <span data-ttu-id="db630-1082">이 메서드는 실제 크기를 사용 하 여 이미지 부분을 인치 디스플레이 디바이스의 해상도 (인치당 도트 수)와 관계 없이 올바른 크기를 가집니다 이미지의 일부를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1082">This method draws a portion of an image using its physical size, so the image portion will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</span></span> <span data-ttu-id="db630-1083">예를 들어, 216 픽셀 너비, 72 인치당의 가로 해상도 이미지 부분에는 것으로 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1083">For example, suppose an image portion has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</span></span> <span data-ttu-id="db630-1084">부분 렌더링된 이미지의 픽셀 너비 (216/72) 부분을 그릴 이미지 96dpi 해상도 포함 하는 디바이스에서이 메서드를 호출 하면 수 \* 96 = 288 개.</span><span class="sxs-lookup"><span data-stu-id="db630-1084">If you call this method to draw that image portion on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image portion will be (216/72)\*96 = 288.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1085">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1085">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1086">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1086">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1087">JPEG 파일의 예제 폴더에는 예제에서 이미지를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1087">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="db630-1088">그릴 이미지의 왼쪽 위 모퉁이의 좌표를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1088">Creates the coordinates at which to draw the upper-left corner of the image.</span></span>  
  
-   <span data-ttu-id="db630-1089">이미지의 일부를 추출할 소스 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1089">Creates a source rectangle from which to extract a portion of the image.</span></span>  
  
-   <span data-ttu-id="db630-1090">소스 사각형의 측정 단위를 픽셀로 설정입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1090">Sets the unit of measure of the source rectangle to pixels.</span></span>  
  
-   <span data-ttu-id="db630-1091">화면에 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1091">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="db630-1092">소스 사각형의 크기를 화면에 그려지는 실제 크기는 원본 이미지의 부분을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1092">The size of the source rectangle determines what portion of the unscaled original image is drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#59](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#59)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#59](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#59)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#59](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#59)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1093"><paramref name="image" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1093"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-1094">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-1094">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * int * int * int * int -&gt; unit" Usage="graphics.DrawImage (image, x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="db630-1095">그릴 <see cref="T:System.Drawing.Image" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1095"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="x"><span data-ttu-id="db630-1096">그려지는 이미지의 왼쪽 위 모퉁이에 대한 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1096">The x-coordinate of the upper-left corner of the drawn image.</span></span></param>
        <param name="y"><span data-ttu-id="db630-1097">그려지는 이미지의 왼쪽 위 모퉁이에 대한 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1097">The y-coordinate of the upper-left corner of the drawn image.</span></span></param>
        <param name="width"><span data-ttu-id="db630-1098">그려지는 이미지의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1098">Width of the drawn image.</span></span></param>
        <param name="height"><span data-ttu-id="db630-1099">그려지는 이미지의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1099">Height of the drawn image.</span></span></param>
        <summary><span data-ttu-id="db630-1100">지정된 <see cref="T:System.Drawing.Image" />를 지정된 위치에 지정된 크기로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1100">Draws the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1101">정의 된 사각형의 `x`, `y`를 `width`, 및 `height` 그려지는 이미지의 크기와 위치를 결정 하는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1101">The rectangle defined by the `x`, `y`, `width`, and `height` parameters determines the position and size of the drawn image.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1102">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1102">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1103">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1103">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1104">JPEG 파일의 예제 폴더에는 예제에서 이미지를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1104">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="db630-1105">이미지를 그릴 사각형의 크기와 위치를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1105">Creates the position and size of a rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="db630-1106">화면에 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1106">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="db630-1107">사각형의 위치를 화면에 이미지를 찾습니다 하 고 원본 이미지의 크기 및 사각형의 크기 그려지는 이미지의 배율을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1107">The position of the rectangle locates the image on the screen, and the size of the original image and the size of the rectangle determines the scaling of the drawn image.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#60](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#60)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#60](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#60)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#60](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#60)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1108"><paramref name="image" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1108"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-1109">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-1109">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, float x, float y, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, float32 x, float32 y, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit srcUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, float x, float y, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit srcUnit);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * single * single * System.Drawing.RectangleF * System.Drawing.GraphicsUnit -&gt; unit" Usage="graphics.DrawImage (image, x, y, srcRect, srcUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="db630-1110">그릴 <see cref="T:System.Drawing.Image" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1110"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="x"><span data-ttu-id="db630-1111">그려지는 이미지의 왼쪽 위 모퉁이에 대한 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1111">The x-coordinate of the upper-left corner of the drawn image.</span></span></param>
        <param name="y"><span data-ttu-id="db630-1112">그려지는 이미지의 왼쪽 위 모퉁이에 대한 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1112">The y-coordinate of the upper-left corner of the drawn image.</span></span></param>
        <param name="srcRect"><span data-ttu-id="db630-1113">그릴 <see cref="T:System.Drawing.Image" />의 부분을 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1113"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the <see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="db630-1114"><paramref name="srcRect" /> 매개 변수가 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1114">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.</span></span></param>
        <summary><span data-ttu-id="db630-1115">이미지의 부분을 지정된 위치에 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1115">Draws a portion of an image at a specified location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1116"><xref:System.Drawing.Image> 픽셀 너비에 대 한 값 및 가로 해상도 (인치당 도트 수)에 대 한 값을 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1116">An <xref:System.Drawing.Image> stores a value for pixel width and a value for horizontal resolution (dots per inch).</span></span> <span data-ttu-id="db630-1117">이미지를 인치 단위로 측정 된 실제 너비를 픽셀 너비의 가로 해상도 나눈 것입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1117">The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</span></span> <span data-ttu-id="db630-1118">예를 들어, 360 픽셀 너비, 72 인치당의 가로 해상도 사용 하 여 이미지에는 실제 너비는 5 인치입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1118">For example, an image with a pixel width of 360 and a horizontal resolution of 72 dots per inch has a physical width of 5 inches.</span></span> <span data-ttu-id="db630-1119">이와 유사 픽셀 높이 실제 높이에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1119">Similar remarks apply to pixel height and physical height.</span></span>  
  
 <span data-ttu-id="db630-1120">이 메서드는 실제 크기를 사용 하 여 이미지 부분을 인치 디스플레이 디바이스의 해상도 (인치당 도트 수)와 관계 없이 올바른 크기를 가집니다 이미지의 일부를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1120">This method draws a portion of an image using its physical size, so the image portion will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</span></span> <span data-ttu-id="db630-1121">예를 들어, 216 픽셀 너비, 72 인치당의 가로 해상도 이미지 부분에는 것으로 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1121">For example, suppose an image portion has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</span></span> <span data-ttu-id="db630-1122">부분 렌더링된 이미지의 픽셀 너비 (216/72) 부분을 그릴 이미지 96dpi 해상도 포함 하는 디바이스에서이 메서드를 호출 하면 수 \* 96 = 288 개.</span><span class="sxs-lookup"><span data-stu-id="db630-1122">If you call this method to draw that image portion on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image portion will be (216/72)\*96 = 288.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1123">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1123">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1124">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1124">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1125">JPEG 파일의 예제 폴더에는 예제에서 이미지를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1125">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="db630-1126">그릴 이미지의 왼쪽 위 모퉁이의 좌표를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1126">Creates the coordinates at which to draw the upper-left corner of the image.</span></span>  
  
-   <span data-ttu-id="db630-1127">이미지의 일부를 추출할 소스 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1127">Creates a source rectangle from which to extract a portion of the image.</span></span>  
  
-   <span data-ttu-id="db630-1128">소스 사각형의 측정 단위를 픽셀로 설정입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1128">Sets the unit of measure of the source rectangle to pixels.</span></span>  
  
-   <span data-ttu-id="db630-1129">화면에 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1129">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="db630-1130">소스 사각형의 크기를 화면에 그려지는 실제 크기는 원본 이미지의 부분을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1130">The size of the source rectangle determines what portion of the unscaled original image is drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#62](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#62)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#62](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#62)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#62](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#62)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1131"><paramref name="image" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1131"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-1132">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-1132">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, float x, float y, float width, float height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, float32 x, float32 y, float32 width, float32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, float x, float y, float width, float height);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * single * single * single * single -&gt; unit" Usage="graphics.DrawImage (image, x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="db630-1133">그릴 <see cref="T:System.Drawing.Image" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1133"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="x"><span data-ttu-id="db630-1134">그려지는 이미지의 왼쪽 위 모퉁이에 대한 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1134">The x-coordinate of the upper-left corner of the drawn image.</span></span></param>
        <param name="y"><span data-ttu-id="db630-1135">그려지는 이미지의 왼쪽 위 모퉁이에 대한 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1135">The y-coordinate of the upper-left corner of the drawn image.</span></span></param>
        <param name="width"><span data-ttu-id="db630-1136">그려지는 이미지의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1136">Width of the drawn image.</span></span></param>
        <param name="height"><span data-ttu-id="db630-1137">그려지는 이미지의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1137">Height of the drawn image.</span></span></param>
        <summary><span data-ttu-id="db630-1138">지정된 <see cref="T:System.Drawing.Image" />를 지정된 위치에 지정된 크기로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1138">Draws the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1139">정의 된 사각형의 `x`, `y`를 `width`, 및 `height` 그려지는 이미지의 크기와 위치를 결정 하는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1139">The rectangle defined by the `x`, `y`, `width`, and `height` parameters determines the position and size of the drawn image.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1140">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1140">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1141">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1141">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1142">JPEG 파일의 예제 폴더에는 예제에서 이미지를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1142">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="db630-1143">이미지를 그릴 사각형의 크기와 위치를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1143">Creates the position and size of a rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="db630-1144">화면에 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1144">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="db630-1145">사각형의 위치를 화면에 이미지를 찾습니다 하 고 원본 이미지의 크기 및 사각형의 크기 그려지는 이미지의 배율을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1145">The position of the rectangle locates the image on the screen, and the size of the original image and the size of the rectangle determines the scaling of the drawn image.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#63](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#63)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#63](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#63)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#63](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#63)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1146"><paramref name="image" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1146"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-1147">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-1147">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr, System.Drawing.Graphics.DrawImageAbort callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Point[] destPoints, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Imaging.ImageAttributes imageAttr, class System.Drawing.Graphics/DrawImageAbort callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, cli::array &lt;System::Drawing::Point&gt; ^ destPoints, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Imaging::ImageAttributes ^ imageAttr, System::Drawing::Graphics::DrawImageAbort ^ callback);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Point[] * System.Drawing.Rectangle * System.Drawing.GraphicsUnit * System.Drawing.Imaging.ImageAttributes * System.Drawing.Graphics.DrawImageAbort -&gt; unit" Usage="graphics.DrawImage (image, destPoints, srcRect, srcUnit, imageAttr, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destPoints" Type="System.Drawing.Point[]" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+DrawImageAbort" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="db630-1148">그릴 <see cref="T:System.Drawing.Image" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1148"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destPoints"><span data-ttu-id="db630-1149">평행 사변형을 정의하는 세 개의 <see cref="T:System.Drawing.PointF" /> 구조체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1149">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram.</span></span></param>
        <param name="srcRect"><span data-ttu-id="db630-1150">그릴 <paramref name="image" /> 개체의 부분을 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1150"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <paramref name="image" /> object to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="db630-1151"><paramref name="srcRect" /> 매개 변수가 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1151">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="db630-1152"><paramref name="image" /> 개체에 대한 다시 칠하기와 감마 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1152"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <paramref name="image" /> object.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-1153">이미지를 그리는 동안 호출할 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1153"><see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image.</span></span> <span data-ttu-id="db630-1154">이 메서드는 애플리케이션에 의해 결정된 조건에 따라 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> 메서드의 실행을 중지할지 여부를 확인하기 위해 자주 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1154">This method is called frequently to check whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> method according to application-determined criteria.</span></span></param>
        <summary><span data-ttu-id="db630-1155">지정된 <see cref="T:System.Drawing.Image" />의 지정된 부분을 지정된 위치에 지정된 크기로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1155">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1156">`destPoints` 세 지점이 평행 사변형의 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1156">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="db630-1157">세 가지 <xref:System.Drawing.PointF> 구조는 평행 사변형의 왼쪽 위, 오른쪽 위 및 왼쪽 아래 모서리를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1157">The three <xref:System.Drawing.PointF> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="db630-1158">네 번째 지점은 평행 사변형을 구성 하기 위해 처음 3 개에서 추정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1158">The fourth point is extrapolated from the first three to form a parallelogram.</span></span>  
  
 <span data-ttu-id="db630-1159">합니다 `srcRect` 의 사각형 부분을 지정 하는 매개 변수는 `image` 그릴 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1159">The `srcRect` parameter specifies a rectangular portion of the `image` object to draw.</span></span> <span data-ttu-id="db630-1160">이 부분에서 크기가 조정 되 고 지정 된 평행 사변형 안에 맞추기 위해는 `destPoints` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1160">This portion is scaled and sheared to fit inside the parallelogram specified by the `destPoints` parameter.</span></span>  
  
 <span data-ttu-id="db630-1161">이 오버 로드는 `callback` 매개 변수는 애플리케이션에 의해 결정 된 조건에 따라 시작 되 면 이미지의 그리기를 중지 하는 방법을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1161">This overload with the `callback` parameter provides the means to stop the drawing of an image once it starts according to criteria determined by the application.</span></span> <span data-ttu-id="db630-1162">예를 들어, 애플리케이션은 큰 이미지를 그리기 시작할 수 및 사용자 사례 애플리케이션 수 그리기를 중지 하는 화면 이미지를 스크롤할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1162">For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1163">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1163">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1164">코드에 대 한 콜백 메서드를 먼저 정의 <xref:System.Drawing.Graphics.DrawImageAbort> 대리자를 보기 위해 단순한 테스트 단순한 정의 이며 여부를 <xref:System.Drawing.Graphics.DrawImage%2A> 메서드 호출을 null로 `callBackData` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="db630-1164">The code first defines a callback method for the <xref:System.Drawing.Graphics.DrawImageAbort> delegate; the definition is simplistic and merely tests to see whether the <xref:System.Drawing.Graphics.DrawImage%2A> method calls it with a null `callBackData` parameter.</span></span> <span data-ttu-id="db630-1165">본문 예제에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1165">The main body of the example performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1166">인스턴스를 만듭니다는 <xref:System.Drawing.Graphics.DrawImageAbort> 콜백 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1166">Creates an instance of the <xref:System.Drawing.Graphics.DrawImageAbort> callback method:</span></span>  
  
-   <span data-ttu-id="db630-1167">JPEG 파일의 예제 폴더에는 예제에서 이미지를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1167">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="db630-1168">이미지를 그릴는 평행 사변형을 정의 하는 지점을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1168">Creates points that define a parallelogram in which to draw the image.</span></span>  
  
-   <span data-ttu-id="db630-1169">그릴 이미지의 부분의 선택 하려면 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1169">Creates a rectangle to select the portion of the image to draw.</span></span>  
  
-   <span data-ttu-id="db630-1170">그래픽 픽셀 단위 그리기를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1170">Sets the graphics drawing unit to pixel.</span></span>  
  
-   <span data-ttu-id="db630-1171">화면에 원본 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1171">Draws the original image to the screen.</span></span>  
  
-   <span data-ttu-id="db630-1172">조정된 된 이미지를 그릴 추가 평행 사변형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1172">Creates an additional parallelogram in which to draw an adjusted image.</span></span>  
  
-   <span data-ttu-id="db630-1173">만들고 더 큰 평균 보다 감마 값 조정된 된 이미지의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1173">Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</span></span>  
  
-   <span data-ttu-id="db630-1174">화면으로 조정된 된 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1174">Draws the adjusted image to the screen.</span></span>  
  
 <span data-ttu-id="db630-1175">원래, 조정 되지 않은 평행 사변형에 대 한 위치를 화면에 이미지를 찾는 및 그려지는 이미지의 배율과 평행 사변형의 사각형 및 크기의 크기 및 모양을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1175">For the original, unadjusted parallelogram, the position locates the image on the screen, and the size of the rectangle and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.</span></span>  
  
 <span data-ttu-id="db630-1176">이 예에서는 통과 하지 않는 오버 로드를 사용 하므로 `callBackData` 매개 변수를를 <xref:System.Drawing.Graphics.DrawImageAbort> 콜백이 반환 `true`, 유발 하는 <xref:System.Drawing.Graphics.DrawImage%2A> 메서드 종료 및 예제에 포함 된 예외 처리 코드를 출력 합니다 예외 텍스트를 그리지 않고 이미지입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1176">Because this example uses an overload that does not pass a `callBackData` parameter, the <xref:System.Drawing.Graphics.DrawImageAbort> callback returns `true`, which causes the <xref:System.Drawing.Graphics.DrawImage%2A> method to end, and the exception-handling code included in the example prints out the exception text rather than drawing the image.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#38](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#38)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#38](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#38)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#38](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#38)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1177"><paramref name="image" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1177"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-1178">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-1178">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr, System.Drawing.Graphics.DrawImageAbort callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Imaging.ImageAttributes imageAttr, class System.Drawing.Graphics/DrawImageAbort callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Imaging::ImageAttributes ^ imageAttr, System::Drawing::Graphics::DrawImageAbort ^ callback);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.GraphicsUnit * System.Drawing.Imaging.ImageAttributes * System.Drawing.Graphics.DrawImageAbort -&gt; unit" Usage="graphics.DrawImage (image, destPoints, srcRect, srcUnit, imageAttr, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+DrawImageAbort" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="db630-1179">그릴 <see cref="T:System.Drawing.Image" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1179"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destPoints"><span data-ttu-id="db630-1180">평행 사변형을 정의하는 세 개의 <see cref="T:System.Drawing.PointF" /> 구조체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1180">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram.</span></span></param>
        <param name="srcRect"><span data-ttu-id="db630-1181">그릴 <paramref name="image" /> 개체의 부분을 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1181"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the <paramref name="image" /> object to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="db630-1182"><paramref name="srcRect" /> 매개 변수가 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1182">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="db630-1183"><paramref name="image" /> 개체에 대한 다시 칠하기와 감마 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1183"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <paramref name="image" /> object.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-1184">이미지를 그리는 동안 호출할 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1184"><see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image.</span></span> <span data-ttu-id="db630-1185">이 메서드는 애플리케이션에 의해 결정된 조건에 따라 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> 메서드의 실행을 중지할지 여부를 확인하기 위해 자주 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1185">This method is called frequently to check whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> method according to application-determined criteria.</span></span></param>
        <summary><span data-ttu-id="db630-1186">지정된 <see cref="T:System.Drawing.Image" />의 지정된 부분을 지정된 위치에 지정된 크기로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1186">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1187">`destPoints` 세 지점이 평행 사변형의 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1187">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="db630-1188">세 가지 <xref:System.Drawing.PointF> 구조는 평행 사변형의 왼쪽 위, 오른쪽 위 및 왼쪽 아래 모서리를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1188">The three <xref:System.Drawing.PointF> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="db630-1189">네 번째 지점은 평행 사변형을 구성 하기 위해 처음 3 개에서 추정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1189">The fourth point is extrapolated from the first three to form a parallelogram.</span></span>  
  
 <span data-ttu-id="db630-1190">합니다 `srcRect` 의 사각형 부분을 지정 하는 매개 변수는 `image` 그릴 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1190">The `srcRect` parameter specifies a rectangular portion of the `image` object to draw.</span></span> <span data-ttu-id="db630-1191">이 부분에서 크기가 조정 되 고 지정 된 평행 사변형 안에 맞추기 위해는 `destPoints` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1191">This portion is scaled and sheared to fit inside the parallelogram specified by the `destPoints` parameter.</span></span>  
  
 <span data-ttu-id="db630-1192">이 오버 로드는 `callback` 매개 변수는 애플리케이션에 의해 결정 된 조건에 따라 시작 되 면 이미지의 그리기를 중지 하는 방법을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1192">This overload with the `callback` parameter provides the means to stop the drawing of an image once it starts according to criteria determined by the application.</span></span> <span data-ttu-id="db630-1193">예를 들어, 애플리케이션은 큰 이미지를 그리기 시작할 수 및 사용자 사례 애플리케이션 수 그리기를 중지 하는 화면 이미지를 스크롤할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1193">For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1194">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1194">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1195">코드에 대 한 콜백 메서드를 먼저 정의 <xref:System.Drawing.Graphics.DrawImageAbort> 대리자를 보기 위해 단순한 테스트 단순한 정의 이며 여부를 <xref:System.Drawing.Graphics.DrawImage%2A> 메서드 호출을 null로 `callBackData` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="db630-1195">The code first defines a callback method for the <xref:System.Drawing.Graphics.DrawImageAbort> delegate; the definition is simplistic and merely tests to see whether the <xref:System.Drawing.Graphics.DrawImage%2A> method calls it with a null `callBackData` parameter.</span></span> <span data-ttu-id="db630-1196">본문 예제에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1196">The main body of the example performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1197">인스턴스를 만듭니다는 <xref:System.Drawing.Graphics.DrawImageAbort> 콜백 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1197">Creates an instance of the <xref:System.Drawing.Graphics.DrawImageAbort> callback method.</span></span>  
  
-   <span data-ttu-id="db630-1198">JPEG 파일의 예제 폴더에는 예제에서 이미지를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1198">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="db630-1199">이미지를 그릴는 평행 사변형을 정의 하는 지점을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1199">Creates points that define a parallelogram in which to draw the image.</span></span>  
  
-   <span data-ttu-id="db630-1200">그릴 이미지의 부분의 선택 하려면 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1200">Creates a rectangle to select the portion of the image to draw.</span></span>  
  
-   <span data-ttu-id="db630-1201">그래픽 픽셀 단위 그리기를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1201">Sets the graphics drawing unit to pixel.</span></span>  
  
-   <span data-ttu-id="db630-1202">화면에 원본 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1202">Draws the original image to the screen.</span></span>  
  
-   <span data-ttu-id="db630-1203">조정된 된 이미지를 그릴 추가 평행 사변형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1203">Creates an additional parallelogram in which to draw an adjusted image.</span></span>  
  
-   <span data-ttu-id="db630-1204">만들고 더 큰 평균 보다 감마 값 조정된 된 이미지의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1204">Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</span></span>  
  
-   <span data-ttu-id="db630-1205">화면으로 조정된 된 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1205">Draws the adjusted image to the screen.</span></span>  
  
 <span data-ttu-id="db630-1206">원래, 조정 되지 않은 평행 사변형에 대 한 위치를 화면에 이미지를 찾는 및 그려지는 이미지의 배율과 평행 사변형의 사각형 및 크기의 크기 및 모양을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1206">For the original, unadjusted parallelogram, the position locates the image on the screen, and the size of the rectangle and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.</span></span>  
  
 <span data-ttu-id="db630-1207">이 예에서는 통과 하지 않는 오버 로드를 사용 하므로 `callBackData` 매개 변수를를 <xref:System.Drawing.Graphics.DrawImageAbort> 콜백이 반환 `true`, 유발 하는 <xref:System.Drawing.Graphics.DrawImage%2A> 메서드 종료 및 예제에 포함 된 예외 처리 코드를 출력 합니다 예외 텍스트를 그리지 않고 이미지입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1207">Because this example uses an overload that does not pass a `callBackData` parameter, the <xref:System.Drawing.Graphics.DrawImageAbort> callback returns `true`, which causes the <xref:System.Drawing.Graphics.DrawImage%2A> method to end, and the exception-handling code included in the example prints out the exception text rather than drawing the image.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#44](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#44)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#44](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#44)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#44](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#44)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1208"><paramref name="image" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1208"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-1209">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-1209">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr, System.Drawing.Graphics.DrawImageAbort callback, int callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Point[] destPoints, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Imaging.ImageAttributes imageAttr, class System.Drawing.Graphics/DrawImageAbort callback, int32 callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, cli::array &lt;System::Drawing::Point&gt; ^ destPoints, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Imaging::ImageAttributes ^ imageAttr, System::Drawing::Graphics::DrawImageAbort ^ callback, int callbackData);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Point[] * System.Drawing.Rectangle * System.Drawing.GraphicsUnit * System.Drawing.Imaging.ImageAttributes * System.Drawing.Graphics.DrawImageAbort * int -&gt; unit" Usage="graphics.DrawImage (image, destPoints, srcRect, srcUnit, imageAttr, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destPoints" Type="System.Drawing.Point[]" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+DrawImageAbort" />
        <Parameter Name="callbackData" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="db630-1210">그릴 <see cref="T:System.Drawing.Image" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1210"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destPoints"><span data-ttu-id="db630-1211">평행 사변형을 정의하는 세 개의 <see cref="T:System.Drawing.PointF" /> 구조체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1211">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram.</span></span></param>
        <param name="srcRect"><span data-ttu-id="db630-1212">그릴 <paramref name="image" /> 개체의 부분을 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1212"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <paramref name="image" /> object to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="db630-1213"><paramref name="srcRect" /> 매개 변수가 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1213">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="db630-1214"><paramref name="image" /> 개체에 대한 다시 칠하기와 감마 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1214"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <paramref name="image" /> object.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-1215">이미지를 그리는 동안 호출할 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1215"><see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image.</span></span> <span data-ttu-id="db630-1216">이 메서드는 애플리케이션에 의해 결정된 조건에 따라 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> 메서드의 실행을 중지할지 여부를 확인하기 위해 자주 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1216">This method is called frequently to check whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> method according to application-determined criteria.</span></span></param>
        <param name="callbackData"><span data-ttu-id="db630-1217"><see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> 메서드의 실행을 중지할지 여부를 확인할 때 사용하기 위한 <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 대리자의 추가 데이터를 지정하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1217">Value specifying additional data for the <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate to use when checking whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> method.</span></span></param>
        <summary><span data-ttu-id="db630-1218">지정된 <see cref="T:System.Drawing.Image" />의 지정된 부분을 지정된 위치에 지정된 크기로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1218">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1219">`destPoints` 세 지점이 평행 사변형의 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1219">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="db630-1220">세 가지 <xref:System.Drawing.PointF> 구조는 평행 사변형의 왼쪽 위, 오른쪽 위 및 왼쪽 아래 모서리를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1220">The three <xref:System.Drawing.PointF> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="db630-1221">네 번째 지점은 평행 사변형을 구성 하기 위해 처음 3 개에서 추정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1221">The fourth point is extrapolated from the first three to form a parallelogram.</span></span>  
  
 <span data-ttu-id="db630-1222">합니다 `srcRect` 의 사각형 부분을 지정 하는 매개 변수는 `image` 그릴 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1222">The `srcRect` parameter specifies a rectangular portion of the `image` object to draw.</span></span> <span data-ttu-id="db630-1223">이 부분에서 크기가 조정 되 고 지정 된 평행 사변형 안에 맞추기 위해는 `destPoints` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1223">This portion is scaled and sheared to fit inside the parallelogram specified by the `destPoints` parameter.</span></span>  
  
 <span data-ttu-id="db630-1224">이 오버 로드 된 `callback` 및 `callbackData` 매개 변수는 조건 및 애플리케이션에 의해 결정 되는 데이터에 따라 시작 되 면 이미지의 그리기를 중지 하는 방법을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1224">This overload with the `callback` and `callbackData` parameters provides the means to stop the drawing of an image once it starts according to criteria and data determined by the application.</span></span> <span data-ttu-id="db630-1225">예를 들어, 애플리케이션은 큰 이미지를 그리기 시작할 수 및 사용자 사례 애플리케이션 수 그리기를 중지 하는 화면 이미지를 스크롤할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1225">For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1226">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1226">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1227">코드에 대 한 콜백 메서드를 먼저 정의 <xref:System.Drawing.Graphics.DrawImageAbort> 대리자를 보기 위해 단순한 테스트 단순한 정의 이며 여부를 <xref:System.Drawing.Graphics.DrawImage%2A> 메서드 호출을 null로 `callBackData` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="db630-1227">The code first defines a callback method for the <xref:System.Drawing.Graphics.DrawImageAbort> delegate; the definition is simplistic and merely tests to see whether the <xref:System.Drawing.Graphics.DrawImage%2A> method calls it with a null `callBackData` parameter.</span></span> <span data-ttu-id="db630-1228">본문 예제에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1228">The main body of the example performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1229">인스턴스를 만듭니다는 <xref:System.Drawing.Graphics.DrawImageAbort> 콜백 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1229">Creates an instance of the <xref:System.Drawing.Graphics.DrawImageAbort> callback method.</span></span>  
  
-   <span data-ttu-id="db630-1230">JPEG 파일의 예제 폴더에는 예제에서 이미지를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1230">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="db630-1231">이미지를 그릴는 평행 사변형을 정의 하는 지점을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1231">Creates points that define a parallelogram in which to draw the image.</span></span>  
  
-   <span data-ttu-id="db630-1232">그릴 이미지의 부분의 선택 하려면 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1232">Creates a rectangle to select the portion of the image to draw.</span></span>  
  
-   <span data-ttu-id="db630-1233">그래픽 픽셀 단위 그리기를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1233">Sets the graphics drawing unit to pixel.</span></span>  
  
-   <span data-ttu-id="db630-1234">화면에 원본 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1234">Draws the original image to the screen.</span></span>  
  
-   <span data-ttu-id="db630-1235">조정된 된 이미지를 그릴 추가 평행 사변형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1235">Creates an additional parallelogram in which to draw an adjusted image.</span></span>  
  
-   <span data-ttu-id="db630-1236">만들고 더 큰 평균 보다 감마 값 조정된 된 이미지의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1236">Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</span></span>  
  
-   <span data-ttu-id="db630-1237">화면으로 조정된 된 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1237">Draws the adjusted image to the screen.</span></span>  
  
 <span data-ttu-id="db630-1238">원래, 조정 되지 않은 평행 사변형에 대 한 위치를 화면에 이미지를 찾는 및 그려지는 이미지의 배율과 평행 사변형의 사각형 및 크기의 크기 및 모양을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1238">For the original, unadjusted parallelogram, the position locates the image on the screen, and the size of the rectangle and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.</span></span>  
  
 <span data-ttu-id="db630-1239">이 예에서는 전달 하는 오버 로드를 사용 하므로 `callBackData` 매개 변수를 <xref:System.Drawing.Graphics.DrawImageAbort> 콜백이 반환 `false`, 있어를 <xref:System.Drawing.Graphics.DrawImage%2A> 계속 하는 방법 및 예제 화면으로 조정 된 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1239">Because this example uses an overload that passes a `callBackData` parameter, the <xref:System.Drawing.Graphics.DrawImageAbort> callback returns `false`, which causes the <xref:System.Drawing.Graphics.DrawImage%2A> method to continue, and the example draws the adjusted image to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#39](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#39)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#39](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#39)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#39](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#39)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-1240">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-1240">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr, System.Drawing.Graphics.DrawImageAbort callback, int callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Imaging.ImageAttributes imageAttr, class System.Drawing.Graphics/DrawImageAbort callback, int32 callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Imaging::ImageAttributes ^ imageAttr, System::Drawing::Graphics::DrawImageAbort ^ callback, int callbackData);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.GraphicsUnit * System.Drawing.Imaging.ImageAttributes * System.Drawing.Graphics.DrawImageAbort * int -&gt; unit" Usage="graphics.DrawImage (image, destPoints, srcRect, srcUnit, imageAttr, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+DrawImageAbort" />
        <Parameter Name="callbackData" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="db630-1241">그릴 <see cref="T:System.Drawing.Image" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1241"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destPoints"><span data-ttu-id="db630-1242">평행 사변형을 정의하는 세 개의 <see cref="T:System.Drawing.PointF" /> 구조체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1242">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram.</span></span></param>
        <param name="srcRect"><span data-ttu-id="db630-1243">그릴 <paramref name="image" /> 개체의 부분을 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1243"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the <paramref name="image" /> object to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="db630-1244"><paramref name="srcRect" /> 매개 변수가 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1244">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="db630-1245"><paramref name="image" /> 개체에 대한 다시 칠하기와 감마 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1245"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <paramref name="image" /> object.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-1246">이미지를 그리는 동안 호출할 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1246"><see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image.</span></span> <span data-ttu-id="db630-1247">이 메서드는 애플리케이션에 의해 결정된 조건에 따라 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> 메서드의 실행을 중지할지 여부를 확인하기 위해 자주 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1247">This method is called frequently to check whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> method according to application-determined criteria.</span></span></param>
        <param name="callbackData"><span data-ttu-id="db630-1248"><see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> 메서드의 실행을 중지할지 여부를 확인할 때 사용하기 위한 <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 대리자의 추가 데이터를 지정하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1248">Value specifying additional data for the <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate to use when checking whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> method.</span></span></param>
        <summary><span data-ttu-id="db630-1249">지정된 <see cref="T:System.Drawing.Image" />의 지정된 부분을 지정된 위치에 지정된 크기로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1249">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1250">`destPoints` 세 지점이 평행 사변형의 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1250">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="db630-1251">세 가지 <xref:System.Drawing.PointF> 구조는 평행 사변형의 왼쪽 위, 오른쪽 위 및 왼쪽 아래 모서리를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1251">The three <xref:System.Drawing.PointF> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="db630-1252">네 번째 지점은 평행 사변형을 구성 하기 위해 처음 3 개에서 추정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1252">The fourth point is extrapolated from the first three to form a parallelogram.</span></span>  
  
 <span data-ttu-id="db630-1253">합니다 `srcRect` 의 사각형 부분을 지정 하는 매개 변수는 `image` 그릴 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1253">The `srcRect` parameter specifies a rectangular portion of the `image` object to draw.</span></span> <span data-ttu-id="db630-1254">이 부분에서 크기가 조정 되 고 지정 된 평행 사변형 안에 맞추기 위해는 `destPoints` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1254">This portion is scaled and sheared to fit inside the parallelogram specified by the `destPoints` parameter.</span></span>  
  
 <span data-ttu-id="db630-1255">이 오버 로드 된 `callback` 및 `callbackData` 매개 변수는 조건 및 애플리케이션에 의해 결정 되는 데이터에 따라 시작 되 면 이미지의 그리기를 중지 하는 방법을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1255">This overload with the `callback` and `callbackData` parameters provides the means to stop the drawing of an image once it starts according to criteria and data determined by the application.</span></span> <span data-ttu-id="db630-1256">예를 들어, 애플리케이션은 큰 이미지를 그리기 시작할 수 및 사용자 사례 애플리케이션 수 그리기를 중지 하는 화면 이미지를 스크롤할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1256">For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1257">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수인 합니다 `Pa` <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1257">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the `Pa`<xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1258">코드에 대 한 콜백 메서드를 먼저 정의 <xref:System.Drawing.Graphics.DrawImageAbort> 대리자를 보기 위해 단순한 테스트 단순한 정의 이며 여부를 <xref:System.Drawing.Graphics.DrawImage%2A> 메서드 호출을 null로 `callBackData` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="db630-1258">The code first defines a callback method for the <xref:System.Drawing.Graphics.DrawImageAbort> delegate; the definition is simplistic and merely tests to see whether the <xref:System.Drawing.Graphics.DrawImage%2A> method calls it with a null `callBackData` parameter.</span></span> <span data-ttu-id="db630-1259">본문 예제에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1259">The main body of the example performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1260">인스턴스를 만듭니다는 <xref:System.Drawing.Graphics.DrawImageAbort> 콜백 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1260">Creates an instance of the <xref:System.Drawing.Graphics.DrawImageAbort> callback method.</span></span>  
  
-   <span data-ttu-id="db630-1261">JPEG 파일의 예제 폴더에는 예제에서 이미지를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1261">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="db630-1262">이미지를 그릴는 평행 사변형을 정의 하는 지점을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1262">Creates points that define a parallelogram in which to draw the image.</span></span>  
  
-   <span data-ttu-id="db630-1263">그릴 이미지의 부분의 선택 하려면 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1263">Creates a rectangle to select the portion of the image to draw.</span></span>  
  
-   <span data-ttu-id="db630-1264">그래픽 픽셀 단위 그리기를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1264">Sets the graphics drawing unit to pixel.</span></span>  
  
-   <span data-ttu-id="db630-1265">화면에 원본 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1265">Draws the original image to the screen.</span></span>  
  
-   <span data-ttu-id="db630-1266">조정된 된 이미지를 그릴 추가 평행 사변형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1266">Creates an additional parallelogram in which to draw an adjusted image.</span></span>  
  
-   <span data-ttu-id="db630-1267">만들고 더 큰 평균 보다 감마 값 조정된 된 이미지의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1267">Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</span></span>  
  
-   <span data-ttu-id="db630-1268">화면으로 조정된 된 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1268">Draws the adjusted image to the screen.</span></span>  
  
 <span data-ttu-id="db630-1269">원래, 조정 되지 않은 평행 사변형에 대 한 위치를 화면에 이미지를 찾는 및 그려지는 이미지의 배율과 평행 사변형의 사각형 및 크기의 크기 및 모양을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1269">For the original, unadjusted parallelogram, the position locates the image on the screen, and the size of the rectangle and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.</span></span>  
  
 <span data-ttu-id="db630-1270">이 예에서는 전달 하는 오버 로드를 사용 하므로 `callBackData` 매개 변수를 <xref:System.Drawing.Graphics.DrawImageAbort> 콜백이 반환 `false`, 있어를 <xref:System.Drawing.Graphics.DrawImage%2A> 계속 하는 방법 및 예제 화면으로 조정 된 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1270">Because this example uses an overload that passes a `callBackData` parameter, the <xref:System.Drawing.Graphics.DrawImageAbort> callback returns `false`, which causes the <xref:System.Drawing.Graphics.DrawImage%2A> method to continue, and the example draws the adjusted image to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#45](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#45)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#45](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#45)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#45](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#45)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1271"><paramref name="image" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1271"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-1272">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-1272">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System.Drawing.GraphicsUnit srcUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Rectangle destRect, int32 srcX, int32 srcY, int32 srcWidth, int32 srcHeight, valuetype System.Drawing.GraphicsUnit srcUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System::Drawing::GraphicsUnit srcUnit);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Rectangle * int * int * int * int * System.Drawing.GraphicsUnit -&gt; unit" Usage="graphics.DrawImage (image, destRect, srcX, srcY, srcWidth, srcHeight, srcUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcX" Type="System.Int32" />
        <Parameter Name="srcY" Type="System.Int32" />
        <Parameter Name="srcWidth" Type="System.Int32" />
        <Parameter Name="srcHeight" Type="System.Int32" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="db630-1273">그릴 <see cref="T:System.Drawing.Image" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1273"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destRect"><span data-ttu-id="db630-1274">그려지는 이미지의 위치와 크기를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1274"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image.</span></span> <span data-ttu-id="db630-1275">이미지는 사각형에 맞게 크기가 조정됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1275">The image is scaled to fit the rectangle.</span></span></param>
        <param name="srcX"><span data-ttu-id="db630-1276">그릴 원본 이미지 부분의 왼쪽 위 모퉁이에 대한 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1276">The x-coordinate of the upper-left corner of the portion of the source image to draw.</span></span></param>
        <param name="srcY"><span data-ttu-id="db630-1277">그릴 원본 이미지 부분의 왼쪽 위 모퉁이에 대한 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1277">The y-coordinate of the upper-left corner of the portion of the source image to draw.</span></span></param>
        <param name="srcWidth"><span data-ttu-id="db630-1278">그릴 원본 이미지의 부분의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1278">Width of the portion of the source image to draw.</span></span></param>
        <param name="srcHeight"><span data-ttu-id="db630-1279">그릴 원본 이미지의 부분의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1279">Height of the portion of the source image to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="db630-1280">원본 사각형을 결정하기 위해 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1280">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.</span></span></param>
        <summary><span data-ttu-id="db630-1281">지정된 <see cref="T:System.Drawing.Image" />의 지정된 부분을 지정된 위치에 지정된 크기로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1281">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1282">합니다 `srcX`, `srcY`, `srcWidth`, 및 `srcHeight` 의 사각형 부분을 지정 하는 매개 변수는 `image` 그릴 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1282">The `srcX`, `srcY`, `srcWidth`, and `srcHeight` parameters specify a rectangular portion, of the `image` object to draw.</span></span> <span data-ttu-id="db630-1283">사각형은 원본 이미지의 왼쪽 위 모퉁이 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1283">The rectangle is relative to the upper-left corner of the source image.</span></span> <span data-ttu-id="db630-1284">이 부분에서 지정 된 사각형 내에 맞게 크기가 조정 되는 `destRect` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1284">This portion is scaled to fit inside the rectangle specified by the `destRect` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1285">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1285">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1286">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1286">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1287">JPEG 파일의 예제 폴더에는 예제에서 이미지를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1287">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="db630-1288">이미지를 그릴 대상 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1288">Creates a destination rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="db630-1289">이미지의 일부를 추출할 소스 사각형의 좌표를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1289">Creates the coordinates of a source rectangle from which to extract a portion of the image.</span></span>  
  
-   <span data-ttu-id="db630-1290">소스 사각형의 측정 단위를 픽셀로 설정입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1290">Sets the unit of measure of the source rectangle to pixels.</span></span>  
  
-   <span data-ttu-id="db630-1291">화면에 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1291">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="db630-1292">대상 사각형의 위치는 화면에서 이미지를 찾는 소스 및 대상 사각형의 크기는 그려지는 이미지의 배율을 결정 하 고 소스 사각형의 크기에 그려지는 원본 이미지의 어떤 부분을 결정 합니다 화면입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1292">The position of the destination rectangle locates the image on the screen, and the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#48](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#48)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#48](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#48)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#48](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#48)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1293"><paramref name="image" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1293"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-1294">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-1294">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System.Drawing.GraphicsUnit srcUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Rectangle destRect, float32 srcX, float32 srcY, float32 srcWidth, float32 srcHeight, valuetype System.Drawing.GraphicsUnit srcUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System::Drawing::GraphicsUnit srcUnit);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Rectangle * single * single * single * single * System.Drawing.GraphicsUnit -&gt; unit" Usage="graphics.DrawImage (image, destRect, srcX, srcY, srcWidth, srcHeight, srcUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcX" Type="System.Single" />
        <Parameter Name="srcY" Type="System.Single" />
        <Parameter Name="srcWidth" Type="System.Single" />
        <Parameter Name="srcHeight" Type="System.Single" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="db630-1295">그릴 <see cref="T:System.Drawing.Image" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1295"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destRect"><span data-ttu-id="db630-1296">그려지는 이미지의 위치와 크기를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1296"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image.</span></span> <span data-ttu-id="db630-1297">이미지는 사각형에 맞게 크기가 조정됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1297">The image is scaled to fit the rectangle.</span></span></param>
        <param name="srcX"><span data-ttu-id="db630-1298">그릴 원본 이미지 부분의 왼쪽 위 모퉁이에 대한 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1298">The x-coordinate of the upper-left corner of the portion of the source image to draw.</span></span></param>
        <param name="srcY"><span data-ttu-id="db630-1299">그릴 원본 이미지 부분의 왼쪽 위 모퉁이에 대한 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1299">The y-coordinate of the upper-left corner of the portion of the source image to draw.</span></span></param>
        <param name="srcWidth"><span data-ttu-id="db630-1300">그릴 원본 이미지의 부분의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1300">Width of the portion of the source image to draw.</span></span></param>
        <param name="srcHeight"><span data-ttu-id="db630-1301">그릴 원본 이미지의 부분의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1301">Height of the portion of the source image to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="db630-1302">원본 사각형을 결정하기 위해 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1302">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.</span></span></param>
        <summary><span data-ttu-id="db630-1303">지정된 <see cref="T:System.Drawing.Image" />의 지정된 부분을 지정된 위치에 지정된 크기로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1303">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1304">합니다 `srcX`, `srcY`, `srcWidth`, 및 `srcHeight` 의 사각형 부분을 지정 하는 매개 변수는 `image` 그릴 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1304">The `srcX`, `srcY`, `srcWidth`, and `srcHeight` parameters specify a rectangular portion, of the `image` object to draw.</span></span> <span data-ttu-id="db630-1305">사각형은 원본 이미지의 왼쪽 위 모퉁이 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1305">The rectangle is relative to the upper-left corner of the source image.</span></span> <span data-ttu-id="db630-1306">이 부분에서 지정 된 사각형 내에 맞게 크기가 조정 되는 `destRect` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1306">This portion is scaled to fit inside the rectangle specified by the `destRect` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1307">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1307">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1308">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1308">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1309">JPEG 파일의 예제 폴더에는 예제에서 이미지를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1309">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="db630-1310">이미지를 그릴 대상 사각형의 좌표를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1310">Creates the coordinates of a destination rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="db630-1311">이미지의 일부를 추출할 소스 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1311">Creates a source rectangle from which to extract a portion of the image.</span></span>  
  
-   <span data-ttu-id="db630-1312">소스 사각형의 측정 단위를 픽셀로 설정입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1312">Sets the unit of measure of the source rectangle to pixels.</span></span>  
  
-   <span data-ttu-id="db630-1313">화면에 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1313">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="db630-1314">대상 사각형의 위치는 화면에서 이미지를 정하고, 원본 및 대상 사각형의 크기는 그려지는 이미지의 배율을 결정 및 소스 사각형의 크기에 그려지는 원본 이미지의 어떤 부분을 결정 합니다 화면입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1314">The position of the destination rectangle locates the image on the screen, the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#52](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#52)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#52](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#52)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#52](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#52)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1315"><paramref name="image" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1315"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-1316">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-1316">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Rectangle destRect, int32 srcX, int32 srcY, int32 srcWidth, int32 srcHeight, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Rectangle * int * int * int * int * System.Drawing.GraphicsUnit * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.DrawImage (image, destRect, srcX, srcY, srcWidth, srcHeight, srcUnit, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcX" Type="System.Int32" />
        <Parameter Name="srcY" Type="System.Int32" />
        <Parameter Name="srcWidth" Type="System.Int32" />
        <Parameter Name="srcHeight" Type="System.Int32" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="db630-1317">그릴 <see cref="T:System.Drawing.Image" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1317"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destRect"><span data-ttu-id="db630-1318">그려지는 이미지의 위치와 크기를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1318"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image.</span></span> <span data-ttu-id="db630-1319">이미지는 사각형에 맞게 크기가 조정됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1319">The image is scaled to fit the rectangle.</span></span></param>
        <param name="srcX"><span data-ttu-id="db630-1320">그릴 원본 이미지 부분의 왼쪽 위 모퉁이에 대한 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1320">The x-coordinate of the upper-left corner of the portion of the source image to draw.</span></span></param>
        <param name="srcY"><span data-ttu-id="db630-1321">그릴 원본 이미지 부분의 왼쪽 위 모퉁이에 대한 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1321">The y-coordinate of the upper-left corner of the portion of the source image to draw.</span></span></param>
        <param name="srcWidth"><span data-ttu-id="db630-1322">그릴 원본 이미지의 부분의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1322">Width of the portion of the source image to draw.</span></span></param>
        <param name="srcHeight"><span data-ttu-id="db630-1323">그릴 원본 이미지의 부분의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1323">Height of the portion of the source image to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="db630-1324">원본 사각형을 결정하기 위해 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1324">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="db630-1325"><paramref name="image" /> 개체에 대한 다시 칠하기와 감마 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1325"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <paramref name="image" /> object.</span></span></param>
        <summary><span data-ttu-id="db630-1326">지정된 <see cref="T:System.Drawing.Image" />의 지정된 부분을 지정된 위치에 지정된 크기로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1326">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1327">합니다 `srcX`, `srcY`, `srcWidth`, 및 `srcHeight` 의 사각형 부분을 지정 하는 매개 변수는 `image` 그릴 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1327">The `srcX`, `srcY`, `srcWidth`, and `srcHeight` parameters specify a rectangular portion, of the `image` object to draw.</span></span> <span data-ttu-id="db630-1328">사각형은 원본 이미지의 왼쪽 위 모퉁이 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1328">The rectangle is relative to the upper-left corner of the source image.</span></span> <span data-ttu-id="db630-1329">이 부분에서 지정 된 사각형 내에 맞게 크기가 조정 되는 `destRect` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1329">This portion is scaled to fit inside the rectangle specified by the `destRect` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1330">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1330">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1331">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1331">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1332">JPEG 파일의 예제 폴더에는 예제에서 이미지를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1332">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="db630-1333">이미지를 그릴 대상 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1333">Creates a destination rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="db630-1334">이미지의 일부를 추출할 소스 사각형의 좌표를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1334">Creates the coordinates of a source rectangle from which to extract a portion of the image.</span></span>  
  
-   <span data-ttu-id="db630-1335">소스 사각형의 측정 단위를 픽셀로 설정입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1335">Sets the unit of measure of the source rectangle to pixels.</span></span>  
  
-   <span data-ttu-id="db630-1336">화면에 원본 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1336">Draws the original image to the screen.</span></span>  
  
-   <span data-ttu-id="db630-1337">추가 조정된 된 이미지를 그릴 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1337">Creates an additional rectangle in which to draw an adjusted image.</span></span>  
  
-   <span data-ttu-id="db630-1338">만들고 더 큰 평균 보다 감마 값 조정된 된 이미지의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1338">Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</span></span>  
  
-   <span data-ttu-id="db630-1339">화면으로 조정된 된 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1339">Draws the adjusted image to the screen.</span></span>  
  
 <span data-ttu-id="db630-1340">조정 되지 않은 원래 대상 사각형의 위치를 화면에 이미지를 찾습니다 소스 및 대상 사각형의 크기는 그려지는 이미지의 배율을 결정 하 고 소스 사각형의 크기의 어떤 부분을 결정 합니다 원래 이미지 화면에 그려집니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1340">For the original, unadjusted destination rectangle, the position locates the image on the screen, and the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#49](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#49)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#49](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#49)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#49](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#49)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1341"><paramref name="image" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1341"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-1342">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-1342">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Rectangle destRect, float32 srcX, float32 srcY, float32 srcWidth, float32 srcHeight, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Imaging.ImageAttributes imageAttrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Imaging::ImageAttributes ^ imageAttrs);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Rectangle * single * single * single * single * System.Drawing.GraphicsUnit * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.DrawImage (image, destRect, srcX, srcY, srcWidth, srcHeight, srcUnit, imageAttrs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcX" Type="System.Single" />
        <Parameter Name="srcY" Type="System.Single" />
        <Parameter Name="srcWidth" Type="System.Single" />
        <Parameter Name="srcHeight" Type="System.Single" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="imageAttrs" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="db630-1343">그릴 <see cref="T:System.Drawing.Image" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1343"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destRect"><span data-ttu-id="db630-1344">그려지는 이미지의 위치와 크기를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1344"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image.</span></span> <span data-ttu-id="db630-1345">이미지는 사각형에 맞게 크기가 조정됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1345">The image is scaled to fit the rectangle.</span></span></param>
        <param name="srcX"><span data-ttu-id="db630-1346">그릴 원본 이미지 부분의 왼쪽 위 모퉁이에 대한 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1346">The x-coordinate of the upper-left corner of the portion of the source image to draw.</span></span></param>
        <param name="srcY"><span data-ttu-id="db630-1347">그릴 원본 이미지 부분의 왼쪽 위 모퉁이에 대한 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1347">The y-coordinate of the upper-left corner of the portion of the source image to draw.</span></span></param>
        <param name="srcWidth"><span data-ttu-id="db630-1348">그릴 원본 이미지의 부분의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1348">Width of the portion of the source image to draw.</span></span></param>
        <param name="srcHeight"><span data-ttu-id="db630-1349">그릴 원본 이미지의 부분의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1349">Height of the portion of the source image to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="db630-1350">원본 사각형을 결정하기 위해 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1350">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.</span></span></param>
        <param name="imageAttrs"><span data-ttu-id="db630-1351"><paramref name="image" /> 개체에 대한 다시 칠하기와 감마 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1351"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <paramref name="image" /> object.</span></span></param>
        <summary><span data-ttu-id="db630-1352">지정된 <see cref="T:System.Drawing.Image" />의 지정된 부분을 지정된 위치에 지정된 크기로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1352">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1353">합니다 `srcX`, `srcY`, `srcWidth`, 및 `srcHeight` 의 사각형 부분을 지정 하는 매개 변수는 `image` 그릴 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1353">The `srcX`, `srcY`, `srcWidth`, and `srcHeight` parameters specify a rectangular portion, of the `image` object to draw.</span></span> <span data-ttu-id="db630-1354">사각형은 원본 이미지의 왼쪽 위 모퉁이 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1354">The rectangle is relative to the upper-left corner of the source image.</span></span> <span data-ttu-id="db630-1355">이 부분에서 지정 된 사각형 내에 맞게 크기가 조정 되는 `destRect` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1355">This portion is scaled to fit inside the rectangle specified by the `destRect` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1356">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1356">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1357">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1357">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1358">JPEG 파일의 예제 폴더에는 예제에서 이미지를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1358">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="db630-1359">이미지를 그릴 대상 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1359">Creates a destination rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="db630-1360">이미지의 일부를 추출할 소스 사각형의 좌표를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1360">Creates the coordinates of a source rectangle from which to extract a portion of the image.</span></span>  
  
-   <span data-ttu-id="db630-1361">소스 사각형의 측정 단위를 픽셀로 설정입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1361">Sets the unit of measure of the source rectangle to pixels.</span></span>  
  
-   <span data-ttu-id="db630-1362">화면에 원본 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1362">Draws the original image to the screen.</span></span>  
  
-   <span data-ttu-id="db630-1363">추가 조정된 된 이미지를 그릴 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1363">Creates an additional rectangle in which to draw an adjusted image.</span></span>  
  
-   <span data-ttu-id="db630-1364">만들고 더 큰 평균 보다 감마 값 조정된 된 이미지의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1364">Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</span></span>  
  
-   <span data-ttu-id="db630-1365">화면으로 조정된 된 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1365">Draws the adjusted image to the screen.</span></span>  
  
 <span data-ttu-id="db630-1366">조정 되지 않은 원래 대상 사각형의 위치를 화면에 이미지를 찾습니다 소스 및 대상 사각형의 크기는 그려지는 이미지의 배율을 결정 하 고 소스 사각형의 크기의 어떤 부분을 결정 합니다 원래 이미지 화면에 그려집니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1366">For the original, unadjusted destination rectangle, the position locates the image on the screen, and the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#53](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#53)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#53](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#53)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#53](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#53)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1367"><paramref name="image" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1367"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-1368">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-1368">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr, System.Drawing.Graphics.DrawImageAbort callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Rectangle destRect, int32 srcX, int32 srcY, int32 srcWidth, int32 srcHeight, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Imaging.ImageAttributes imageAttr, class System.Drawing.Graphics/DrawImageAbort callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Imaging::ImageAttributes ^ imageAttr, System::Drawing::Graphics::DrawImageAbort ^ callback);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Rectangle * int * int * int * int * System.Drawing.GraphicsUnit * System.Drawing.Imaging.ImageAttributes * System.Drawing.Graphics.DrawImageAbort -&gt; unit" Usage="graphics.DrawImage (image, destRect, srcX, srcY, srcWidth, srcHeight, srcUnit, imageAttr, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcX" Type="System.Int32" />
        <Parameter Name="srcY" Type="System.Int32" />
        <Parameter Name="srcWidth" Type="System.Int32" />
        <Parameter Name="srcHeight" Type="System.Int32" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+DrawImageAbort" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="db630-1369">그릴 <see cref="T:System.Drawing.Image" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1369"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destRect"><span data-ttu-id="db630-1370">그려지는 이미지의 위치와 크기를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1370"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image.</span></span> <span data-ttu-id="db630-1371">이미지는 사각형에 맞게 크기가 조정됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1371">The image is scaled to fit the rectangle.</span></span></param>
        <param name="srcX"><span data-ttu-id="db630-1372">그릴 원본 이미지 부분의 왼쪽 위 모퉁이에 대한 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1372">The x-coordinate of the upper-left corner of the portion of the source image to draw.</span></span></param>
        <param name="srcY"><span data-ttu-id="db630-1373">그릴 원본 이미지 부분의 왼쪽 위 모퉁이에 대한 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1373">The y-coordinate of the upper-left corner of the portion of the source image to draw.</span></span></param>
        <param name="srcWidth"><span data-ttu-id="db630-1374">그릴 원본 이미지의 부분의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1374">Width of the portion of the source image to draw.</span></span></param>
        <param name="srcHeight"><span data-ttu-id="db630-1375">그릴 원본 이미지의 부분의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1375">Height of the portion of the source image to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="db630-1376">원본 사각형을 결정하기 위해 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1376">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="db630-1377"><paramref name="image" />에 대한 다시 칠하기와 감마 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1377"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for <paramref name="image" />.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-1378">이미지를 그리는 동안 호출할 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1378"><see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image.</span></span> <span data-ttu-id="db630-1379">이 메서드는 애플리케이션에 의해 결정된 조건에 따라 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> 메서드의 실행을 중지할지 여부를 확인하기 위해 자주 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1379">This method is called frequently to check whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> method according to application-determined criteria.</span></span></param>
        <summary><span data-ttu-id="db630-1380">지정된 <see cref="T:System.Drawing.Image" />의 지정된 부분을 지정된 위치에 지정된 크기로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1380">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1381">합니다 `srcX`, `srcY`, `srcWidth`, 및 `srcHeight` 의 사각형 부분을 지정 하는 매개 변수는 `image` 그릴 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1381">The `srcX`, `srcY`, `srcWidth`, and `srcHeight` parameters specify a rectangular portion, of the `image` object to draw.</span></span> <span data-ttu-id="db630-1382">사각형은 원본 이미지의 왼쪽 위 모퉁이 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1382">The rectangle is relative to the upper-left corner of the source image.</span></span> <span data-ttu-id="db630-1383">이 부분에서 지정 된 사각형 내에 맞게 크기가 조정 되는 `destRect` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1383">This portion is scaled to fit inside the rectangle specified by the `destRect` object.</span></span>  
  
 <span data-ttu-id="db630-1384">이 오버 로드는 `callback` 매개 변수는 애플리케이션에 의해 결정 된 조건에 따라 시작 되 면 이미지의 그리기를 중지 하는 방법을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1384">This overload with the `callback` parameter provides the means to stop the drawing of an image once it starts according to criteria determined by the application.</span></span> <span data-ttu-id="db630-1385">예를 들어, 애플리케이션은 큰 이미지를 그리기 시작할 수 및 사용자 사례 애플리케이션 수 그리기를 중지 하는 화면 이미지를 스크롤할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1385">For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1386">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1386">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1387">코드에 대 한 콜백 메서드를 먼저 정의 <xref:System.Drawing.Graphics.DrawImageAbort> 대리자를 보기 위해 단순한 테스트 단순한 정의 이며 여부를 <xref:System.Drawing.Graphics.DrawImage%2A> 메서드 호출을 null로 `callBackData` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="db630-1387">The code first defines a callback method for the <xref:System.Drawing.Graphics.DrawImageAbort> delegate; the definition is simplistic and merely tests to see whether the <xref:System.Drawing.Graphics.DrawImage%2A> method calls it with a null `callBackData` parameter.</span></span> <span data-ttu-id="db630-1388">본문 예제에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1388">The main body of the example performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1389">인스턴스를 만듭니다는 <xref:System.Drawing.Graphics.DrawImageAbort> 콜백 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1389">Creates an instance of the <xref:System.Drawing.Graphics.DrawImageAbort> callback method.</span></span>  
  
-   <span data-ttu-id="db630-1390">JPEG 파일의 예제 폴더에는 예제에서 이미지를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1390">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="db630-1391">이미지를 그릴 대상 사각형을 정의 하는 지점을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1391">Creates points that define a destination rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="db630-1392">그릴 이미지의 부분의 선택 소스 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1392">Creates a source rectangle to select the portion of the image to draw.</span></span>  
  
-   <span data-ttu-id="db630-1393">그래픽 픽셀 단위 그리기를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1393">Sets the graphics drawing unit to pixel.</span></span>  
  
-   <span data-ttu-id="db630-1394">화면에 원본 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1394">Draws the original image to the screen.</span></span>  
  
-   <span data-ttu-id="db630-1395">조정된 된 이미지를 그릴 추가 대상 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1395">Creates an additional destination rectangle in which to draw an adjusted image.</span></span>  
  
-   <span data-ttu-id="db630-1396">만들고 더 큰 평균 보다 감마 값 조정된 된 이미지의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1396">Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</span></span>  
  
-   <span data-ttu-id="db630-1397">화면으로 조정된 된 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1397">Draws the adjusted image to the screen.</span></span>  
  
 <span data-ttu-id="db630-1398">조정 되지 않은 원래 대상 사각형의 위치 이미지 화면의 정하고, 대상 사각형의 소스 사각형 및 크기의 크기와 모양이 그려지는 이미지의 배율을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1398">For the original, unadjusted destination rectangle, the position locates the image on the screen, and the size of the source rectangle and the size and shape of the destination rectangle determines the scaling of the drawn image.</span></span>  
  
 <span data-ttu-id="db630-1399">이 예에서는 통과 하지 않는 오버 로드를 사용 하므로 `callBackData` 매개 변수를를 <xref:System.Drawing.Graphics.DrawImageAbort> 콜백이 반환 `true`, 유발 하는 <xref:System.Drawing.Graphics.DrawImage%2A> 메서드 종료 및 예제에 포함 된 예외 처리 코드를 출력 합니다 예외 텍스트를 그리지 않고 이미지입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1399">Because this example uses an overload that does not pass a `callBackData` parameter, the <xref:System.Drawing.Graphics.DrawImageAbort> callback returns `true`, which causes the <xref:System.Drawing.Graphics.DrawImage%2A> method to end, and the exception-handling code included in the example prints out the exception text rather than drawing the image.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#50](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#50)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#50)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1400"><paramref name="image" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1400"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-1401">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-1401">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttrs, System.Drawing.Graphics.DrawImageAbort callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Rectangle destRect, float32 srcX, float32 srcY, float32 srcWidth, float32 srcHeight, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Imaging.ImageAttributes imageAttrs, class System.Drawing.Graphics/DrawImageAbort callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Imaging::ImageAttributes ^ imageAttrs, System::Drawing::Graphics::DrawImageAbort ^ callback);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Rectangle * single * single * single * single * System.Drawing.GraphicsUnit * System.Drawing.Imaging.ImageAttributes * System.Drawing.Graphics.DrawImageAbort -&gt; unit" Usage="graphics.DrawImage (image, destRect, srcX, srcY, srcWidth, srcHeight, srcUnit, imageAttrs, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcX" Type="System.Single" />
        <Parameter Name="srcY" Type="System.Single" />
        <Parameter Name="srcWidth" Type="System.Single" />
        <Parameter Name="srcHeight" Type="System.Single" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="imageAttrs" Type="System.Drawing.Imaging.ImageAttributes" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+DrawImageAbort" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="db630-1402">그릴 <see cref="T:System.Drawing.Image" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1402"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destRect"><span data-ttu-id="db630-1403">그려지는 이미지의 위치와 크기를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1403"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image.</span></span> <span data-ttu-id="db630-1404">이미지는 사각형에 맞게 크기가 조정됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1404">The image is scaled to fit the rectangle.</span></span></param>
        <param name="srcX"><span data-ttu-id="db630-1405">그릴 원본 이미지 부분의 왼쪽 위 모퉁이에 대한 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1405">The x-coordinate of the upper-left corner of the portion of the source image to draw.</span></span></param>
        <param name="srcY"><span data-ttu-id="db630-1406">그릴 원본 이미지 부분의 왼쪽 위 모퉁이에 대한 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1406">The y-coordinate of the upper-left corner of the portion of the source image to draw.</span></span></param>
        <param name="srcWidth"><span data-ttu-id="db630-1407">그릴 원본 이미지의 부분의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1407">Width of the portion of the source image to draw.</span></span></param>
        <param name="srcHeight"><span data-ttu-id="db630-1408">그릴 원본 이미지의 부분의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1408">Height of the portion of the source image to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="db630-1409">원본 사각형을 결정하기 위해 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1409">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.</span></span></param>
        <param name="imageAttrs"><span data-ttu-id="db630-1410"><paramref name="image" /> 개체에 대한 다시 칠하기와 감마 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1410"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <paramref name="image" /> object.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-1411">이미지를 그리는 동안 호출할 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1411"><see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image.</span></span> <span data-ttu-id="db630-1412">이 메서드는 애플리케이션에 의해 결정된 조건에 따라 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> 메서드의 실행을 중지할지 여부를 확인하기 위해 자주 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1412">This method is called frequently to check whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> method according to application-determined criteria.</span></span></param>
        <summary><span data-ttu-id="db630-1413">지정된 <see cref="T:System.Drawing.Image" />의 지정된 부분을 지정된 위치에 지정된 크기로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1413">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1414">합니다 `srcX`, `srcY`, `srcWidth`, 및 `srcHeight` 의 사각형 부분을 지정 하는 매개 변수는 `image` 그릴 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1414">The `srcX`, `srcY`, `srcWidth`, and `srcHeight` parameters specify a rectangular portion, of the `image` object to draw.</span></span> <span data-ttu-id="db630-1415">사각형은 원본 이미지의 왼쪽 위 모퉁이 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1415">The rectangle is relative to the upper-left corner of the source image.</span></span> <span data-ttu-id="db630-1416">이 부분에서 지정 된 사각형 내에 맞게 크기가 조정 되는 `destRect` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1416">This portion is scaled to fit inside the rectangle specified by the `destRect` parameter.</span></span>  
  
 <span data-ttu-id="db630-1417">이 오버 로드는 `callback` 매개 변수는 애플리케이션에 의해 결정 된 조건에 따라 시작 되 면 이미지의 그리기를 중지 하는 방법을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1417">This overload with the `callback` parameter provides the means to stop the drawing of an image once it starts according to criteria determined by the application.</span></span> <span data-ttu-id="db630-1418">예를 들어, 애플리케이션은 큰 이미지를 그리기 시작할 수 및 사용자 사례 애플리케이션 수 그리기를 중지 하는 화면 이미지를 스크롤할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1418">For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1419">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1419">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1420">코드에 대 한 콜백 메서드를 먼저 정의 <xref:System.Drawing.Graphics.DrawImageAbort> 대리자를 보기 위해 단순한 테스트 단순한 정의 이며 여부를 <xref:System.Drawing.Graphics.DrawImage%2A> 메서드 호출을 null로 `callBackData` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="db630-1420">The code first defines a callback method for the <xref:System.Drawing.Graphics.DrawImageAbort> delegate; the definition is simplistic and merely tests to see whether the <xref:System.Drawing.Graphics.DrawImage%2A> method calls it with a null `callBackData` parameter.</span></span> <span data-ttu-id="db630-1421">본문 예제에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1421">The main body of the example performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1422">인스턴스를 만듭니다는 <xref:System.Drawing.Graphics.DrawImageAbort> 콜백 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1422">Creates an instance of the <xref:System.Drawing.Graphics.DrawImageAbort> callback method.</span></span>  
  
-   <span data-ttu-id="db630-1423">JPEG 파일의 예제 폴더에는 예제에서 이미지를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1423">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="db630-1424">이미지를 그릴 대상 사각형을 정의 하는 지점을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1424">Creates points that define a destination rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="db630-1425">그릴 이미지의 부분의 선택 소스 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1425">Creates a source rectangle to select the portion of the image to draw.</span></span>  
  
-   <span data-ttu-id="db630-1426">그래픽 픽셀 단위 그리기를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1426">Sets the graphics drawing unit to pixel.</span></span>  
  
-   <span data-ttu-id="db630-1427">화면에 원본 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1427">Draws the original image to the screen.</span></span>  
  
-   <span data-ttu-id="db630-1428">조정된 된 이미지를 그릴 추가 대상 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1428">Creates an additional destination rectangle in which to draw an adjusted image.</span></span>  
  
-   <span data-ttu-id="db630-1429">만들고 더 큰 평균 보다 감마 값 조정된 된 이미지의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1429">Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</span></span>  
  
-   <span data-ttu-id="db630-1430">화면으로 조정된 된 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1430">Draws the adjusted image to the screen.</span></span>  
  
 <span data-ttu-id="db630-1431">조정 되지 않은 원래 대상 사각형의 위치 이미지 화면의 정하고, 대상 사각형의 소스 사각형 및 크기의 크기와 모양이 그려지는 이미지의 배율을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1431">For the original, unadjusted destination rectangle, the position locates the image on the screen, and the size of the source rectangle and the size and shape of the destination rectangle determines the scaling of the drawn image.</span></span>  
  
 <span data-ttu-id="db630-1432">이 예에서는 통과 하지 않는 오버 로드를 사용 하므로 `callBackData` 매개 변수를를 <xref:System.Drawing.Graphics.DrawImageAbort> 콜백이 반환 `true`, 유발 하는 <xref:System.Drawing.Graphics.DrawImage%2A> 메서드 종료 및 예제에 포함 된 예외 처리 코드를 출력 합니다 예외 텍스트를 그리지 않고 이미지입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1432">Because this example uses an overload that does not pass a `callBackData` parameter, the <xref:System.Drawing.Graphics.DrawImageAbort> callback returns `true`, which causes the <xref:System.Drawing.Graphics.DrawImage%2A> method to end, and the exception-handling code included in the example prints out the exception text rather than drawing the image.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#54](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#54)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#54](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#54)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#54](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#54)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1433"><paramref name="image" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1433"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-1434">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-1434">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttrs, System.Drawing.Graphics.DrawImageAbort callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Rectangle destRect, int32 srcX, int32 srcY, int32 srcWidth, int32 srcHeight, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Imaging.ImageAttributes imageAttrs, class System.Drawing.Graphics/DrawImageAbort callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Imaging::ImageAttributes ^ imageAttrs, System::Drawing::Graphics::DrawImageAbort ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Rectangle * int * int * int * int * System.Drawing.GraphicsUnit * System.Drawing.Imaging.ImageAttributes * System.Drawing.Graphics.DrawImageAbort * nativeint -&gt; unit" Usage="graphics.DrawImage (image, destRect, srcX, srcY, srcWidth, srcHeight, srcUnit, imageAttrs, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcX" Type="System.Int32" />
        <Parameter Name="srcY" Type="System.Int32" />
        <Parameter Name="srcWidth" Type="System.Int32" />
        <Parameter Name="srcHeight" Type="System.Int32" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="imageAttrs" Type="System.Drawing.Imaging.ImageAttributes" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+DrawImageAbort" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="db630-1435">그릴 <see cref="T:System.Drawing.Image" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1435"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destRect"><span data-ttu-id="db630-1436">그려지는 이미지의 위치와 크기를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1436"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image.</span></span> <span data-ttu-id="db630-1437">이미지는 사각형에 맞게 크기가 조정됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1437">The image is scaled to fit the rectangle.</span></span></param>
        <param name="srcX"><span data-ttu-id="db630-1438">그릴 원본 이미지 부분의 왼쪽 위 모퉁이에 대한 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1438">The x-coordinate of the upper-left corner of the portion of the source image to draw.</span></span></param>
        <param name="srcY"><span data-ttu-id="db630-1439">그릴 원본 이미지 부분의 왼쪽 위 모퉁이에 대한 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1439">The y-coordinate of the upper-left corner of the portion of the source image to draw.</span></span></param>
        <param name="srcWidth"><span data-ttu-id="db630-1440">그릴 원본 이미지의 부분의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1440">Width of the portion of the source image to draw.</span></span></param>
        <param name="srcHeight"><span data-ttu-id="db630-1441">그릴 원본 이미지의 부분의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1441">Height of the portion of the source image to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="db630-1442">원본 사각형을 결정하기 위해 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1442">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.</span></span></param>
        <param name="imageAttrs"><span data-ttu-id="db630-1443"><paramref name="image" /> 개체에 대한 다시 칠하기와 감마 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1443"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <paramref name="image" /> object.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-1444">이미지를 그리는 동안 호출할 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1444"><see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image.</span></span> <span data-ttu-id="db630-1445">이 메서드는 애플리케이션에 의해 결정된 조건에 따라 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)" /> 메서드의 실행을 중지할지 여부를 확인하기 위해 자주 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1445">This method is called frequently to check whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)" /> method according to application-determined criteria.</span></span></param>
        <param name="callbackData"><span data-ttu-id="db630-1446"><see langword="DrawImage" /> 메서드의 실행을 중지할지 여부를 확인할 때 사용하기 위한 <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 대리자의 추가 데이터를 지정하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1446">Value specifying additional data for the <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate to use when checking whether to stop execution of the <see langword="DrawImage" /> method.</span></span></param>
        <summary><span data-ttu-id="db630-1447">지정된 <see cref="T:System.Drawing.Image" />의 지정된 부분을 지정된 위치에 지정된 크기로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1447">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1448">합니다 `srcX`, `srcY`, `srcWidth`, 및 `srcHeight` 의 사각형 부분을 지정 하는 매개 변수는 `image` 그릴 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1448">The `srcX`, `srcY`, `srcWidth`, and `srcHeight` parameters specify a rectangular portion, of the `image` object to draw.</span></span> <span data-ttu-id="db630-1449">사각형은 원본 이미지의 왼쪽 위 모퉁이 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1449">The rectangle is relative to the upper-left corner of the source image.</span></span> <span data-ttu-id="db630-1450">이 부분에서 지정 된 사각형 내에 맞게 크기가 조정 되는 `destRect` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1450">This portion is scaled to fit inside the rectangle specified by the `destRect` parameter.</span></span>  
  
 <span data-ttu-id="db630-1451">이 오버 로드 된 `callback` 및 `callbackData` 매개 변수는 조건 및 애플리케이션에 의해 결정 되는 데이터에 따라 시작 되 면 이미지의 그리기를 중지 하는 방법을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1451">This overload with the `callback` and `callbackData` parameters provides the means to stop the drawing of an image once it starts according to criteria and data determined by the application.</span></span> <span data-ttu-id="db630-1452">예를 들어, 애플리케이션은 큰 이미지를 그리기 시작할 수 및 사용자 사례 애플리케이션 수 그리기를 중지 하는 화면 이미지를 스크롤할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1452">For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1453">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1453">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1454">코드에 대 한 콜백 메서드를 먼저 정의 <xref:System.Drawing.Graphics.DrawImageAbort> 대리자를 보기 위해 단순한 테스트 단순한 정의 이며 여부를 <xref:System.Drawing.Graphics.DrawImage%2A> 메서드 호출을 null로 `callBackData` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="db630-1454">The code first defines a callback method for the <xref:System.Drawing.Graphics.DrawImageAbort> delegate; the definition is simplistic and merely tests to see whether the <xref:System.Drawing.Graphics.DrawImage%2A> method calls it with a null `callBackData` parameter.</span></span> <span data-ttu-id="db630-1455">본문 예제에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1455">The main body of the example performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1456">인스턴스를 만듭니다는 <xref:System.Drawing.Graphics.DrawImageAbort> 콜백 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1456">Creates an instance of the <xref:System.Drawing.Graphics.DrawImageAbort> callback method.</span></span>  
  
-   <span data-ttu-id="db630-1457">JPEG 파일의 예제 폴더에는 예제에서 이미지를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1457">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="db630-1458">이미지를 그릴 대상 사각형을 정의 하는 지점을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1458">Creates points that define a destination rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="db630-1459">그릴 이미지의 부분의 선택 소스 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1459">Creates a source rectangle to select the portion of the image to draw.</span></span>  
  
-   <span data-ttu-id="db630-1460">그래픽 픽셀 단위 그리기를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1460">Sets the graphics drawing unit to pixel.</span></span>  
  
-   <span data-ttu-id="db630-1461">화면에 원본 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1461">Draws the original image to the screen.</span></span>  
  
-   <span data-ttu-id="db630-1462">조정된 된 이미지를 그릴 추가 대상 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1462">Creates an additional destination rectangle in which to draw an adjusted image.</span></span>  
  
-   <span data-ttu-id="db630-1463">만들고 더 큰 평균 보다 감마 값 조정된 된 이미지의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1463">Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</span></span>  
  
-   <span data-ttu-id="db630-1464">화면으로 조정된 된 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1464">Draws the adjusted image to the screen.</span></span>  
  
 <span data-ttu-id="db630-1465">조정 되지 않은 원래 대상 사각형의 위치 이미지 화면의 정하고, 대상 사각형의 소스 사각형 및 크기의 크기와 모양이 그려지는 이미지의 배율을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1465">For the original, unadjusted destination rectangle, the position locates the image on the screen, and the size of the source rectangle and the size and shape of the destination rectangle determines the scaling of the drawn image.</span></span>  
  
 <span data-ttu-id="db630-1466">이 예에서는 전달 하는 오버 로드를 사용 하므로 `callBackData` 매개 변수를 <xref:System.Drawing.Graphics.DrawImageAbort> 콜백이 반환 `false`, 있어를 <xref:System.Drawing.Graphics.DrawImage%2A> 계속 하는 방법 및 예제 화면으로 조정 된 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1466">Because this example uses an overload that passes a `callBackData` parameter, the <xref:System.Drawing.Graphics.DrawImageAbort> callback returns `false`, which causes the <xref:System.Drawing.Graphics.DrawImage%2A> method to continue, and the example draws the adjusted image to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#51](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#51)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#51](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#51)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#51](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#51)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1467"><paramref name="image" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1467"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-1468">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-1468">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttrs, System.Drawing.Graphics.DrawImageAbort callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Rectangle destRect, float32 srcX, float32 srcY, float32 srcWidth, float32 srcHeight, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Imaging.ImageAttributes imageAttrs, class System.Drawing.Graphics/DrawImageAbort callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Imaging::ImageAttributes ^ imageAttrs, System::Drawing::Graphics::DrawImageAbort ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Rectangle * single * single * single * single * System.Drawing.GraphicsUnit * System.Drawing.Imaging.ImageAttributes * System.Drawing.Graphics.DrawImageAbort * nativeint -&gt; unit" Usage="graphics.DrawImage (image, destRect, srcX, srcY, srcWidth, srcHeight, srcUnit, imageAttrs, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcX" Type="System.Single" />
        <Parameter Name="srcY" Type="System.Single" />
        <Parameter Name="srcWidth" Type="System.Single" />
        <Parameter Name="srcHeight" Type="System.Single" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="imageAttrs" Type="System.Drawing.Imaging.ImageAttributes" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+DrawImageAbort" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="db630-1469">그릴 <see cref="T:System.Drawing.Image" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1469"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destRect"><span data-ttu-id="db630-1470">그려지는 이미지의 위치와 크기를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1470"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image.</span></span> <span data-ttu-id="db630-1471">이미지는 사각형에 맞게 크기가 조정됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1471">The image is scaled to fit the rectangle.</span></span></param>
        <param name="srcX"><span data-ttu-id="db630-1472">그릴 원본 이미지 부분의 왼쪽 위 모퉁이에 대한 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1472">The x-coordinate of the upper-left corner of the portion of the source image to draw.</span></span></param>
        <param name="srcY"><span data-ttu-id="db630-1473">그릴 원본 이미지 부분의 왼쪽 위 모퉁이에 대한 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1473">The y-coordinate of the upper-left corner of the portion of the source image to draw.</span></span></param>
        <param name="srcWidth"><span data-ttu-id="db630-1474">그릴 원본 이미지의 부분의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1474">Width of the portion of the source image to draw.</span></span></param>
        <param name="srcHeight"><span data-ttu-id="db630-1475">그릴 원본 이미지의 부분의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1475">Height of the portion of the source image to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="db630-1476">원본 사각형을 결정하기 위해 사용하는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1476">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.</span></span></param>
        <param name="imageAttrs"><span data-ttu-id="db630-1477"><paramref name="image" /> 개체에 대한 다시 칠하기와 감마 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1477"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <paramref name="image" /> object.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-1478">이미지를 그리는 동안 호출할 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1478"><see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image.</span></span> <span data-ttu-id="db630-1479">이 메서드는 애플리케이션에 의해 결정된 조건에 따라 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)" /> 메서드의 실행을 중지할지 여부를 확인하기 위해 자주 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1479">This method is called frequently to check whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)" /> method according to application-determined criteria.</span></span></param>
        <param name="callbackData"><span data-ttu-id="db630-1480"><see langword="DrawImage" /> 메서드의 실행을 중지할지 여부를 확인할 때 사용하기 위한 <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 대리자의 추가 데이터를 지정하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1480">Value specifying additional data for the <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate to use when checking whether to stop execution of the <see langword="DrawImage" /> method.</span></span></param>
        <summary><span data-ttu-id="db630-1481">지정된 <see cref="T:System.Drawing.Image" />의 지정된 부분을 지정된 위치에 지정된 크기로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1481">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1482">합니다 `srcX`, `srcY`, `srcWidth`, 및 `srcHeight` 의 사각형 부분을 지정 하는 매개 변수는 `image` 그릴 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1482">The `srcX`, `srcY`, `srcWidth`, and `srcHeight` parameters specify a rectangular portion, of the `image` object to draw.</span></span> <span data-ttu-id="db630-1483">사각형은 원본 이미지의 왼쪽 위 모퉁이 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1483">The rectangle is relative to the upper-left corner of the source image.</span></span> <span data-ttu-id="db630-1484">이 부분에서 지정 된 사각형 내에 맞게 크기가 조정 되는 `destRect` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1484">This portion is scaled to fit inside the rectangle specified by the `destRect` parameter.</span></span>  
  
 <span data-ttu-id="db630-1485">이 오버 로드 된 `callback` 및 `callbackData` 매개 변수는 조건 및 애플리케이션에 의해 결정 되는 데이터에 따라 시작 되 면 이미지의 그리기를 중지 하는 방법을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1485">This overload with the `callback` and `callbackData` parameters provides the means to stop the drawing of an image once it starts according to criteria and data determined by the application.</span></span> <span data-ttu-id="db630-1486">예를 들어, 애플리케이션은 큰 이미지를 그리기 시작할 수 및 사용자 사례 애플리케이션 수 그리기를 중지 하는 화면 이미지를 스크롤할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1486">For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1487">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1487">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1488">코드에 대 한 콜백 메서드를 먼저 정의 <xref:System.Drawing.Graphics.DrawImageAbort> 대리자를 보기 위해 단순한 테스트 단순한 정의 이며 여부를 <xref:System.Drawing.Graphics.DrawImage%2A> 메서드 호출을 null로 `callBackData` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="db630-1488">The code first defines a callback method for the <xref:System.Drawing.Graphics.DrawImageAbort> delegate; the definition is simplistic and merely tests to see whether the <xref:System.Drawing.Graphics.DrawImage%2A> method calls it with a null `callBackData` parameter.</span></span> <span data-ttu-id="db630-1489">본문 예제에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1489">The main body of the example performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1490">인스턴스를 만듭니다는 <xref:System.Drawing.Graphics.DrawImageAbort> 콜백 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1490">Creates an instance of the <xref:System.Drawing.Graphics.DrawImageAbort> callback method.</span></span>  
  
-   <span data-ttu-id="db630-1491">JPEG 파일의 예제 폴더에는 예제에서 이미지를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1491">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="db630-1492">이미지를 그릴 대상 사각형을 정의 하는 지점을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1492">Creates points that define a destination rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="db630-1493">그릴 이미지의 부분의 선택 소스 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1493">Creates a source rectangle to select the portion of the image to draw.</span></span>  
  
-   <span data-ttu-id="db630-1494">그래픽 픽셀 단위 그리기를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1494">Sets the graphics drawing unit to pixel.</span></span>  
  
-   <span data-ttu-id="db630-1495">화면에 원본 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1495">Draws the original image to the screen.</span></span>  
  
-   <span data-ttu-id="db630-1496">조정된 된 이미지를 그릴 추가 대상 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1496">Creates an additional destination rectangle in which to draw an adjusted image.</span></span>  
  
-   <span data-ttu-id="db630-1497">만들고 더 큰 평균 보다 감마 값 조정된 된 이미지의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1497">Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</span></span>  
  
-   <span data-ttu-id="db630-1498">화면으로 조정된 된 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1498">Draws the adjusted image to the screen.</span></span>  
  
 <span data-ttu-id="db630-1499">조정 되지 않은 원래 대상 사각형의 위치 이미지 화면의 정하고, 대상 사각형의 소스 사각형 및 크기의 크기와 모양이 그려지는 이미지의 배율을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1499">For the original, unadjusted destination rectangle, the position locates the image on the screen, and the size of the source rectangle and the size and shape of the destination rectangle determines the scaling of the drawn image.</span></span>  
  
 <span data-ttu-id="db630-1500">이 예에서는 전달 하는 오버 로드를 사용 하므로 `callBackData` 매개 변수를 <xref:System.Drawing.Graphics.DrawImageAbort> 콜백이 반환 `false`, 있어를 <xref:System.Drawing.Graphics.DrawImage%2A> 계속 하는 방법 및 예제 화면으로 조정 된 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1500">Because this example uses an overload that passes a `callBackData` parameter, the <xref:System.Drawing.Graphics.DrawImageAbort> callback returns `false`, which causes the <xref:System.Drawing.Graphics.DrawImage%2A> method to continue, and the example draws the adjusted image to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#55](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#55)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#55](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#55)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#55](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#55)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1501"><paramref name="image" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1501"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-1502">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-1502">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawImageUnscaled">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db630-1503">지정된 이미지를 좌표 쌍으로 지정된 위치에 원래 크기로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1503">Draws the specified image using its original physical size at the location specified by a coordinate pair.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawImageUnscaled">
      <MemberSignature Language="C#" Value="public void DrawImageUnscaled (System.Drawing.Image image, System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImageUnscaled(class System.Drawing.Image image, valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImageUnscaled(System::Drawing::Image ^ image, System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.DrawImageUnscaled : System.Drawing.Image * System.Drawing.Point -&gt; unit" Usage="graphics.DrawImageUnscaled (image, point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="db630-1504">그릴 <see cref="T:System.Drawing.Image" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1504"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="point"><span data-ttu-id="db630-1505">그려지는 이미지의 왼쪽 위 모퉁이를 지정하는 <see cref="T:System.Drawing.Point" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1505"><see cref="T:System.Drawing.Point" /> structure that specifies the upper-left corner of the drawn image.</span></span></param>
        <summary><span data-ttu-id="db630-1506">지정된 이미지를 지정된 위치에 원래 크기로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1506">Draws a specified image using its original physical size at a specified location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1507"><xref:System.Drawing.Image> 픽셀 너비에 대 한 값 및 가로 해상도 (인치당 도트 수)에 대 한 값을 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1507">An <xref:System.Drawing.Image> stores a value for pixel width and a value for horizontal resolution (dots per inch).</span></span> <span data-ttu-id="db630-1508">이미지를 인치 단위로 측정 된 실제 너비를 픽셀 너비의 가로 해상도 나눈 것입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1508">The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</span></span> <span data-ttu-id="db630-1509">예를 들어, 216 픽셀 너비, 72 인치당의 가로 해상도 사용 하 여 이미지에는 실제 너비는 3 인치</span><span class="sxs-lookup"><span data-stu-id="db630-1509">For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches.</span></span> <span data-ttu-id="db630-1510">이와 유사 픽셀 높이 실제 높이에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1510">Similar remarks apply to pixel height and physical height.</span></span>  
  
 <span data-ttu-id="db630-1511"><xref:System.Drawing.Graphics.DrawImageUnscaled%2A> 메서드 인치 디스플레이 디바이스의 해상도 (인치당 도트 수)와 관계 없이 올바른 크기를 가집니다 이미지는 실제 크기를 사용 하 여 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1511">The <xref:System.Drawing.Graphics.DrawImageUnscaled%2A> method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</span></span> <span data-ttu-id="db630-1512">예를 들어, 216 픽셀 너비, 72 인치당의 가로 해상도 이미지에는 것으로 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1512">For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</span></span> <span data-ttu-id="db630-1513">호출 하는 경우 <xref:System.Drawing.Graphics.DrawImageUnscaled%2A> 96dpi 해상도 포함 하는 디바이스에서 해당 이미지를 그릴 렌더링 되는 이미지의 픽셀 너비 됩니다 (216/72) \* 96 = 288 개.</span><span class="sxs-lookup"><span data-stu-id="db630-1513">If you call <xref:System.Drawing.Graphics.DrawImageUnscaled%2A> to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)\*96 = 288.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1514">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1514">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1515">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1515">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1516">JPEG 파일의 예제 폴더에는 예제에서 이미지를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1516">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="db630-1517">이미지의 왼쪽 위 모퉁이 그릴 점을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1517">Creates a point at which to draw the upper-left corner of the image.</span></span>  
  
-   <span data-ttu-id="db630-1518">실제 크기를 사용 하 여 전체 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1518">Draws the entire image using its physical size.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#64](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#64)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#64](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#64)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#64](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#64)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1519"><paramref name="image" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1519"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImageUnscaled">
      <MemberSignature Language="C#" Value="public void DrawImageUnscaled (System.Drawing.Image image, System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImageUnscaled(class System.Drawing.Image image, valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImageUnscaled(System::Drawing::Image ^ image, System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.DrawImageUnscaled : System.Drawing.Image * System.Drawing.Rectangle -&gt; unit" Usage="graphics.DrawImageUnscaled (image, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="db630-1520">그릴 <see cref="T:System.Drawing.Image" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1520"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="rect"><span data-ttu-id="db630-1521">그려지는 이미지의 왼쪽 위 모퉁이를 지정하는 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1521"><see cref="T:System.Drawing.Rectangle" /> that specifies the upper-left corner of the drawn image.</span></span> <span data-ttu-id="db630-1522">사각형의 X와 Y 속성은 왼쪽 위 모퉁이를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1522">The X and Y properties of the rectangle specify the upper-left corner.</span></span> <span data-ttu-id="db630-1523">Width 및 Height 속성은 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1523">The Width and Height properties are ignored.</span></span></param>
        <summary><span data-ttu-id="db630-1524">지정된 이미지를 지정된 위치에 원래 크기로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1524">Draws a specified image using its original physical size at a specified location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1525"><xref:System.Drawing.Image> 픽셀 너비에 대 한 값 및 가로 해상도 (인치당 도트 수)에 대 한 값을 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1525">An <xref:System.Drawing.Image> stores a value for pixel width and a value for horizontal resolution (dots per inch).</span></span> <span data-ttu-id="db630-1526">이미지를 인치 단위로 측정 된 실제 너비를 픽셀 너비의 가로 해상도 나눈 것입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1526">The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</span></span> <span data-ttu-id="db630-1527">예를 들어, 216 픽셀 너비, 72 인치당의 가로 해상도 사용 하 여 이미지에는 실제 너비는 3 인치</span><span class="sxs-lookup"><span data-stu-id="db630-1527">For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches.</span></span> <span data-ttu-id="db630-1528">이와 유사 픽셀 높이 실제 높이에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1528">Similar remarks apply to pixel height and physical height.</span></span>  
  
 <span data-ttu-id="db630-1529"><xref:System.Drawing.Graphics.DrawImageUnscaled%2A> 메서드 인치 디스플레이 디바이스의 해상도 (인치당 도트 수)와 관계 없이 올바른 크기를 가집니다 이미지는 실제 크기를 사용 하 여 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1529">The <xref:System.Drawing.Graphics.DrawImageUnscaled%2A> method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</span></span> <span data-ttu-id="db630-1530">예를 들어, 216 픽셀 너비, 72 인치당의 가로 해상도 이미지에는 것으로 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1530">For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</span></span> <span data-ttu-id="db630-1531">호출 하는 경우 <xref:System.Drawing.Graphics.DrawImageUnscaled%2A> 96dpi 해상도 포함 하는 디바이스에서 해당 이미지를 그릴 렌더링 되는 이미지의 픽셀 너비 됩니다 (216/72) \* 96 = 288 개.</span><span class="sxs-lookup"><span data-stu-id="db630-1531">If you call <xref:System.Drawing.Graphics.DrawImageUnscaled%2A> to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)\*96 = 288.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1532"><paramref name="image" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1532"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImageUnscaled">
      <MemberSignature Language="C#" Value="public void DrawImageUnscaled (System.Drawing.Image image, int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImageUnscaled(class System.Drawing.Image image, int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImageUnscaled(System::Drawing::Image ^ image, int x, int y);" />
      <MemberSignature Language="F#" Value="member this.DrawImageUnscaled : System.Drawing.Image * int * int -&gt; unit" Usage="graphics.DrawImageUnscaled (image, x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="db630-1533">그릴 <see cref="T:System.Drawing.Image" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1533"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="x"><span data-ttu-id="db630-1534">그려지는 이미지의 왼쪽 위 모퉁이에 대한 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1534">The x-coordinate of the upper-left corner of the drawn image.</span></span></param>
        <param name="y"><span data-ttu-id="db630-1535">그려지는 이미지의 왼쪽 위 모퉁이에 대한 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1535">The y-coordinate of the upper-left corner of the drawn image.</span></span></param>
        <summary><span data-ttu-id="db630-1536">지정된 이미지를 좌표 쌍으로 지정된 위치에 원래 크기로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1536">Draws the specified image using its original physical size at the location specified by a coordinate pair.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1537"><xref:System.Drawing.Image> 픽셀 너비에 대 한 값 및 가로 해상도 (인치당 도트 수)에 대 한 값을 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1537">An <xref:System.Drawing.Image> stores a value for pixel width and a value for horizontal resolution (dots per inch).</span></span> <span data-ttu-id="db630-1538">이미지를 인치 단위로 측정 된 실제 너비를 픽셀 너비의 가로 해상도 나눈 것입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1538">The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</span></span> <span data-ttu-id="db630-1539">예를 들어, 216 픽셀 너비, 72 인치당의 가로 해상도 사용 하 여 이미지에는 실제 너비는 3 인치</span><span class="sxs-lookup"><span data-stu-id="db630-1539">For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches.</span></span> <span data-ttu-id="db630-1540">이와 유사 픽셀 높이 실제 높이에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1540">Similar remarks apply to pixel height and physical height.</span></span>  
  
 <span data-ttu-id="db630-1541"><xref:System.Drawing.Graphics.DrawImageUnscaled%2A> 메서드 인치 디스플레이 디바이스의 해상도 (인치당 도트 수)와 관계 없이 올바른 크기를 가집니다 이미지는 실제 크기를 사용 하 여 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1541">The <xref:System.Drawing.Graphics.DrawImageUnscaled%2A> method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</span></span> <span data-ttu-id="db630-1542">예를 들어, 216 픽셀 너비, 72 인치당의 가로 해상도 이미지에는 것으로 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1542">For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</span></span> <span data-ttu-id="db630-1543">호출 하는 경우 <xref:System.Drawing.Graphics.DrawImageUnscaled%2A> 96dpi 해상도 포함 하는 디바이스에서 해당 이미지를 그릴 렌더링 되는 이미지의 픽셀 너비 됩니다 (216/72) \* 96 = 288 개.</span><span class="sxs-lookup"><span data-stu-id="db630-1543">If you call <xref:System.Drawing.Graphics.DrawImageUnscaled%2A> to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)\*96 = 288.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1544">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1544">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1545">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1545">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1546">JPEG 파일의 예제 폴더에 예제에서 이미지를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1546">Creates an image from a JPEG file, SampImag.jpg, in the folder of the example.</span></span>  
  
-   <span data-ttu-id="db630-1547">이미지의 왼쪽 위 모퉁이 그릴 점을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1547">Creates a point at which to draw the upper-left corner of the image.</span></span>  
  
-   <span data-ttu-id="db630-1548">실제 크기를 사용 하 여 전체 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1548">Draws the entire image using its physical size.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#65](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#65)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#65](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#65)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#65](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#65)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1549"><paramref name="image" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1549"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImageUnscaled">
      <MemberSignature Language="C#" Value="public void DrawImageUnscaled (System.Drawing.Image image, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImageUnscaled(class System.Drawing.Image image, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImageUnscaled(System::Drawing::Image ^ image, int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.DrawImageUnscaled : System.Drawing.Image * int * int * int * int -&gt; unit" Usage="graphics.DrawImageUnscaled (image, x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="db630-1550">그릴 <see cref="T:System.Drawing.Image" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1550"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="x"><span data-ttu-id="db630-1551">그려지는 이미지의 왼쪽 위 모퉁이에 대한 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1551">The x-coordinate of the upper-left corner of the drawn image.</span></span></param>
        <param name="y"><span data-ttu-id="db630-1552">그려지는 이미지의 왼쪽 위 모퉁이에 대한 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1552">The y-coordinate of the upper-left corner of the drawn image.</span></span></param>
        <param name="width"><span data-ttu-id="db630-1553">사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1553">Not used.</span></span></param>
        <param name="height"><span data-ttu-id="db630-1554">사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1554">Not used.</span></span></param>
        <summary><span data-ttu-id="db630-1555">지정된 이미지를 지정된 위치에 원래 크기로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1555">Draws a specified image using its original physical size at a specified location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1556"><xref:System.Drawing.Image> 픽셀 너비에 대 한 값 및 가로 해상도 (인치당 도트 수)에 대 한 값을 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1556">An <xref:System.Drawing.Image> stores a value for pixel width and a value for horizontal resolution (dots per inch).</span></span> <span data-ttu-id="db630-1557">이미지를 인치 단위로 측정 된 실제 너비를 픽셀 너비의 가로 해상도 나눈 것입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1557">The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</span></span> <span data-ttu-id="db630-1558">예를 들어, 216 픽셀 너비, 72 인치당의 가로 해상도 사용 하 여 이미지에는 실제 너비는 3 인치</span><span class="sxs-lookup"><span data-stu-id="db630-1558">For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches.</span></span> <span data-ttu-id="db630-1559">이와 유사 픽셀 높이 실제 높이에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1559">Similar remarks apply to pixel height and physical height.</span></span>  
  
 <span data-ttu-id="db630-1560"><xref:System.Drawing.Graphics.DrawImageUnscaled%2A> 메서드 인치 디스플레이 디바이스의 해상도 (인치당 도트 수)와 관계 없이 올바른 크기를 가집니다 이미지는 실제 크기를 사용 하 여 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1560">The <xref:System.Drawing.Graphics.DrawImageUnscaled%2A> method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</span></span> <span data-ttu-id="db630-1561">예를 들어, 216 픽셀 너비, 72 인치당의 가로 해상도 이미지에는 것으로 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1561">For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</span></span> <span data-ttu-id="db630-1562">호출 하는 경우 <xref:System.Drawing.Graphics.DrawImageUnscaled%2A> 96dpi 해상도 포함 하는 디바이스에서 해당 이미지를 그릴 렌더링 되는 이미지의 픽셀 너비 됩니다 (216/72) \* 96 = 288 개.</span><span class="sxs-lookup"><span data-stu-id="db630-1562">If you call <xref:System.Drawing.Graphics.DrawImageUnscaled%2A> to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)\*96 = 288.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1563"><paramref name="image" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1563"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImageUnscaledAndClipped">
      <MemberSignature Language="C#" Value="public void DrawImageUnscaledAndClipped (System.Drawing.Image image, System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImageUnscaledAndClipped(class System.Drawing.Image image, valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImageUnscaledAndClipped(System.Drawing.Image,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImageUnscaledAndClipped(System::Drawing::Image ^ image, System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.DrawImageUnscaledAndClipped : System.Drawing.Image * System.Drawing.Rectangle -&gt; unit" Usage="graphics.DrawImageUnscaledAndClipped (image, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="db630-1564">그릴 <see cref="T:System.Drawing.Image" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1564">The <see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="rect"><span data-ttu-id="db630-1565">이미지를 그릴 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1565">The <see cref="T:System.Drawing.Rectangle" /> in which to draw the image.</span></span></param>
        <summary><span data-ttu-id="db630-1566">필요한 경우 이미지 크기를 조정하여 클리핑하지 않고 지정된 사각형에 맞게 지정된 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1566">Draws the specified image without scaling and clips it, if necessary, to fit in the specified rectangle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="db630-1567">다음 예제에서는 <xref:System.Drawing.Graphics.DrawImageUnscaledAndClipped%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1567">The following example demonstrates how to use the <xref:System.Drawing.Graphics.DrawImageUnscaledAndClipped%2A> method.</span></span> <span data-ttu-id="db630-1568">이 예제를 실행 하려면 Windows 폼에 붙여 넣습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1568">To run this example, paste it into a Windows Form.</span></span> <span data-ttu-id="db630-1569">양식의 처리 <xref:System.Windows.Forms.Control.Paint> 이벤트 및 호출 합니다 `DrawImageUnscaled` 메서드에서 <xref:System.Windows.Forms.Control.Paint> 전달 하는 이벤트 처리 메서드를 `e` 으로 <xref:System.Windows.Forms.PaintEventArgs>입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1569">Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `DrawImageUnscaled` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-csharp[System.Drawing.MiscWhidbeySnippets#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/CS/Form1.cs#8)]
 [!code-vb[System.Drawing.MiscWhidbeySnippets#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1570"><paramref name="image" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1570"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawLine">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db630-1571">좌표 쌍에 의해 지정된 두 개의 점을 연결하는 선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1571">Draws a line connecting the two points specified by the coordinate pairs.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawLine">
      <MemberSignature Language="C#" Value="public void DrawLine (System.Drawing.Pen pen, System.Drawing.Point pt1, System.Drawing.Point pt2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawLine(class System.Drawing.Pen pen, valuetype System.Drawing.Point pt1, valuetype System.Drawing.Point pt2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawLine(System::Drawing::Pen ^ pen, System::Drawing::Point pt1, System::Drawing::Point pt2);" />
      <MemberSignature Language="F#" Value="member this.DrawLine : System.Drawing.Pen * System.Drawing.Point * System.Drawing.Point -&gt; unit" Usage="graphics.DrawLine (pen, pt1, pt2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="pt1" Type="System.Drawing.Point" />
        <Parameter Name="pt2" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-1572">선의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1572"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the line.</span></span></param>
        <param name="pt1"><span data-ttu-id="db630-1573">연결할 첫째 점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1573"><see cref="T:System.Drawing.Point" /> structure that represents the first point to connect.</span></span></param>
        <param name="pt2"><span data-ttu-id="db630-1574">연결할 둘째 점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1574"><see cref="T:System.Drawing.Point" /> structure that represents the second point to connect.</span></span></param>
        <summary><span data-ttu-id="db630-1575">두 개의 <see cref="T:System.Drawing.Point" /> 구조체를 연결하는 선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1575">Draws a line connecting two <see cref="T:System.Drawing.Point" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="db630-1576">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1576">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1577">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1577">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1578">Black 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1578">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="db630-1579">선의 끝점에 대 한 끝점을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1579">Creates points for the endpoints of the line.</span></span>  
  
-   <span data-ttu-id="db630-1580">화면에 선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1580">Draws the line to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#66](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#66)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#66](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#66)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#66](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#66)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1581"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1581"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/using-a-pen-to-draw-lines-and-shapes.md"><span data-ttu-id="db630-1582">펜을 사용하여 선과 도형 그리기</span><span class="sxs-lookup"><span data-stu-id="db630-1582">Using a Pen to Draw Lines and Shapes</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawLine">
      <MemberSignature Language="C#" Value="public void DrawLine (System.Drawing.Pen pen, System.Drawing.PointF pt1, System.Drawing.PointF pt2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawLine(class System.Drawing.Pen pen, valuetype System.Drawing.PointF pt1, valuetype System.Drawing.PointF pt2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawLine(System::Drawing::Pen ^ pen, System::Drawing::PointF pt1, System::Drawing::PointF pt2);" />
      <MemberSignature Language="F#" Value="member this.DrawLine : System.Drawing.Pen * System.Drawing.PointF * System.Drawing.PointF -&gt; unit" Usage="graphics.DrawLine (pen, pt1, pt2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="pt1" Type="System.Drawing.PointF" />
        <Parameter Name="pt2" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-1583">선의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1583"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the line.</span></span></param>
        <param name="pt1"><span data-ttu-id="db630-1584">연결할 첫째 점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1584"><see cref="T:System.Drawing.PointF" /> structure that represents the first point to connect.</span></span></param>
        <param name="pt2"><span data-ttu-id="db630-1585">연결할 둘째 점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1585"><see cref="T:System.Drawing.PointF" /> structure that represents the second point to connect.</span></span></param>
        <summary><span data-ttu-id="db630-1586">두 개의 <see cref="T:System.Drawing.PointF" /> 구조체를 연결하는 선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1586">Draws a line connecting two <see cref="T:System.Drawing.PointF" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1587">이 메서드는 지정 된 두 지점을 연결 선을 그립니다 합니다 `pt1` 및 p`2` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1587">This method draws a line connecting the two points specified by the `pt1` and p`2` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1588">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1588">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1589">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1589">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1590">Black 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1590">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="db630-1591">선의 끝점에 대 한 끝점을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1591">Creates points for the endpoints of the line.</span></span>  
  
-   <span data-ttu-id="db630-1592">화면에 선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1592">Draws the line to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#67](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#67)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#67](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#67)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#67](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#67)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1593"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1593"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/using-a-pen-to-draw-lines-and-shapes.md"><span data-ttu-id="db630-1594">펜을 사용하여 선과 도형 그리기</span><span class="sxs-lookup"><span data-stu-id="db630-1594">Using a Pen to Draw Lines and Shapes</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawLine">
      <MemberSignature Language="C#" Value="public void DrawLine (System.Drawing.Pen pen, int x1, int y1, int x2, int y2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawLine(class System.Drawing.Pen pen, int32 x1, int32 y1, int32 x2, int32 y2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawLine(System::Drawing::Pen ^ pen, int x1, int y1, int x2, int y2);" />
      <MemberSignature Language="F#" Value="member this.DrawLine : System.Drawing.Pen * int * int * int * int -&gt; unit" Usage="graphics.DrawLine (pen, x1, y1, x2, y2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="x1" Type="System.Int32" />
        <Parameter Name="y1" Type="System.Int32" />
        <Parameter Name="x2" Type="System.Int32" />
        <Parameter Name="y2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-1595">선의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1595"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the line.</span></span></param>
        <param name="x1"><span data-ttu-id="db630-1596">첫째 점의 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1596">The x-coordinate of the first point.</span></span></param>
        <param name="y1"><span data-ttu-id="db630-1597">첫째 점의 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1597">The y-coordinate of the first point.</span></span></param>
        <param name="x2"><span data-ttu-id="db630-1598">둘째 점의 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1598">The x-coordinate of the second point.</span></span></param>
        <param name="y2"><span data-ttu-id="db630-1599">둘째 점의 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1599">The y-coordinate of the second point.</span></span></param>
        <summary><span data-ttu-id="db630-1600">좌표 쌍에 의해 지정된 두 개의 점을 연결하는 선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1600">Draws a line connecting the two points specified by the coordinate pairs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1601">이 메서드는 지정 된 두 지점을 연결 선을 그립니다 합니다 `x1`, `y1`를 `x2`, 및 `y2` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1601">This method draws a line connecting the two points specified by the `x1`, `y1`, `x2`, and `y2` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1602">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1602">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1603">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1603">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1604">Black 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1604">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="db630-1605">선의 끝점 좌표를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1605">Creates the coordinates of the endpoints of the line.</span></span>  
  
-   <span data-ttu-id="db630-1606">화면에 선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1606">Draws the line to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#68](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#68)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#68](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#68)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#68](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#68)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1607"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1607"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/using-a-pen-to-draw-lines-and-shapes.md"><span data-ttu-id="db630-1608">펜을 사용하여 선과 도형 그리기</span><span class="sxs-lookup"><span data-stu-id="db630-1608">Using a Pen to Draw Lines and Shapes</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawLine">
      <MemberSignature Language="C#" Value="public void DrawLine (System.Drawing.Pen pen, float x1, float y1, float x2, float y2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawLine(class System.Drawing.Pen pen, float32 x1, float32 y1, float32 x2, float32 y2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawLine(System::Drawing::Pen ^ pen, float x1, float y1, float x2, float y2);" />
      <MemberSignature Language="F#" Value="member this.DrawLine : System.Drawing.Pen * single * single * single * single -&gt; unit" Usage="graphics.DrawLine (pen, x1, y1, x2, y2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="x1" Type="System.Single" />
        <Parameter Name="y1" Type="System.Single" />
        <Parameter Name="x2" Type="System.Single" />
        <Parameter Name="y2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-1609">선의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1609"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the line.</span></span></param>
        <param name="x1"><span data-ttu-id="db630-1610">첫째 점의 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1610">The x-coordinate of the first point.</span></span></param>
        <param name="y1"><span data-ttu-id="db630-1611">첫째 점의 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1611">The y-coordinate of the first point.</span></span></param>
        <param name="x2"><span data-ttu-id="db630-1612">둘째 점의 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1612">The x-coordinate of the second point.</span></span></param>
        <param name="y2"><span data-ttu-id="db630-1613">둘째 점의 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1613">The y-coordinate of the second point.</span></span></param>
        <summary><span data-ttu-id="db630-1614">좌표 쌍에 의해 지정된 두 개의 점을 연결하는 선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1614">Draws a line connecting the two points specified by the coordinate pairs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1615">이 메서드는 지정 된 두 지점을 연결 선을 그립니다 합니다 `x1`, `y1`를 `x2`, 및 `y2` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1615">This method draws a line connecting the two points specified by the `x1`, `y1`, `x2`, and `y2` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1616">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1616">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1617">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1617">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1618">Black 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1618">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="db630-1619">선의 끝점 좌표를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1619">Creates the coordinates of the endpoints of the line.</span></span>  
  
-   <span data-ttu-id="db630-1620">화면에 선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1620">Draws the line to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#69](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#69)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#69](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#69)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#69](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#69)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1621"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1621"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/using-a-pen-to-draw-lines-and-shapes.md"><span data-ttu-id="db630-1622">펜을 사용하여 선과 도형 그리기</span><span class="sxs-lookup"><span data-stu-id="db630-1622">Using a Pen to Draw Lines and Shapes</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawLines">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db630-1623"><see cref="T:System.Drawing.Point" /> 구조체의 배열을 연결하는 일련의 직선 세그먼트를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1623">Draws a series of line segments that connect an array of <see cref="T:System.Drawing.Point" /> structures.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawLines">
      <MemberSignature Language="C#" Value="public void DrawLines (System.Drawing.Pen pen, System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawLines(class System.Drawing.Pen pen, valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawLines(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.DrawLines : System.Drawing.Pen * System.Drawing.Point[] -&gt; unit" Usage="graphics.DrawLines (pen, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-1624">선분의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1624"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the line segments.</span></span></param>
        <param name="points"><span data-ttu-id="db630-1625">연결할 점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1625">Array of <see cref="T:System.Drawing.Point" /> structures that represent the points to connect.</span></span></param>
        <summary><span data-ttu-id="db630-1626"><see cref="T:System.Drawing.Point" /> 구조체의 배열을 연결하는 일련의 직선 세그먼트를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1626">Draws a series of line segments that connect an array of <see cref="T:System.Drawing.Point" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1627">이 메서드는 일련의 끝점이 배열을 연결 하는 선 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1627">This method draws a series of lines connecting an array of ending points.</span></span> <span data-ttu-id="db630-1628">배열에서 처음 두 점 첫 번째 줄을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1628">The first two points in the array specify the first line.</span></span> <span data-ttu-id="db630-1629">각 추가 연결 지점 이전 선 세그먼트의 끝점 인 시작점 선 세그먼트의 끝을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1629">Each additional point specifies the end of a line segment whose starting point is the ending point of the previous line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1630">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1630">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1631">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1631">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1632">Black 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1632">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="db630-1633">선 세그먼트의 요소의 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1633">Creates an array of points of segments of the line.</span></span>  
  
-   <span data-ttu-id="db630-1634">화면에 연결 된 선 세그먼트를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1634">Draws the connected line segments to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#70](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#70)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#70](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#70)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#70](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#70)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1635"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1635"><paramref name="pen" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="db630-1636">또는</span><span class="sxs-lookup"><span data-stu-id="db630-1636">-or-</span></span> 
 <span data-ttu-id="db630-1637"><paramref name="points" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1637"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawLines">
      <MemberSignature Language="C#" Value="public void DrawLines (System.Drawing.Pen pen, System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawLines(class System.Drawing.Pen pen, valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawLines(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.DrawLines : System.Drawing.Pen * System.Drawing.PointF[] -&gt; unit" Usage="graphics.DrawLines (pen, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-1638">선분의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1638"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the line segments.</span></span></param>
        <param name="points"><span data-ttu-id="db630-1639">연결할 점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1639">Array of <see cref="T:System.Drawing.PointF" /> structures that represent the points to connect.</span></span></param>
        <summary><span data-ttu-id="db630-1640"><see cref="T:System.Drawing.PointF" /> 구조체의 배열을 연결하는 일련의 직선 세그먼트를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1640">Draws a series of line segments that connect an array of <see cref="T:System.Drawing.PointF" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1641">이 메서드는 일련의 끝점이 배열을 연결 하는 선 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1641">This method draws a series of lines connecting an array of ending points.</span></span> <span data-ttu-id="db630-1642">배열에서 처음 두 점 첫 번째 줄을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1642">The first two points in the array specify the first line.</span></span> <span data-ttu-id="db630-1643">각 추가 연결 지점 이전 선 세그먼트의 끝점 인 시작점 선 세그먼트의 끝을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1643">Each additional point specifies the end of a line segment whose starting point is the ending point of the previous line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1644">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1644">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1645">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1645">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1646">코드는 검은색 펜을을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1646">Code creates a black pen.</span></span>  
  
-   <span data-ttu-id="db630-1647">선 세그먼트의 요소의 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1647">Creates an array of points of segments of the line.</span></span>  
  
-   <span data-ttu-id="db630-1648">화면에 연결 된 선 세그먼트를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1648">Draws the connected line segments to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#71](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#71)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#71](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#71)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#71](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#71)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1649"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1649"><paramref name="pen" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="db630-1650">또는</span><span class="sxs-lookup"><span data-stu-id="db630-1650">-or-</span></span> 
 <span data-ttu-id="db630-1651"><paramref name="points" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1651"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawPath">
      <MemberSignature Language="C#" Value="public void DrawPath (System.Drawing.Pen pen, System.Drawing.Drawing2D.GraphicsPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawPath(class System.Drawing.Pen pen, class System.Drawing.Drawing2D.GraphicsPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawPath(System::Drawing::Pen ^ pen, System::Drawing::Drawing2D::GraphicsPath ^ path);" />
      <MemberSignature Language="F#" Value="member this.DrawPath : System.Drawing.Pen * System.Drawing.Drawing2D.GraphicsPath -&gt; unit" Usage="graphics.DrawPath (pen, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-1652">경로의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1652"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the path.</span></span></param>
        <param name="path"><span data-ttu-id="db630-1653">그릴 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1653"><see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to draw.</span></span></param>
        <summary><span data-ttu-id="db630-1654"><see cref="T:System.Drawing.Drawing2D.GraphicsPath" />를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1654">Draws a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1655">그래픽 컨텍스트에 현재 변환에 적용 되는 <xref:System.Drawing.Drawing2D.GraphicsPath> 를 그리기 전에 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1655">The current transformation in the graphic context is applied to the <xref:System.Drawing.Drawing2D.GraphicsPath> before it is drawn.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1656">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1656">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1657">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1657">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1658">그래픽 경로 개체를 만들어를 타원을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1658">Creates a graphics path object and adds an ellipse to it.</span></span>  
  
-   <span data-ttu-id="db630-1659">Black 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1659">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="db630-1660">화면에 그래픽 경로를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1660">Draws the graphics path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#72](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#72)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#72](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#72)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#72](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#72)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1661"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1661"><paramref name="pen" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="db630-1662">또는</span><span class="sxs-lookup"><span data-stu-id="db630-1662">-or-</span></span> 
 <span data-ttu-id="db630-1663"><paramref name="path" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1663"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawPie">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db630-1664">좌표 쌍, 너비, 높이 및 두 개의 방사형 선에 의해 지정된 타원으로 정의되는 원형 도형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1664">Draws a pie shape defined by an ellipse specified by a coordinate pair, a width, a height, and two radial lines.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawPie">
      <MemberSignature Language="C#" Value="public void DrawPie (System.Drawing.Pen pen, System.Drawing.Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawPie(class System.Drawing.Pen pen, valuetype System.Drawing.Rectangle rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawPie(System::Drawing::Pen ^ pen, System::Drawing::Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.DrawPie : System.Drawing.Pen * System.Drawing.Rectangle * single * single -&gt; unit" Usage="graphics.DrawPie (pen, rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-1665">원형 도형의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1665"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the pie shape.</span></span></param>
        <param name="rect"><span data-ttu-id="db630-1666">원형 도형이 발생된 타원을 정의하는 경계 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1666"><see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding rectangle that defines the ellipse from which the pie shape comes.</span></span></param>
        <param name="startAngle"><span data-ttu-id="db630-1667">x-축에서 원형 도형의 첫째 면까지 시계 방향으로 측정한 각도(단위: 도)입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1667">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="db630-1668"><paramref name="startAngle" /> 매개 변수에서 원형 도형의 둘째 면까지 시계 방향으로 측정한 각도(단위: 도)입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1668">Angle measured in degrees clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie shape.</span></span></param>
        <summary><span data-ttu-id="db630-1669"><see cref="T:System.Drawing.Rectangle" /> 구조체와 두 개의 방사형 선에 의해 지정된 타원으로 정의되는 원형 도형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1669">Draws a pie shape defined by an ellipse specified by a <see cref="T:System.Drawing.Rectangle" /> structure and two radial lines.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1670">이 메서드는 호의 끝점을 사용 하 여 교차 하는 두 개의 방사형 선에 타원의 호에서 정의 되는 원형 도형을 그립니다. 줄임표는 경계 사각형에 의해 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1670">This method draws a pie shape defined by an arc of an ellipse and the two radial lines that intersect with the endpoints of the arc. The ellipse is defined by the bounding rectangle.</span></span> <span data-ttu-id="db630-1671">원형 도형이 정의한 두 개의 방사형 선에 구성 합니다 `startAngle` 및 `sweepAngle` 매개 변수 및 타원을 사용 하 여 방사형 해당 줄의 교차 부분 간에 호입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1671">The pie shape consists of the two radial lines defined by the `startAngle` and `sweepAngle` parameters, and the arc between the intersections of those radial lines with the ellipse.</span></span>  
  
 <span data-ttu-id="db630-1672">경우는 `sweepAngle` 매개 변수 보다 작거나-360도 360도 보다 크거나, 360도 또는-360도 각각 것 처럼 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1672">If the `sweepAngle` parameter is greater than 360 degrees or less than -360 degrees, it is treated as if it were 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1673">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1673">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1674">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1674">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1675">Black 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1675">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="db630-1676">완전 한 타원을 제한 하는 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1676">Creates a rectangle that bounds a complete ellipse.</span></span>  
  
-   <span data-ttu-id="db630-1677">(X 축)에 상대적인 그리기를 시작 하는 각도 정의 및 그리기 (시계 방향으로 모두)입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1677">Defines the angles at which to start drawing (relative to the x axis) and through which to draw (both in a clockwise direction).</span></span>  
  
-   <span data-ttu-id="db630-1678">화면에는 원형 세그먼트를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1678">Draws the pie segment to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#73](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#73)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#73](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#73)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#73](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#73)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1679"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1679"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawPie">
      <MemberSignature Language="C#" Value="public void DrawPie (System.Drawing.Pen pen, System.Drawing.RectangleF rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawPie(class System.Drawing.Pen pen, valuetype System.Drawing.RectangleF rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawPie(System::Drawing::Pen ^ pen, System::Drawing::RectangleF rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.DrawPie : System.Drawing.Pen * System.Drawing.RectangleF * single * single -&gt; unit" Usage="graphics.DrawPie (pen, rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-1680">원형 도형의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1680"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the pie shape.</span></span></param>
        <param name="rect"><span data-ttu-id="db630-1681">원형 도형이 발생된 타원을 정의하는 경계 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1681"><see cref="T:System.Drawing.RectangleF" /> structure that represents the bounding rectangle that defines the ellipse from which the pie shape comes.</span></span></param>
        <param name="startAngle"><span data-ttu-id="db630-1682">x-축에서 원형 도형의 첫째 면까지 시계 방향으로 측정한 각도(단위: 도)입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1682">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="db630-1683"><paramref name="startAngle" /> 매개 변수에서 원형 도형의 둘째 면까지 시계 방향으로 측정한 각도(단위: 도)입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1683">Angle measured in degrees clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie shape.</span></span></param>
        <summary><span data-ttu-id="db630-1684"><see cref="T:System.Drawing.RectangleF" /> 구조체와 두 개의 방사형 선에 의해 지정된 타원으로 정의되는 원형 도형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1684">Draws a pie shape defined by an ellipse specified by a <see cref="T:System.Drawing.RectangleF" /> structure and two radial lines.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1685">이 메서드는 호의 끝점을 사용 하 여 교차 하는 두 개의 방사형 선에 타원의 호에서 정의 되는 원형 도형을 그립니다. 줄임표는 경계 사각형에 의해 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1685">This method draws a pie shape defined by an arc of an ellipse and the two radial lines that intersect with the endpoints of the arc. The ellipse is defined by the bounding rectangle.</span></span> <span data-ttu-id="db630-1686">원형 도형이 정의한 두 개의 방사형 선에 구성 합니다 `startAngle` 및 `sweepAngle` 매개 변수 및 타원을 사용 하 여 방사형 해당 줄의 교차 부분 간에 호입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1686">The pie shape consists of the two radial lines defined by the `startAngle` and `sweepAngle` parameters, and the arc between the intersections of those radial lines with the ellipse.</span></span>  
  
 <span data-ttu-id="db630-1687">경우는 `sweepAngle` 매개 변수 보다 작거나-360도 360도 보다 크거나, 360도 또는-360도 각각 것 처럼 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1687">If the `sweepAngle` parameter is greater than 360 degrees or less than -360 degrees, it is treated as if it were 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1688">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1688">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1689">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1689">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1690">Black 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1690">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="db630-1691">완전 한 타원을 제한 하는 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1691">Creates a rectangle that bounds a complete ellipse.</span></span>  
  
-   <span data-ttu-id="db630-1692">(X 축)에 상대적인 그리기를 시작 하는 각도 정의 및 그리기 (시계 방향으로 모두)입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1692">Defines the angles at which to start drawing (relative to the x axis) and through which to draw (both in a clockwise direction).</span></span>  
  
-   <span data-ttu-id="db630-1693">화면에는 원형 세그먼트를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1693">Draws the pie segment to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#74](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#74)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#74](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#74)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#74](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#74)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1694"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1694"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawPie">
      <MemberSignature Language="C#" Value="public void DrawPie (System.Drawing.Pen pen, int x, int y, int width, int height, int startAngle, int sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawPie(class System.Drawing.Pen pen, int32 x, int32 y, int32 width, int32 height, int32 startAngle, int32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawPie(System::Drawing::Pen ^ pen, int x, int y, int width, int height, int startAngle, int sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.DrawPie : System.Drawing.Pen * int * int * int * int * int * int -&gt; unit" Usage="graphics.DrawPie (pen, x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="startAngle" Type="System.Int32" />
        <Parameter Name="sweepAngle" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-1695">원형 도형의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1695"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the pie shape.</span></span></param>
        <param name="x"><span data-ttu-id="db630-1696">원형 도형이 발생된 타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1696">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</span></span></param>
        <param name="y"><span data-ttu-id="db630-1697">원형 도형이 발생된 타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1697">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</span></span></param>
        <param name="width"><span data-ttu-id="db630-1698">원형 도형이 발생된 타원을 정의하는 경계 사각형의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1698">Width of the bounding rectangle that defines the ellipse from which the pie shape comes.</span></span></param>
        <param name="height"><span data-ttu-id="db630-1699">원형 도형이 발생된 타원을 정의하는 경계 사각형의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1699">Height of the bounding rectangle that defines the ellipse from which the pie shape comes.</span></span></param>
        <param name="startAngle"><span data-ttu-id="db630-1700">x-축에서 원형 도형의 첫째 면까지 시계 방향으로 측정한 각도(단위: 도)입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1700">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="db630-1701"><paramref name="startAngle" /> 매개 변수에서 원형 도형의 둘째 면까지 시계 방향으로 측정한 각도(단위: 도)입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1701">Angle measured in degrees clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie shape.</span></span></param>
        <summary><span data-ttu-id="db630-1702">좌표 쌍, 너비, 높이 및 두 개의 방사형 선에 의해 지정된 타원으로 정의되는 원형 도형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1702">Draws a pie shape defined by an ellipse specified by a coordinate pair, a width, a height, and two radial lines.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1703">이 메서드는 호의 끝점을 사용 하 여 교차 하는 두 개의 방사형 선에 타원의 호에서 정의 되는 원형 도형을 그립니다. 타원에 설명 된 경계 사각형에 의해 정의 됩니다 합니다 `x`, `y`를 `width`, 및 `height` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1703">This method draws a pie shape defined by an arc of an ellipse and the two radial lines that intersect with the endpoints of the arc. The ellipse is defined by the bounding rectangle described by the `x`, `y`, `width`, and `height` parameters.</span></span> <span data-ttu-id="db630-1704">원형 도형이 정의한 두 개의 방사형 선에 구성 합니다 `startAngle` 및 `sweepAngle` 매개 변수 및 타원을 사용 하 여 방사형 해당 줄의 교차 부분 간에 호입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1704">The pie shape consists of the two radial lines defined by the `startAngle` and `sweepAngle` parameters, and the arc between the intersections of those radial lines with the ellipse.</span></span>  
  
 <span data-ttu-id="db630-1705">경우는 `sweepAngle` 매개 변수 보다 작거나-360도 360도 보다 크거나, 360도 또는-360도 각각 것 처럼 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1705">If the `sweepAngle` parameter is greater than 360 degrees or less than -360 degrees, it is treated as if it were 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1706">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1706">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1707">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1707">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1708">Black 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1708">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="db630-1709">완전 한 타원을 제한 하는 사각형의 크기와 위치를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1709">Creates the position and size of a rectangle that bounds a complete ellipse.</span></span>  
  
-   <span data-ttu-id="db630-1710">(X 축)에 상대적인 그리기를 시작 하는 각도 정의 및 그리기 (시계 방향으로 모두)입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1710">Defines the angles at which to start drawing (relative to the x axis) and through which to draw (both in a clockwise direction).</span></span>  
  
-   <span data-ttu-id="db630-1711">화면에는 원형 도형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1711">Draws the pie shape to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#75](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#75)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#75](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#75)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#75](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#75)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1712"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1712"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawPie">
      <MemberSignature Language="C#" Value="public void DrawPie (System.Drawing.Pen pen, float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawPie(class System.Drawing.Pen pen, float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawPie(System::Drawing::Pen ^ pen, float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.DrawPie : System.Drawing.Pen * single * single * single * single * single * single -&gt; unit" Usage="graphics.DrawPie (pen, x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-1713">원형 도형의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1713"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the pie shape.</span></span></param>
        <param name="x"><span data-ttu-id="db630-1714">원형 도형이 발생된 타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1714">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</span></span></param>
        <param name="y"><span data-ttu-id="db630-1715">원형 도형이 발생된 타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1715">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</span></span></param>
        <param name="width"><span data-ttu-id="db630-1716">원형 도형이 발생된 타원을 정의하는 경계 사각형의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1716">Width of the bounding rectangle that defines the ellipse from which the pie shape comes.</span></span></param>
        <param name="height"><span data-ttu-id="db630-1717">원형 도형이 발생된 타원을 정의하는 경계 사각형의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1717">Height of the bounding rectangle that defines the ellipse from which the pie shape comes.</span></span></param>
        <param name="startAngle"><span data-ttu-id="db630-1718">x-축에서 원형 도형의 첫째 면까지 시계 방향으로 측정한 각도(단위: 도)입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1718">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="db630-1719"><paramref name="startAngle" /> 매개 변수에서 원형 도형의 둘째 면까지 시계 방향으로 측정한 각도(단위: 도)입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1719">Angle measured in degrees clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie shape.</span></span></param>
        <summary><span data-ttu-id="db630-1720">좌표 쌍, 너비, 높이 및 두 개의 방사형 선에 의해 지정된 타원으로 정의되는 원형 도형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1720">Draws a pie shape defined by an ellipse specified by a coordinate pair, a width, a height, and two radial lines.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1721">이 메서드는 호의 끝점을 사용 하 여 교차 하는 두 개의 방사형 선에 타원의 호에서 정의 되는 원형 도형을 그립니다. 타원에 설명 된 경계 사각형에 의해 정의 됩니다 합니다 `x`, `y`를 `width`, 및 `height` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1721">This method draws a pie shape defined by an arc of an ellipse and the two radial lines that intersect with the endpoints of the arc. The ellipse is defined by the bounding rectangle described by the `x`, `y`, `width`, and `height` parameters.</span></span> <span data-ttu-id="db630-1722">원형 도형이 정의한 두 개의 방사형 선에 구성 합니다 `startAngle` 및 `sweepAngle` 매개 변수 및 타원을 사용 하 여 방사형 해당 줄의 교차 부분 간에 호입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1722">The pie shape consists of the two radial lines defined by the `startAngle` and `sweepAngle` parameters, and the arc between the intersections of those radial lines with the ellipse.</span></span>  
  
 <span data-ttu-id="db630-1723">경우는 `sweepAngle` 매개 변수 보다 작거나-360도 360도 보다 크거나, 360도 또는-360도 각각 것 처럼 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1723">If the `sweepAngle` parameter is greater than 360 degrees or less than -360 degrees, it is treated as if it were 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1724">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1724">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1725">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1725">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1726">Black 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1726">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="db630-1727">완전 한 타원을 제한 하는 사각형의 크기와 위치를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1727">Creates the position and size of a rectangle that bounds a complete ellipse.</span></span>  
  
-   <span data-ttu-id="db630-1728">(X 축)에 상대적인 그리기를 시작 하는 각도 정의 및 그리기 (시계 방향으로 모두)입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1728">Defines the angles at which to start drawing (relative to the x axis) and through which to draw (both in a clockwise direction).</span></span>  
  
-   <span data-ttu-id="db630-1729">화면에는 원형 세그먼트를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1729">Draws the pie segment to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#76](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#76)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#76](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#76)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#76](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#76)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1730"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1730"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawPolygon">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db630-1731"><see cref="T:System.Drawing.Point" /> 구조체의 배열에 의해 정의된 다각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1731">Draws a polygon defined by an array of <see cref="T:System.Drawing.Point" /> structures.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawPolygon">
      <MemberSignature Language="C#" Value="public void DrawPolygon (System.Drawing.Pen pen, System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawPolygon(class System.Drawing.Pen pen, valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawPolygon(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.DrawPolygon : System.Drawing.Pen * System.Drawing.Point[] -&gt; unit" Usage="graphics.DrawPolygon (pen, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-1732">다각형의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1732"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the polygon.</span></span></param>
        <param name="points"><span data-ttu-id="db630-1733">다각형의 꼭짓점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1733">Array of <see cref="T:System.Drawing.Point" /> structures that represent the vertices of the polygon.</span></span></param>
        <summary><span data-ttu-id="db630-1734"><see cref="T:System.Drawing.Point" /> 구조체의 배열에 의해 정의된 다각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1734">Draws a polygon defined by an array of <see cref="T:System.Drawing.Point" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1735">배열에서 두 연속 점 쌍 마다 다각형의 한 쪽을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1735">Every pair of two consecutive points in the array specifies a side of the polygon.</span></span> <span data-ttu-id="db630-1736">또한 배열의 첫 번째 지점과 마지막 지점 교차 하지 않을 경우 다각형의 마지막 쪽을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1736">In addition, if the last point and the first point of the array do not coincide, they specify the last side of the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1737">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1737">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1738">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1738">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1739">Black 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1739">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="db630-1740">다각형의 꼭지점에 대 한 7 개 요소의 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1740">Creates an array of seven points for the vertices of the polygon.</span></span>  
  
-   <span data-ttu-id="db630-1741">화면에 다각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1741">Draws the polygon to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#78](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#78)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#78](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#78)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#78](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#78)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1742"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1742"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawPolygon">
      <MemberSignature Language="C#" Value="public void DrawPolygon (System.Drawing.Pen pen, System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawPolygon(class System.Drawing.Pen pen, valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawPolygon(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.DrawPolygon : System.Drawing.Pen * System.Drawing.PointF[] -&gt; unit" Usage="graphics.DrawPolygon (pen, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-1743">다각형의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1743"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the polygon.</span></span></param>
        <param name="points"><span data-ttu-id="db630-1744">다각형의 꼭짓점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1744">Array of <see cref="T:System.Drawing.PointF" /> structures that represent the vertices of the polygon.</span></span></param>
        <summary><span data-ttu-id="db630-1745"><see cref="T:System.Drawing.PointF" /> 구조체의 배열에 의해 정의된 다각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1745">Draws a polygon defined by an array of <see cref="T:System.Drawing.PointF" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1746">배열에서 두 연속 점 쌍 마다 다각형의 한 쪽을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1746">Every pair of two consecutive points in the array specifies a side of the polygon.</span></span> <span data-ttu-id="db630-1747">또한 마지막 점과 배열 요소의 첫 번째 일치 하지 않는 경우 다각형의 마지막 쪽을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1747">In addition, if the last point and the first of the array point do not coincide, they specify the last side of the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1748">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1748">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1749">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1749">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1750">Black 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1750">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="db630-1751">다각형의 꼭지점에 대 한 7 개 요소의 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1751">Creates an array of seven points for the vertices of the polygon.</span></span>  
  
-   <span data-ttu-id="db630-1752">화면에 다각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1752">Draws the polygon to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#77](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#77)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#77](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#77)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#77](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#77)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1753"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1753"><paramref name="pen" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="db630-1754">또는</span><span class="sxs-lookup"><span data-stu-id="db630-1754">-or-</span></span> 
 <span data-ttu-id="db630-1755"><paramref name="points" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1755"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawRectangle">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db630-1756">좌표 쌍, 너비 및 높이에 의해 지정된 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1756">Draws a rectangle specified by a coordinate pair, a width, and a height.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawRectangle">
      <MemberSignature Language="C#" Value="public void DrawRectangle (System.Drawing.Pen pen, System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawRectangle(class System.Drawing.Pen pen, valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawRectangle(System::Drawing::Pen ^ pen, System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.DrawRectangle : System.Drawing.Pen * System.Drawing.Rectangle -&gt; unit" Usage="graphics.DrawRectangle (pen, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-1757">사각형의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1757">A <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the rectangle.</span></span></param>
        <param name="rect"><span data-ttu-id="db630-1758">그릴 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1758">A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle to draw.</span></span></param>
        <summary><span data-ttu-id="db630-1759"><see cref="T:System.Drawing.Rectangle" /> 구조체에 의해 지정된 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1759">Draws a rectangle specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1760">그리는 방법에 대 한 자세한를 <xref:System.Drawing.RectangleF>를 참조 하세요 <xref:System.Drawing.Graphics.DrawRectangles%28System.Drawing.Pen%2CSystem.Drawing.RectangleF%5B%5D%29>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1760">For information about how to draw a <xref:System.Drawing.RectangleF>, see <xref:System.Drawing.Graphics.DrawRectangles%28System.Drawing.Pen%2CSystem.Drawing.RectangleF%5B%5D%29>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1761">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1761">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1762">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1762">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1763">Black 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1763">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="db630-1764">사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1764">Creates a rectangle.</span></span>  
  
-   <span data-ttu-id="db630-1765">화면에 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1765">Draws the rectangle to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#79](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#79)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#79](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#79)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#79](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#79)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1766"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1766"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawRectangle">
      <MemberSignature Language="C#" Value="public void DrawRectangle (System.Drawing.Pen pen, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawRectangle(class System.Drawing.Pen pen, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawRectangle(System::Drawing::Pen ^ pen, int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.DrawRectangle : System.Drawing.Pen * int * int * int * int -&gt; unit" Usage="graphics.DrawRectangle (pen, x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-1767">사각형의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1767"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the rectangle.</span></span></param>
        <param name="x"><span data-ttu-id="db630-1768">그릴 사각형의 왼쪽 위 모퉁이의 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1768">The x-coordinate of the upper-left corner of the rectangle to draw.</span></span></param>
        <param name="y"><span data-ttu-id="db630-1769">그릴 사각형의 왼쪽 위 모퉁이의 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1769">The y-coordinate of the upper-left corner of the rectangle to draw.</span></span></param>
        <param name="width"><span data-ttu-id="db630-1770">그릴 사각형의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1770">Width of the rectangle to draw.</span></span></param>
        <param name="height"><span data-ttu-id="db630-1771">그릴 사각형의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1771">Height of the rectangle to draw.</span></span></param>
        <summary><span data-ttu-id="db630-1772">좌표 쌍, 너비 및 높이에 의해 지정된 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1772">Draws a rectangle specified by a coordinate pair, a width, and a height.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1773">그리는 방법에 대 한 자세한를 <xref:System.Drawing.RectangleF>를 참조 하세요 <xref:System.Drawing.Graphics.DrawRectangles%28System.Drawing.Pen%2CSystem.Drawing.RectangleF%5B%5D%29>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1773">For information about how to draw a <xref:System.Drawing.RectangleF>, see <xref:System.Drawing.Graphics.DrawRectangles%28System.Drawing.Pen%2CSystem.Drawing.RectangleF%5B%5D%29>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1774">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1774">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1775">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1775">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1776">Black 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1776">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="db630-1777">사각형의 크기와 위치를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1777">Creates the position and size of a rectangle.</span></span>  
  
-   <span data-ttu-id="db630-1778">화면에 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1778">Draws the rectangle to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#80](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#80)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#80](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#80)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#80](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#80)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1779"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1779"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawRectangle">
      <MemberSignature Language="C#" Value="public void DrawRectangle (System.Drawing.Pen pen, float x, float y, float width, float height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawRectangle(class System.Drawing.Pen pen, float32 x, float32 y, float32 width, float32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawRectangle(System::Drawing::Pen ^ pen, float x, float y, float width, float height);" />
      <MemberSignature Language="F#" Value="member this.DrawRectangle : System.Drawing.Pen * single * single * single * single -&gt; unit" Usage="graphics.DrawRectangle (pen, x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-1780">사각형의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1780">A <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the rectangle.</span></span></param>
        <param name="x"><span data-ttu-id="db630-1781">그릴 사각형의 왼쪽 위 모퉁이의 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1781">The x-coordinate of the upper-left corner of the rectangle to draw.</span></span></param>
        <param name="y"><span data-ttu-id="db630-1782">그릴 사각형의 왼쪽 위 모퉁이의 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1782">The y-coordinate of the upper-left corner of the rectangle to draw.</span></span></param>
        <param name="width"><span data-ttu-id="db630-1783">그릴 사각형의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1783">The width of the rectangle to draw.</span></span></param>
        <param name="height"><span data-ttu-id="db630-1784">그릴 사각형의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1784">The height of the rectangle to draw.</span></span></param>
        <summary><span data-ttu-id="db630-1785">좌표 쌍, 너비 및 높이에 의해 지정된 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1785">Draws a rectangle specified by a coordinate pair, a width, and a height.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1786">그리는 방법에 대 한 자세한를 <xref:System.Drawing.RectangleF>를 참조 하세요 <xref:System.Drawing.Graphics.DrawRectangles%28System.Drawing.Pen%2CSystem.Drawing.RectangleF%5B%5D%29>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1786">For information about how to draw a <xref:System.Drawing.RectangleF>, see <xref:System.Drawing.Graphics.DrawRectangles%28System.Drawing.Pen%2CSystem.Drawing.RectangleF%5B%5D%29>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1787">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1787">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1788">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1788">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1789">Black 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1789">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="db630-1790">사각형의 크기와 위치를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1790">Creates the position and size of a rectangle.</span></span>  
  
-   <span data-ttu-id="db630-1791">화면에 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1791">Draws the rectangle to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#81](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#81)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#81](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#81)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#81](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#81)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1792"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1792"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawRectangles">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db630-1793"><see cref="T:System.Drawing.Rectangle" /> 구조체에 의해 지정된 일련의 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1793">Draws a series of rectangles specified by <see cref="T:System.Drawing.Rectangle" /> structures.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawRectangles">
      <MemberSignature Language="C#" Value="public void DrawRectangles (System.Drawing.Pen pen, System.Drawing.Rectangle[] rects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawRectangles(class System.Drawing.Pen pen, valuetype System.Drawing.Rectangle[] rects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawRectangles(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::Rectangle&gt; ^ rects);" />
      <MemberSignature Language="F#" Value="member this.DrawRectangles : System.Drawing.Pen * System.Drawing.Rectangle[] -&gt; unit" Usage="graphics.DrawRectangles (pen, rects)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="rects" Type="System.Drawing.Rectangle[]" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-1794">사각형 윤곽선의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1794"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the outlines of the rectangles.</span></span></param>
        <param name="rects"><span data-ttu-id="db630-1795">그릴 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1795">Array of <see cref="T:System.Drawing.Rectangle" /> structures that represent the rectangles to draw.</span></span></param>
        <summary><span data-ttu-id="db630-1796"><see cref="T:System.Drawing.Rectangle" /> 구조체에 의해 지정된 일련의 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1796">Draws a series of rectangles specified by <see cref="T:System.Drawing.Rectangle" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="db630-1797">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1797">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1798">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1798">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1799">Black 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1799">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="db630-1800">세 개의 사각형의 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1800">Creates an array of three rectangles.</span></span>  
  
-   <span data-ttu-id="db630-1801">화면에 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1801">Draws the rectangles to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#82](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#82)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#82](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#82)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#82](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#82)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1802"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1802"><paramref name="pen" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="db630-1803">또는</span><span class="sxs-lookup"><span data-stu-id="db630-1803">-or-</span></span> 
 <span data-ttu-id="db630-1804"><paramref name="rects" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1804"><paramref name="rects" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="db630-1805"><paramref name="rects" />이 길이가 0인 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1805"><paramref name="rects" /> is a zero-length array.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawRectangles">
      <MemberSignature Language="C#" Value="public void DrawRectangles (System.Drawing.Pen pen, System.Drawing.RectangleF[] rects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawRectangles(class System.Drawing.Pen pen, valuetype System.Drawing.RectangleF[] rects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawRectangles(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::RectangleF&gt; ^ rects);" />
      <MemberSignature Language="F#" Value="member this.DrawRectangles : System.Drawing.Pen * System.Drawing.RectangleF[] -&gt; unit" Usage="graphics.DrawRectangles (pen, rects)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="rects" Type="System.Drawing.RectangleF[]" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="db630-1806">사각형 윤곽선의 색, 너비 및 스타일을 결정하는 <see cref="T:System.Drawing.Pen" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1806"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the outlines of the rectangles.</span></span></param>
        <param name="rects"><span data-ttu-id="db630-1807">그릴 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1807">Array of <see cref="T:System.Drawing.RectangleF" /> structures that represent the rectangles to draw.</span></span></param>
        <summary><span data-ttu-id="db630-1808"><see cref="T:System.Drawing.RectangleF" /> 구조체에 의해 지정된 일련의 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1808">Draws a series of rectangles specified by <see cref="T:System.Drawing.RectangleF" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="db630-1809">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1809">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1810">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1810">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1811">Black 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1811">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="db630-1812">세 개의 사각형의 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1812">Creates an array of three rectangles.</span></span>  
  
-   <span data-ttu-id="db630-1813">화면에 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1813">Draws the rectangles to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#83](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#83)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#83](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#83)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#83](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#83)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1814"><paramref name="pen" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1814"><paramref name="pen" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="db630-1815">또는</span><span class="sxs-lookup"><span data-stu-id="db630-1815">-or-</span></span> 
 <span data-ttu-id="db630-1816"><paramref name="rects" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1816"><paramref name="rects" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="db630-1817"><paramref name="rects" />이 길이가 0인 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1817"><paramref name="rects" /> is a zero-length array.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawString">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db630-1818">지정된 위치에 지정된 <see cref="T:System.Drawing.Brush" /> 및 <see cref="T:System.Drawing.Font" /> 개체로 지정된 텍스트 문자열을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1818">Draws the specified text string at the specified location with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="T:System.Drawing.Font" /> objects.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawString">
      <MemberSignature Language="C#" Value="public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, System.Drawing.PointF point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawString(string s, class System.Drawing.Font font, class System.Drawing.Brush brush, valuetype System.Drawing.PointF point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawString(System::String ^ s, System::Drawing::Font ^ font, System::Drawing::Brush ^ brush, System::Drawing::PointF point);" />
      <MemberSignature Language="F#" Value="member this.DrawString : string * System.Drawing.Font * System.Drawing.Brush * System.Drawing.PointF -&gt; unit" Usage="graphics.DrawString (s, font, brush, point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="point" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="db630-1819">그릴 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1819">String to draw.</span></span></param>
        <param name="font"><span data-ttu-id="db630-1820">문자열의 텍스트 서식을 정의하는 <see cref="T:System.Drawing.Font" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1820"><see cref="T:System.Drawing.Font" /> that defines the text format of the string.</span></span></param>
        <param name="brush"><span data-ttu-id="db630-1821">그려지는 텍스트의 색과 질감을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1821"><see cref="T:System.Drawing.Brush" /> that determines the color and texture of the drawn text.</span></span></param>
        <param name="point"><span data-ttu-id="db630-1822">그려지는 텍스트의 왼쪽 위 모퉁이를 지정하는 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1822"><see cref="T:System.Drawing.PointF" /> structure that specifies the upper-left corner of the drawn text.</span></span></param>
        <summary><span data-ttu-id="db630-1823">지정된 위치에 지정된 <see cref="T:System.Drawing.Brush" /> 및 <see cref="T:System.Drawing.Font" /> 개체로 지정된 텍스트 문자열을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1823">Draws the specified text string at the specified location with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="T:System.Drawing.Font" /> objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="db630-1824">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1824">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1825">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1825">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1826">그릴 텍스트 문자열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1826">Creates a text string to draw.</span></span>  
  
-   <span data-ttu-id="db630-1827">글꼴을 Arial (16pt)으로 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1827">Defines the font as Arial (16pt).</span></span>  
  
-   <span data-ttu-id="db630-1828">사용 하 여 그리는 단색의 검정 브러시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1828">Creates a solid, black brush to draw with.</span></span>  
  
-   <span data-ttu-id="db630-1829">왼쪽 위 모퉁이에서 텍스트를 그릴 수 있는 지점을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1829">Creates a point for the upper-left corner at which to draw the text.</span></span>  
  
-   <span data-ttu-id="db630-1830">글꼴, 브러시 및 대상 지점을 사용 하 여 화면에 문자열을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1830">Draws the string to the screen using the font, brush, and destination point.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#84](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#84)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#84](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#84)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#84](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#84)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1831"><paramref name="brush" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1831"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="db630-1832">또는</span><span class="sxs-lookup"><span data-stu-id="db630-1832">-or-</span></span> 
 <span data-ttu-id="db630-1833"><paramref name="s" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1833"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color)" />
        <related type="Article" href="~/docs/framework/winforms/advanced/using-fonts-and-text.md"><span data-ttu-id="db630-1834">글꼴 및 텍스트 사용</span><span class="sxs-lookup"><span data-stu-id="db630-1834">Using Fonts and Text</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawString">
      <MemberSignature Language="C#" Value="public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, System.Drawing.RectangleF layoutRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawString(string s, class System.Drawing.Font font, class System.Drawing.Brush brush, valuetype System.Drawing.RectangleF layoutRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawString(System::String ^ s, System::Drawing::Font ^ font, System::Drawing::Brush ^ brush, System::Drawing::RectangleF layoutRectangle);" />
      <MemberSignature Language="F#" Value="member this.DrawString : string * System.Drawing.Font * System.Drawing.Brush * System.Drawing.RectangleF -&gt; unit" Usage="graphics.DrawString (s, font, brush, layoutRectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="layoutRectangle" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="db630-1835">그릴 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1835">String to draw.</span></span></param>
        <param name="font"><span data-ttu-id="db630-1836">문자열의 텍스트 서식을 정의하는 <see cref="T:System.Drawing.Font" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1836"><see cref="T:System.Drawing.Font" /> that defines the text format of the string.</span></span></param>
        <param name="brush"><span data-ttu-id="db630-1837">그려지는 텍스트의 색과 질감을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1837"><see cref="T:System.Drawing.Brush" /> that determines the color and texture of the drawn text.</span></span></param>
        <param name="layoutRectangle"><span data-ttu-id="db630-1838">그려지는 텍스트의 위치를 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1838"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the location of the drawn text.</span></span></param>
        <summary><span data-ttu-id="db630-1839">지정된 사각형에 지정된 <see cref="T:System.Drawing.Brush" /> 및 <see cref="T:System.Drawing.Font" /> 개체로 지정된 텍스트 문자열을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1839">Draws the specified text string in the specified rectangle with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="T:System.Drawing.Font" /> objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1840">나타내는 텍스트를 `s` 매개 변수를 나타내는 사각형 안에 그릴는 `layoutRectangle` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1840">The text represented by the `s` parameter is drawn inside the rectangle represented by the `layoutRectangle` parameter.</span></span> <span data-ttu-id="db630-1841">텍스트 사각형에 맞지 않으면 가장 가까운 단어에서 잘립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1841">If the text does not fit inside the rectangle, it is truncated at the nearest word.</span></span> <span data-ttu-id="db630-1842">사각형 내부에 문자열을 그리는 방법을 조작 하는 <xref:System.Drawing.Graphics.DrawString%2A> 오버 로드를 <xref:System.Drawing.StringFormat>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1842">To further manipulate how the string is drawn inside the rectangle use the <xref:System.Drawing.Graphics.DrawString%2A> overload that takes a <xref:System.Drawing.StringFormat>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1843">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1843">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1844">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1844">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1845">그릴 텍스트 문자열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1845">Creates a text string to draw.</span></span>  
  
-   <span data-ttu-id="db630-1846">글꼴을 Arial (16pt)으로 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1846">Defines the font as Arial (16pt).</span></span>  
  
-   <span data-ttu-id="db630-1847">사용 하 여 그리는 단색의 검정 브러시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1847">Creates a solid, black brush to draw with.</span></span>  
  
-   <span data-ttu-id="db630-1848">텍스트를 그릴 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1848">Creates a rectangle in which to draw the text.</span></span>  
  
-   <span data-ttu-id="db630-1849">화면에 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1849">Draws the rectangle to the screen.</span></span>  
  
-   <span data-ttu-id="db630-1850">글꼴, 브러시 및 대상 사각형을 사용 하 여 화면에 문자열을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1850">Draws the string to the screen using the font, brush, and destination rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#86](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#86)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#86](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#86)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#86](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#86)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1851"><paramref name="brush" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1851"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="db630-1852">또는</span><span class="sxs-lookup"><span data-stu-id="db630-1852">-or-</span></span> 
 <span data-ttu-id="db630-1853"><paramref name="s" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1853"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color)" />
        <related type="Article" href="~/docs/framework/winforms/advanced/using-fonts-and-text.md"><span data-ttu-id="db630-1854">글꼴 및 텍스트 사용</span><span class="sxs-lookup"><span data-stu-id="db630-1854">Using Fonts and Text</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawString">
      <MemberSignature Language="C#" Value="public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, System.Drawing.PointF point, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawString(string s, class System.Drawing.Font font, class System.Drawing.Brush brush, valuetype System.Drawing.PointF point, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawString(System::String ^ s, System::Drawing::Font ^ font, System::Drawing::Brush ^ brush, System::Drawing::PointF point, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.DrawString : string * System.Drawing.Font * System.Drawing.Brush * System.Drawing.PointF * System.Drawing.StringFormat -&gt; unit" Usage="graphics.DrawString (s, font, brush, point, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="point" Type="System.Drawing.PointF" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="db630-1855">그릴 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1855">String to draw.</span></span></param>
        <param name="font"><span data-ttu-id="db630-1856">문자열의 텍스트 서식을 정의하는 <see cref="T:System.Drawing.Font" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1856"><see cref="T:System.Drawing.Font" /> that defines the text format of the string.</span></span></param>
        <param name="brush"><span data-ttu-id="db630-1857">그려지는 텍스트의 색과 질감을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1857"><see cref="T:System.Drawing.Brush" /> that determines the color and texture of the drawn text.</span></span></param>
        <param name="point"><span data-ttu-id="db630-1858">그려지는 텍스트의 왼쪽 위 모퉁이를 지정하는 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1858"><see cref="T:System.Drawing.PointF" /> structure that specifies the upper-left corner of the drawn text.</span></span></param>
        <param name="format"><span data-ttu-id="db630-1859">그려지는 텍스트에 적용되는 줄 간격 및 맞춤과 같은 서식 특성을 지정하는 <see cref="T:System.Drawing.StringFormat" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1859"><see cref="T:System.Drawing.StringFormat" /> that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</span></span></param>
        <summary><span data-ttu-id="db630-1860">지정된 위치에 지정된 <see cref="T:System.Drawing.StringFormat" />의 서식 특성을 사용하여 지정된 <see cref="T:System.Drawing.Brush" /> 및 <see cref="T:System.Drawing.Font" /> 개체로 지정된 텍스트 문자열을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1860">Draws the specified text string at the specified location with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="T:System.Drawing.Font" /> objects using the formatting attributes of the specified <see cref="T:System.Drawing.StringFormat" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="db630-1861">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1861">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1862">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1862">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1863">그릴 텍스트 문자열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1863">Creates a text string to draw.</span></span>  
  
-   <span data-ttu-id="db630-1864">글꼴을 Arial (16pt)으로 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1864">Defines the font as Arial (16pt).</span></span>  
  
-   <span data-ttu-id="db630-1865">사용 하 여 그리는 단색의 검정 브러시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1865">Creates a solid, black brush to draw with.</span></span>  
  
-   <span data-ttu-id="db630-1866">왼쪽 위 모퉁이에서 텍스트를 그릴 수 있는 지점을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1866">Creates a point for the upper-left corner at which to draw the text.</span></span>  
  
-   <span data-ttu-id="db630-1867">세로로 그릴 문자열의 서식을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1867">Sets the format of the string to draw vertically.</span></span>  
  
-   <span data-ttu-id="db630-1868">글꼴, 브러시, 대상 지점 및 형식을 사용 하 여 화면에 문자열을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1868">Draws the string to the screen using the font, brush, destination point, and format.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#85](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#85)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#85](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#85)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#85](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#85)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1869"><paramref name="brush" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1869"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="db630-1870">또는</span><span class="sxs-lookup"><span data-stu-id="db630-1870">-or-</span></span> 
 <span data-ttu-id="db630-1871"><paramref name="s" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1871"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color)" />
        <related type="Article" href="~/docs/framework/winforms/advanced/using-fonts-and-text.md"><span data-ttu-id="db630-1872">글꼴 및 텍스트 사용</span><span class="sxs-lookup"><span data-stu-id="db630-1872">Using Fonts and Text</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawString">
      <MemberSignature Language="C#" Value="public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, System.Drawing.RectangleF layoutRectangle, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawString(string s, class System.Drawing.Font font, class System.Drawing.Brush brush, valuetype System.Drawing.RectangleF layoutRectangle, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawString(System::String ^ s, System::Drawing::Font ^ font, System::Drawing::Brush ^ brush, System::Drawing::RectangleF layoutRectangle, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.DrawString : string * System.Drawing.Font * System.Drawing.Brush * System.Drawing.RectangleF * System.Drawing.StringFormat -&gt; unit" Usage="graphics.DrawString (s, font, brush, layoutRectangle, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="layoutRectangle" Type="System.Drawing.RectangleF" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="db630-1873">그릴 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1873">String to draw.</span></span></param>
        <param name="font"><span data-ttu-id="db630-1874">문자열의 텍스트 서식을 정의하는 <see cref="T:System.Drawing.Font" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1874"><see cref="T:System.Drawing.Font" /> that defines the text format of the string.</span></span></param>
        <param name="brush"><span data-ttu-id="db630-1875">그려지는 텍스트의 색과 질감을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1875"><see cref="T:System.Drawing.Brush" /> that determines the color and texture of the drawn text.</span></span></param>
        <param name="layoutRectangle"><span data-ttu-id="db630-1876">그려지는 텍스트의 위치를 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1876"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the location of the drawn text.</span></span></param>
        <param name="format"><span data-ttu-id="db630-1877">그려지는 텍스트에 적용되는 줄 간격 및 맞춤과 같은 서식 특성을 지정하는 <see cref="T:System.Drawing.StringFormat" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1877"><see cref="T:System.Drawing.StringFormat" /> that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</span></span></param>
        <summary><span data-ttu-id="db630-1878">지정된 사각형에 지정된 <see cref="T:System.Drawing.StringFormat" />의 서식 특성을 사용하여 지정된 <see cref="T:System.Drawing.Brush" /> 및 <see cref="T:System.Drawing.Font" /> 개체로 지정된 텍스트 문자열을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1878">Draws the specified text string in the specified rectangle with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="T:System.Drawing.Font" /> objects using the formatting attributes of the specified <see cref="T:System.Drawing.StringFormat" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1879">나타내는 텍스트를 `s` 매개 변수를 나타내는 사각형 안에 그릴는 `layoutRectangle` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1879">The text represented by the `s` parameter is drawn inside the rectangle represented by the `layoutRectangle` parameter.</span></span> <span data-ttu-id="db630-1880">텍스트 사각형에 맞지 않으면 잘립니다 가장 가까운 단어에서 지정 하지 않으면는 `format` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1880">If the text does not fit inside the rectangle, it is truncated at the nearest word, unless otherwise specified with the `format` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1881">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1881">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1882">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1882">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1883">그릴 텍스트 문자열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1883">Creates a text string to draw.</span></span>  
  
-   <span data-ttu-id="db630-1884">글꼴을 Arial (16pt)으로 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1884">Defines the font as Arial (16pt).</span></span>  
  
-   <span data-ttu-id="db630-1885">사용 하 여 그리는 단색의 검정 브러시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1885">Creates a solid, black brush to draw with.</span></span>  
  
-   <span data-ttu-id="db630-1886">텍스트를 그릴 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1886">Creates a rectangle in which to draw the text.</span></span>  
  
-   <span data-ttu-id="db630-1887">화면에 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1887">Draws the rectangle to the screen.</span></span>  
  
-   <span data-ttu-id="db630-1888">사각형 내에서 가운데 문자열의 서식을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1888">Sets the format of the string to center it within the rectangle.</span></span>  
  
-   <span data-ttu-id="db630-1889">글꼴, 브러시 및 대상 사각형을 사용 하 여 화면에 문자열을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1889">Draws the string to the screen using the font, brush, and destination rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#87](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#87)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#87](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#87)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#87](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#87)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1890"><paramref name="brush" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1890"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="db630-1891">또는</span><span class="sxs-lookup"><span data-stu-id="db630-1891">-or-</span></span> 
 <span data-ttu-id="db630-1892"><paramref name="s" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1892"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color)" />
        <related type="Article" href="~/docs/framework/winforms/advanced/using-fonts-and-text.md"><span data-ttu-id="db630-1893">글꼴 및 텍스트 사용</span><span class="sxs-lookup"><span data-stu-id="db630-1893">Using Fonts and Text</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawString">
      <MemberSignature Language="C#" Value="public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawString(string s, class System.Drawing.Font font, class System.Drawing.Brush brush, float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawString(System::String ^ s, System::Drawing::Font ^ font, System::Drawing::Brush ^ brush, float x, float y);" />
      <MemberSignature Language="F#" Value="member this.DrawString : string * System.Drawing.Font * System.Drawing.Brush * single * single -&gt; unit" Usage="graphics.DrawString (s, font, brush, x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="db630-1894">그릴 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1894">String to draw.</span></span></param>
        <param name="font"><span data-ttu-id="db630-1895">문자열의 텍스트 서식을 정의하는 <see cref="T:System.Drawing.Font" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1895"><see cref="T:System.Drawing.Font" /> that defines the text format of the string.</span></span></param>
        <param name="brush"><span data-ttu-id="db630-1896">그려지는 텍스트의 색과 질감을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1896"><see cref="T:System.Drawing.Brush" /> that determines the color and texture of the drawn text.</span></span></param>
        <param name="x"><span data-ttu-id="db630-1897">그려지는 텍스트의 왼쪽 위 모퉁이에 대한 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1897">The x-coordinate of the upper-left corner of the drawn text.</span></span></param>
        <param name="y"><span data-ttu-id="db630-1898">그려지는 텍스트의 왼쪽 위 모퉁이에 대한 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1898">The y-coordinate of the upper-left corner of the drawn text.</span></span></param>
        <summary><span data-ttu-id="db630-1899">지정된 위치에 지정된 <see cref="T:System.Drawing.Brush" /> 및 <see cref="T:System.Drawing.Font" /> 개체로 지정된 텍스트 문자열을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1899">Draws the specified text string at the specified location with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="T:System.Drawing.Font" /> objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="db630-1900">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1900">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1901">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1901">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1902">그릴 텍스트 문자열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1902">Creates a text string to draw.</span></span>  
  
-   <span data-ttu-id="db630-1903">글꼴을 Arial (16pt)으로 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1903">Defines the font as Arial (16pt).</span></span>  
  
-   <span data-ttu-id="db630-1904">사용 하 여 그리는 black 단색 브러시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1904">Creates a solid black brush to draw with.</span></span>  
  
-   <span data-ttu-id="db630-1905">왼쪽 위 모퉁이에서 텍스트를 그릴 수 있는 지점을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1905">Creates a point for the upper-left corner at which to draw the text.</span></span>  
  
-   <span data-ttu-id="db630-1906">글꼴, 브러시 및 대상 지점을 사용 하 여 화면에 문자열을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1906">Draws the string to the screen using the font, brush, and destination point.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#88](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#88)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#88](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#88)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#88](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#88)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1907"><paramref name="brush" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1907"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="db630-1908">또는</span><span class="sxs-lookup"><span data-stu-id="db630-1908">-or-</span></span> 
 <span data-ttu-id="db630-1909"><paramref name="s" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1909"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color)" />
        <related type="Article" href="~/docs/framework/winforms/advanced/using-fonts-and-text.md"><span data-ttu-id="db630-1910">글꼴 및 텍스트 사용</span><span class="sxs-lookup"><span data-stu-id="db630-1910">Using Fonts and Text</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawString">
      <MemberSignature Language="C#" Value="public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, float x, float y, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawString(string s, class System.Drawing.Font font, class System.Drawing.Brush brush, float32 x, float32 y, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawString(System::String ^ s, System::Drawing::Font ^ font, System::Drawing::Brush ^ brush, float x, float y, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.DrawString : string * System.Drawing.Font * System.Drawing.Brush * single * single * System.Drawing.StringFormat -&gt; unit" Usage="graphics.DrawString (s, font, brush, x, y, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="db630-1911">그릴 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1911">String to draw.</span></span></param>
        <param name="font"><span data-ttu-id="db630-1912">문자열의 텍스트 서식을 정의하는 <see cref="T:System.Drawing.Font" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1912"><see cref="T:System.Drawing.Font" /> that defines the text format of the string.</span></span></param>
        <param name="brush"><span data-ttu-id="db630-1913">그려지는 텍스트의 색과 질감을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1913"><see cref="T:System.Drawing.Brush" /> that determines the color and texture of the drawn text.</span></span></param>
        <param name="x"><span data-ttu-id="db630-1914">그려지는 텍스트의 왼쪽 위 모퉁이에 대한 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1914">The x-coordinate of the upper-left corner of the drawn text.</span></span></param>
        <param name="y"><span data-ttu-id="db630-1915">그려지는 텍스트의 왼쪽 위 모퉁이에 대한 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1915">The y-coordinate of the upper-left corner of the drawn text.</span></span></param>
        <param name="format"><span data-ttu-id="db630-1916">그려지는 텍스트에 적용되는 줄 간격 및 맞춤과 같은 서식 특성을 지정하는 <see cref="T:System.Drawing.StringFormat" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1916"><see cref="T:System.Drawing.StringFormat" /> that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</span></span></param>
        <summary><span data-ttu-id="db630-1917">지정된 위치에 지정된 <see cref="T:System.Drawing.StringFormat" />의 서식 특성을 사용하여 지정된 <see cref="T:System.Drawing.Brush" /> 및 <see cref="T:System.Drawing.Font" /> 개체로 지정된 텍스트 문자열을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1917">Draws the specified text string at the specified location with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="T:System.Drawing.Font" /> objects using the formatting attributes of the specified <see cref="T:System.Drawing.StringFormat" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="db630-1918">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1918">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1919">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1919">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1920">그릴 텍스트 문자열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1920">Creates a text string to draw.</span></span>  
  
-   <span data-ttu-id="db630-1921">글꼴을 Arial (16pt)으로 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1921">Defines the font as Arial (16pt).</span></span>  
  
-   <span data-ttu-id="db630-1922">사용 하 여 그리는 단색의 검정 브러시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1922">Creates a solid, black brush to draw with.</span></span>  
  
-   <span data-ttu-id="db630-1923">그릴 텍스트를 왼쪽 위 모퉁이 대 한 점의 좌표를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1923">Creates the coordinates of a point for the upper-left corner at which to draw the text.</span></span>  
  
-   <span data-ttu-id="db630-1924">세로로 그릴 문자열의 형식을 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1924">Sets the format of the string to draw vertically</span></span>  
  
-   <span data-ttu-id="db630-1925">글꼴, 브러시, 대상 지점 및 형식을 사용 하 여 화면에 문자열을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1925">Draws the string to the screen using the font, brush, destination point, and format.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#89](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#89)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#89](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#89)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#89](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#89)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-1926"><paramref name="brush" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1926"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="db630-1927">또는</span><span class="sxs-lookup"><span data-stu-id="db630-1927">-or-</span></span> 
 <span data-ttu-id="db630-1928"><paramref name="s" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-1928"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color)" />
        <related type="Article" href="~/docs/framework/winforms/advanced/using-fonts-and-text.md"><span data-ttu-id="db630-1929">글꼴 및 텍스트 사용</span><span class="sxs-lookup"><span data-stu-id="db630-1929">Using Fonts and Text</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndContainer">
      <MemberSignature Language="C#" Value="public void EndContainer (System.Drawing.Drawing2D.GraphicsContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndContainer(class System.Drawing.Drawing2D.GraphicsContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndContainer (container As GraphicsContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndContainer(System::Drawing::Drawing2D::GraphicsContainer ^ container);" />
      <MemberSignature Language="F#" Value="member this.EndContainer : System.Drawing.Drawing2D.GraphicsContainer -&gt; unit" Usage="graphics.EndContainer container" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Drawing.Drawing2D.GraphicsContainer" />
      </Parameters>
      <Docs>
        <param name="container"><span data-ttu-id="db630-1930">이 메서드가 복원하는 컨테이너를 나타내는 <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1930"><see cref="T:System.Drawing.Drawing2D.GraphicsContainer" /> that represents the container this method restores.</span></span></param>
        <summary><span data-ttu-id="db630-1931">현재 그래픽 컨테이너를 닫고 <see cref="M:System.Drawing.Graphics.BeginContainer" /> 메서드에 대한 호출에 의해 저장된 상태로 이 <see cref="T:System.Drawing.Graphics" />의 상태를 복원합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1931">Closes the current graphics container and restores the state of this <see cref="T:System.Drawing.Graphics" /> to the state saved by a call to the <see cref="M:System.Drawing.Graphics.BeginContainer" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1932">이 메서드를 사용 합니다 <xref:System.Drawing.Graphics.BeginContainer%2A> 중첩 된 graphics 컨테이너를 만드는 방법.</span><span class="sxs-lookup"><span data-stu-id="db630-1932">Use this method with the <xref:System.Drawing.Graphics.BeginContainer%2A> method to create nested graphics containers.</span></span> <span data-ttu-id="db630-1933">Graphics 컨테이너에는 변환, 클리핑 영역 및 렌더링 속성과 같은 그래픽 상태를 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1933">Graphics containers retain graphics state, such as transformation, clipping region, and rendering properties.</span></span>  
  
 <span data-ttu-id="db630-1934">호출 하는 경우는 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드를 <xref:System.Drawing.Graphics>, 상태를 포함 하는 정보 블록이 <xref:System.Drawing.Graphics> 스택에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1934">When you call the <xref:System.Drawing.Graphics.BeginContainer%2A> method of a <xref:System.Drawing.Graphics>, an information block that holds the state of the <xref:System.Drawing.Graphics> is put on a stack.</span></span> <span data-ttu-id="db630-1935">합니다 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드가 반환 되는 <xref:System.Drawing.Drawing2D.GraphicsContainer> 정보 블록을 식별 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1935">The <xref:System.Drawing.Graphics.BeginContainer%2A> method returns a <xref:System.Drawing.Drawing2D.GraphicsContainer> that identifies that information block.</span></span> <span data-ttu-id="db630-1936">식별 하는 개체를 전달 하는 경우는 <xref:System.Drawing.Graphics.EndContainer%2A> 메서드 정보 블록 스택에서 제거 되 고 복원 하는 데 사용 되는 <xref:System.Drawing.Graphics> 당시 시점의 상태로 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1936">When you pass the identifying object to the <xref:System.Drawing.Graphics.EndContainer%2A> method, the information block is removed from the stack and is used to restore the <xref:System.Drawing.Graphics> to the state it was in at the time of the <xref:System.Drawing.Graphics.BeginContainer%2A> method call.</span></span>  
  
 <span data-ttu-id="db630-1937">컨테이너는 중첩 될 수 있습니다. 즉, 호출할 수 있습니다 합니다 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드를 호출 하기 전에 여러 번의 <xref:System.Drawing.Graphics.EndContainer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="db630-1937">Containers can be nested; that is, you can call the <xref:System.Drawing.Graphics.BeginContainer%2A> method several times before you call the <xref:System.Drawing.Graphics.EndContainer%2A> method.</span></span> <span data-ttu-id="db630-1938">호출할 때마다 합니다 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드 정보 블록을 스택에 배치 되 고 수신 하는 <xref:System.Drawing.Drawing2D.GraphicsContainer> 정보 블록에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1938">Each time you call the <xref:System.Drawing.Graphics.BeginContainer%2A> method, an information block is put on the stack, and you receive a <xref:System.Drawing.Drawing2D.GraphicsContainer> for the information block.</span></span> <span data-ttu-id="db630-1939">해당 개체를 하나 전달 하는 경우는 <xref:System.Drawing.Graphics.EndContainer%2A> 메서드를를 <xref:System.Drawing.Graphics> 당시 시점의 상태로 반환 됩니다 합니다 <xref:System.Drawing.Graphics.BeginContainer%2A> 는 특정 반환 하는 메서드 호출 <xref:System.Drawing.Drawing2D.GraphicsContainer>.</span><span class="sxs-lookup"><span data-stu-id="db630-1939">When you pass one of those objects to the <xref:System.Drawing.Graphics.EndContainer%2A> method, the <xref:System.Drawing.Graphics> is returned to the state it was in at the time of the <xref:System.Drawing.Graphics.BeginContainer%2A> method call that returned that particular <xref:System.Drawing.Drawing2D.GraphicsContainer>.</span></span> <span data-ttu-id="db630-1940">정보 블록에서 스택에 배치 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드 호출 스택에서 제거 되 고 그 후 해당 스택에 배치 하는 모든 정보 블록 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드 호출도 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1940">The information block placed on the stack by that <xref:System.Drawing.Graphics.BeginContainer%2A> method call is removed from the stack, and all information blocks placed on that stack after that <xref:System.Drawing.Graphics.BeginContainer%2A> method call are also removed.</span></span>  
  
 <span data-ttu-id="db630-1941">에 대 한 호출을 <xref:System.Drawing.Graphics.Save%2A> 메서드 호출 스택의 동일 위치 정보 블록을 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="db630-1941">Calls to the <xref:System.Drawing.Graphics.Save%2A> method place information blocks on the same stack as calls to the <xref:System.Drawing.Graphics.BeginContainer%2A> method.</span></span> <span data-ttu-id="db630-1942">처럼를 <xref:System.Drawing.Graphics.EndContainer%2A> 메서드 호출을 이룹니다를 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드 호출을 <xref:System.Drawing.Graphics.Restore%2A> 메서드 호출을 이룹니다를 <xref:System.Drawing.Graphics.Save%2A> 메서드 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1942">Just as an <xref:System.Drawing.Graphics.EndContainer%2A> method call is paired with a <xref:System.Drawing.Graphics.BeginContainer%2A> method call, a <xref:System.Drawing.Graphics.Restore%2A> method call is paired with a <xref:System.Drawing.Graphics.Save%2A> method call.</span></span>  
  
 <span data-ttu-id="db630-1943">호출 하는 경우는 <xref:System.Drawing.Graphics.EndContainer%2A> 메서드를 스택에 배치 된 모든 정보 블록 (여는 <xref:System.Drawing.Graphics.Save%2A> 메서드 또는 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드) 해당 호출 후는 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드 스택에서 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1943">When you call the <xref:System.Drawing.Graphics.EndContainer%2A> method, all information blocks placed on the stack (by the <xref:System.Drawing.Graphics.Save%2A> method or by the <xref:System.Drawing.Graphics.BeginContainer%2A> method) after the corresponding call to the <xref:System.Drawing.Graphics.BeginContainer%2A> method are removed from the stack.</span></span> <span data-ttu-id="db630-1944">마찬가지로 호출 하는 경우는 <xref:System.Drawing.Graphics.Restore%2A> 메서드를 스택에 배치 된 모든 정보 블록 (여는 <xref:System.Drawing.Graphics.Save%2A> 메서드 또는 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드) 해당 호출 후는 <xref:System.Drawing.Graphics.Save%2A> 메서드 스택에서 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1944">Likewise, when you call the <xref:System.Drawing.Graphics.Restore%2A> method, all information blocks placed on the stack (by the <xref:System.Drawing.Graphics.Save%2A> method or by the <xref:System.Drawing.Graphics.BeginContainer%2A> method) after the corresponding call to the <xref:System.Drawing.Graphics.Save%2A> method are removed from the stack.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1945">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1945">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-1946">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1946">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-1947">새 그래픽 컨테이너를 열고 이전 컨테이너를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1947">Opens a new graphics container and saves the old container.</span></span>  
  
-   <span data-ttu-id="db630-1948">컨테이너에서 세계 좌표를 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1948">Translates the world coordinates in the container.</span></span>  
  
-   <span data-ttu-id="db630-1949">빨간색 사각형을 채우는 (의 좌표를 변환 합니다) 새 컨테이너입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1949">Fills a red rectangle in the (translated coordinates of the) new container.</span></span>  
  
-   <span data-ttu-id="db630-1950">새 컨테이너를 닫고 저장된 된 컨테이너를 복원 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1950">Closes the new container and restores the saved container.</span></span>  
  
-   <span data-ttu-id="db630-1951">저장된 된 컨테이너의 녹색 사각형 (변환된 된 좌표)을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1951">Fills a green rectangle (to the untranslated coordinates) of the saved container.</span></span>  
  
 <span data-ttu-id="db630-1952">결과 동일한 크기의 빨간색 사각형 위에 놓입니다 녹색 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1952">The result is a green rectangle that overlies a red rectangle of the same size.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#90](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#90)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#90](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#90)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#90](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#90)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateMetafile">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db630-1953">지정된 지점에 표시하기 위해 지정된 <see cref="T:System.Drawing.Imaging.Metafile" />의 레코드를 콜백 메서드에 한 번에 하나씩 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1953">Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Point destPoint, class System.Drawing.Graphics/EnumerateMetafileProc callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::Point destPoint, System::Drawing::Graphics::EnumerateMetafileProc ^ callback);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Point * System.Drawing.Graphics.EnumerateMetafileProc -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoint, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoint" Type="System.Drawing.Point" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="db630-1954">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1954"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoint"><span data-ttu-id="db630-1955">그려지는 메타파일의 왼쪽 위 모퉁이 위치를 지정하는 <see cref="T:System.Drawing.Point" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1955"><see cref="T:System.Drawing.Point" /> structure that specifies the location of the upper-left corner of the drawn metafile.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-1956">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1956"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <summary><span data-ttu-id="db630-1957">지정된 지점에 표시하기 위해 지정된 <see cref="T:System.Drawing.Imaging.Metafile" />의 레코드를 콜백 메서드에 한 번에 하나씩 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1957">Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1958">이 메서드는 지정 된 메타 파일에 포함 된 레코드를 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1958">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="db630-1959">각 레코드는 개별적으로 지정 된 콜백 메서드는 `callback` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1959">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="db630-1960">일반적으로 콜백 메서드 호출을 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> "재생" 또는 그리기, 레코드에 대 한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1960">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="db630-1961">콜백 메서드를 호출 하는 경우 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>를 호출 하 여 이렇게 해야 합니다 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> 특정 메서드의 <xref:System.Drawing.Imaging.Metafile> 열거 되.</span><span class="sxs-lookup"><span data-stu-id="db630-1961">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1962">다음 코드 예제에서는 폼을 만듭니다는 <xref:System.Drawing.Imaging.Metafile> private 멤버 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1962">The following code example creates a form that has a <xref:System.Drawing.Imaging.Metafile> as one of its private members.</span></span> <span data-ttu-id="db630-1963"><xref:System.Windows.Forms.Control.OnPaint%2A> 메서드 호출 <xref:System.Drawing.Graphics.EnumerateMetafile%2A>를 호출 하는 폼의 `MetafileCallback` 메타 파일의 각 레코드에 대 한 메서드.</span><span class="sxs-lookup"><span data-stu-id="db630-1963">The <xref:System.Windows.Forms.Control.OnPaint%2A> method calls <xref:System.Drawing.Graphics.EnumerateMetafile%2A>, which calls the form's `MetafileCallback` method for each record in the metafile.</span></span> <span data-ttu-id="db630-1964">`MetafileCallback` 메서드는 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1964">The `MetafileCallback` method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method.</span></span> <span data-ttu-id="db630-1965">있음을 합니다 `MetafileCallback` 로 레코드 데이터를 수신 하는 메서드는 <xref:System.IntPtr>, 하지만 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> 메서드는 바이트 배열에서 레코드 데이터를 필요로 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1965">Notice that the `MetafileCallback` method receives the record data as an <xref:System.IntPtr>, but the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method expects the record data to be a byte array.</span></span> <span data-ttu-id="db630-1966">에 대 한 호출 <xref:System.Runtime.InteropServices.Marshal.Copy%2A> 에 전달할 수 있도록 레코드 데이터를 바이트 배열로 복사 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1966">The call to <xref:System.Runtime.InteropServices.Marshal.Copy%2A> copies the record data to a byte array so that it can be passed to <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>.</span></span>  
  
 [!code-csharp[System.Drawing.Graphics.EnumerateMetafile#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Graphics.EnumerateMetafile/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.Graphics.EnumerateMetafile#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Graphics.EnumerateMetafile/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-1967">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-1967">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Point[] destPoints, class System.Drawing.Graphics/EnumerateMetafileProc callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, cli::array &lt;System::Drawing::Point&gt; ^ destPoints, System::Drawing::Graphics::EnumerateMetafileProc ^ callback);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Point[] * System.Drawing.Graphics.EnumerateMetafileProc -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoints, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoints" Type="System.Drawing.Point[]" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="db630-1968">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1968"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoints"><span data-ttu-id="db630-1969">그려지는 메타파일의 크기와 위치를 결정하는 평행 사변형이 정의된 세 개의 <see cref="T:System.Drawing.Point" /> 구조체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1969">Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-1970">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1970"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <summary><span data-ttu-id="db630-1971">지정된 <see cref="T:System.Drawing.Imaging.Metafile" />의 레코드를 지정된 평행 사변형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1971">Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1972">이 메서드는 지정 된 메타 파일에 포함 된 레코드를 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1972">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="db630-1973">각 레코드는 개별적으로 지정 된 콜백 메서드는 `callback` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1973">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="db630-1974">일반적으로 콜백 메서드 호출을 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> "재생" 또는 그리기, 레코드에 대 한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1974">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="db630-1975">콜백 메서드를 호출 하는 경우 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>를 호출 하 여 이렇게 해야 합니다 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> 특정 메서드의 <xref:System.Drawing.Imaging.Metafile> 열거 되.</span><span class="sxs-lookup"><span data-stu-id="db630-1975">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1976">코드 예제를 보려면 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="db630-1976">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-1977">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-1977">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.PointF destPoint, class System.Drawing.Graphics/EnumerateMetafileProc callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::PointF destPoint, System::Drawing::Graphics::EnumerateMetafileProc ^ callback);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.PointF * System.Drawing.Graphics.EnumerateMetafileProc -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoint, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoint" Type="System.Drawing.PointF" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="db630-1978">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1978"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoint"><span data-ttu-id="db630-1979">그려지는 메타파일의 왼쪽 위 모퉁이 위치를 지정하는 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1979"><see cref="T:System.Drawing.PointF" /> structure that specifies the location of the upper-left corner of the drawn metafile.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-1980">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1980"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <summary><span data-ttu-id="db630-1981">지정된 지점에 표시하기 위해 지정된 <see cref="T:System.Drawing.Imaging.Metafile" />의 레코드를 콜백 메서드에 한 번에 하나씩 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1981">Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1982">이 메서드는 지정 된 메타 파일에 포함 된 레코드를 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1982">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="db630-1983">각 레코드는 개별적으로 지정 된 콜백 메서드는 `callback` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1983">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="db630-1984">일반적으로 콜백 메서드 호출을 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> "재생" 또는 그리기, 레코드에 대 한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1984">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="db630-1985">콜백 메서드를 호출 하는 경우 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>를 호출 하 여 이렇게 해야 합니다 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> 특정 메서드의 <xref:System.Drawing.Imaging.Metafile> 열거 되.</span><span class="sxs-lookup"><span data-stu-id="db630-1985">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-1986">코드 예제를 보려면 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="db630-1986">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-1987">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-1987">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.PointF[] destPoints, class System.Drawing.Graphics/EnumerateMetafileProc callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::Graphics::EnumerateMetafileProc ^ callback);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.PointF[] * System.Drawing.Graphics.EnumerateMetafileProc -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoints, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="db630-1988">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1988"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoints"><span data-ttu-id="db630-1989">그려지는 메타파일의 크기와 위치를 결정하는 평행 사변형이 정의된 세 개의 <see cref="T:System.Drawing.PointF" /> 구조체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1989">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-1990">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1990"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <summary><span data-ttu-id="db630-1991">지정된 <see cref="T:System.Drawing.Imaging.Metafile" />의 레코드를 지정된 평행 사변형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1991">Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-1992">이 메서드는 지정 된 메타 파일에 포함 된 레코드를 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1992">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="db630-1993">각 레코드는 개별적으로 지정 된 콜백 메서드는 `callback` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1993">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="db630-1994">일반적으로 콜백 메서드 호출을 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> "재생" 또는 그리기, 레코드에 대 한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1994">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="db630-1995">콜백 메서드를 호출 하는 경우 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>를 호출 하 여 이렇게 해야 합니다 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> 특정 메서드의 <xref:System.Drawing.Imaging.Metafile> 열거 되.</span><span class="sxs-lookup"><span data-stu-id="db630-1995">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="db630-1996">`destPoints` 세 지점이 평행 사변형의 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1996">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="db630-1997">세 가지 <xref:System.Drawing.PointF> 구조는 평행 사변형의 왼쪽 위, 오른쪽 위 및 왼쪽 아래 모서리를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1997">The three <xref:System.Drawing.PointF> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="db630-1998">네 번째 지점은 평행 사변형을 구성 하기 위해 처음 3 개에서 추정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1998">The fourth point is extrapolated from the first three to form a parallelogram.</span></span> <span data-ttu-id="db630-1999">그려지는 메타 파일은 평행 사변형에 맞추기 위해 크기가 조정 되 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-1999">The drawn metafile is scaled and sheared to fit the parallelogram.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2000">코드 예제를 보려면 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="db630-2000">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-2001">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-2001">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Graphics.EnumerateMetafileProc callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Rectangle destRect, class System.Drawing.Graphics/EnumerateMetafileProc callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::Rectangle destRect, System::Drawing::Graphics::EnumerateMetafileProc ^ callback);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Rectangle * System.Drawing.Graphics.EnumerateMetafileProc -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destRect, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="db630-2002">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2002"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destRect"><span data-ttu-id="db630-2003">그려지는 메타파일의 위치와 크기를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2003"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn metafile.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-2004">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2004"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <summary><span data-ttu-id="db630-2005">지정된 <see cref="T:System.Drawing.Imaging.Metafile" />의 레코드를 지정된 사각형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2005">Sends the records of the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2006">이 메서드는 지정 된 메타 파일에 포함 된 레코드를 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2006">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="db630-2007">각 레코드는 개별적으로 지정 된 콜백 메서드는 `callback` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2007">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="db630-2008">일반적으로 콜백 메서드 호출을 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> "재생" 또는 그리기, 레코드에 대 한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2008">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="db630-2009">콜백 메서드를 호출 하는 경우 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>를 호출 하 여 이렇게 해야 합니다 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> 특정 메서드의 <xref:System.Drawing.Imaging.Metafile> 열거 되.</span><span class="sxs-lookup"><span data-stu-id="db630-2009">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2010">코드 예제를 보려면 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="db630-2010">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-2011">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-2011">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.Graphics.EnumerateMetafileProc callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.RectangleF destRect, class System.Drawing.Graphics/EnumerateMetafileProc callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::RectangleF destRect, System::Drawing::Graphics::EnumerateMetafileProc ^ callback);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.RectangleF * System.Drawing.Graphics.EnumerateMetafileProc -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destRect, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="db630-2012">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2012"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destRect"><span data-ttu-id="db630-2013">그려지는 메타파일의 위치와 크기를 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2013"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn metafile.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-2014">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2014"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <summary><span data-ttu-id="db630-2015">지정된 <see cref="T:System.Drawing.Imaging.Metafile" />의 레코드를 지정된 사각형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2015">Sends the records of the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2016">이 메서드는 지정 된 메타 파일에 포함 된 레코드를 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2016">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="db630-2017">각 레코드는 개별적으로 지정 된 콜백 메서드는 `callback` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2017">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="db630-2018">일반적으로 콜백 메서드 호출을 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> "재생" 또는 그리기, 레코드에 대 한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2018">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="db630-2019">콜백 메서드를 호출 하는 경우 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>를 호출 하 여 이렇게 해야 합니다 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> 특정 메서드의 <xref:System.Drawing.Imaging.Metafile> 열거 되.</span><span class="sxs-lookup"><span data-stu-id="db630-2019">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2020">코드 예제를 보려면 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="db630-2020">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-2021">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-2021">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Point destPoint, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::Point destPoint, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Point * System.Drawing.Graphics.EnumerateMetafileProc * nativeint -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoint, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoint" Type="System.Drawing.Point" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="db630-2022">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2022"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoint"><span data-ttu-id="db630-2023">그려지는 메타파일의 왼쪽 위 모퉁이 위치를 지정하는 <see cref="T:System.Drawing.Point" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2023"><see cref="T:System.Drawing.Point" /> structure that specifies the location of the upper-left corner of the drawn metafile.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-2024">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2024"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="db630-2025">필수적이지만 무시되는 내부 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2025">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="db630-2026">이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" />를 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2026">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <summary><span data-ttu-id="db630-2027">지정된 지점에 표시하기 위해 지정된 <see cref="T:System.Drawing.Imaging.Metafile" />의 레코드를 콜백 메서드에 한 번에 하나씩 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2027">Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2028">이 메서드는 지정 된 메타 파일에 포함 된 레코드를 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2028">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="db630-2029">각 레코드는 개별적으로 지정 된 콜백 메서드는 `callback` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2029">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="db630-2030">일반적으로 콜백 메서드 호출을 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> "재생" 또는 그리기, 레코드에 대 한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2030">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="db630-2031">콜백 메서드를 호출 하는 경우 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>를 호출 하 여 이렇게 해야 합니다 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> 특정 메서드의 <xref:System.Drawing.Imaging.Metafile> 열거 되.</span><span class="sxs-lookup"><span data-stu-id="db630-2031">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2032">코드 예제를 보려면 <xref:System.Drawing.Graphics.EnumerateMetafile%2A>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="db630-2032">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-2033">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-2033">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Point[] destPoints, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, cli::array &lt;System::Drawing::Point&gt; ^ destPoints, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Point[] * System.Drawing.Graphics.EnumerateMetafileProc * nativeint -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoints, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoints" Type="System.Drawing.Point[]" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="db630-2034">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2034"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoints"><span data-ttu-id="db630-2035">그려지는 메타파일의 크기와 위치를 결정하는 평행 사변형이 정의된 세 개의 <see cref="T:System.Drawing.Point" /> 구조체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2035">Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-2036">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2036"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="db630-2037">필수적이지만 무시되는 내부 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2037">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="db630-2038">이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" />를 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2038">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <summary><span data-ttu-id="db630-2039">지정된 <see cref="T:System.Drawing.Imaging.Metafile" />의 레코드를 지정된 평행 사변형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2039">Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2040">이 메서드는 지정 된 메타 파일에 포함 된 레코드를 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2040">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="db630-2041">각 레코드는 개별적으로 지정 된 콜백 메서드는 `callback` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2041">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="db630-2042">일반적으로 콜백 메서드 호출을 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> "재생" 또는 그리기, 레코드에 대 한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2042">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="db630-2043">콜백 메서드를 호출 하는 경우 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>를 호출 하 여 이렇게 해야 합니다 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> 특정 메서드의 <xref:System.Drawing.Imaging.Metafile> 열거 되.</span><span class="sxs-lookup"><span data-stu-id="db630-2043">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2044">코드 예제를 보려면 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="db630-2044">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.PointF destPoint, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::PointF destPoint, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.PointF * System.Drawing.Graphics.EnumerateMetafileProc * nativeint -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoint, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoint" Type="System.Drawing.PointF" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="db630-2045">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2045"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoint"><span data-ttu-id="db630-2046">그려지는 메타파일의 왼쪽 위 모퉁이 위치를 지정하는 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2046"><see cref="T:System.Drawing.PointF" /> structure that specifies the location of the upper-left corner of the drawn metafile.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-2047">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2047"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="db630-2048">필수적이지만 무시되는 내부 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2048">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="db630-2049">이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" />를 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2049">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <summary><span data-ttu-id="db630-2050">지정된 지점에 표시하기 위해 지정된 <see cref="T:System.Drawing.Imaging.Metafile" />의 레코드를 콜백 메서드에 한 번에 하나씩 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2050">Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2051">이 메서드는 지정 된 메타 파일에 포함 된 레코드를 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2051">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="db630-2052">각 레코드는 개별적으로 지정 된 콜백 메서드는 `callback` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2052">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="db630-2053">일반적으로 콜백 메서드 호출을 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> "재생" 또는 그리기, 레코드에 대 한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2053">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="db630-2054">콜백 메서드를 호출 하는 경우 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>를 호출 하 여 이렇게 해야 합니다 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> 특정 메서드의 <xref:System.Drawing.Imaging.Metafile> 열거 되.</span><span class="sxs-lookup"><span data-stu-id="db630-2054">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2055">코드 예제를 보려면 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="db630-2055">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-2056">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-2056">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.PointF[] destPoints, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.PointF[] * System.Drawing.Graphics.EnumerateMetafileProc * nativeint -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoints, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="db630-2057">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2057"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoints"><span data-ttu-id="db630-2058">그려지는 메타파일의 크기와 위치를 결정하는 평행 사변형이 정의된 세 개의 <see cref="T:System.Drawing.PointF" /> 구조체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2058">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-2059">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2059"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="db630-2060">필수적이지만 무시되는 내부 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2060">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="db630-2061">이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" />를 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2061">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <summary><span data-ttu-id="db630-2062">지정된 <see cref="T:System.Drawing.Imaging.Metafile" />의 레코드를 지정된 평행 사변형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2062">Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2063">이 메서드는 지정 된 메타 파일에 포함 된 레코드를 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2063">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="db630-2064">각 레코드는 개별적으로 지정 된 콜백 메서드는 `callback` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2064">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="db630-2065">일반적으로 콜백 메서드 호출을 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> "재생" 또는 그리기, 레코드에 대 한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2065">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="db630-2066">콜백 메서드를 호출 하는 경우 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>를 호출 하 여 이렇게 해야 합니다 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> 특정 메서드의 <xref:System.Drawing.Imaging.Metafile> 열거 되.</span><span class="sxs-lookup"><span data-stu-id="db630-2066">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="db630-2067">`destPoints` 세 지점이 평행 사변형의 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2067">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="db630-2068">세 가지 <xref:System.Drawing.PointF> 구조는 평행 사변형의 왼쪽 위, 오른쪽 위 및 왼쪽 아래 모서리를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2068">The three <xref:System.Drawing.PointF> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="db630-2069">네 번째 지점은 평행 사변형을 구성 하기 위해 처음 3 개에서 추정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2069">The fourth point is extrapolated from the first three to form a parallelogram.</span></span> <span data-ttu-id="db630-2070">그려지는 메타 파일은 평행 사변형에 맞추기 위해 크기가 조정 되 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2070">The drawn metafile is scaled and sheared to fit the parallelogram.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2071">코드 예제를 보려면 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="db630-2071">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-2072">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-2072">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Rectangle destRect, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::Rectangle destRect, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Rectangle * System.Drawing.Graphics.EnumerateMetafileProc * nativeint -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destRect, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="db630-2073">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2073"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destRect"><span data-ttu-id="db630-2074">그려지는 메타파일의 위치와 크기를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2074"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn metafile.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-2075">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2075"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="db630-2076">필수적이지만 무시되는 내부 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2076">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="db630-2077">이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" />를 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2077">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <summary><span data-ttu-id="db630-2078">지정된 <see cref="T:System.Drawing.Imaging.Metafile" />의 레코드를 지정된 사각형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2078">Sends the records of the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2079">이 메서드는 지정 된 메타 파일에 포함 된 레코드를 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2079">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="db630-2080">각 레코드는 개별적으로 지정 된 콜백 메서드는 `callback` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2080">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="db630-2081">일반적으로 콜백 메서드 호출을 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> "재생" 또는 그리기, 레코드에 대 한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2081">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="db630-2082">콜백 메서드를 호출 하는 경우 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>를 호출 하 여 이렇게 해야 합니다 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> 특정 메서드의 <xref:System.Drawing.Imaging.Metafile> 열거 되.</span><span class="sxs-lookup"><span data-stu-id="db630-2082">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2083">코드 예제를 보려면 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="db630-2083">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-2084">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-2084">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.RectangleF destRect, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::RectangleF destRect, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.RectangleF * System.Drawing.Graphics.EnumerateMetafileProc * nativeint -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destRect, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="db630-2085">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2085"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destRect"><span data-ttu-id="db630-2086">그려지는 메타파일의 위치와 크기를 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2086"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn metafile.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-2087">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2087"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="db630-2088">필수적이지만 무시되는 내부 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2088">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="db630-2089">이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" />를 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2089">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <summary><span data-ttu-id="db630-2090">지정된 <see cref="T:System.Drawing.Imaging.Metafile" />의 레코드를 지정된 사각형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2090">Sends the records of the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2091">이 메서드는 지정 된 메타 파일에 포함 된 레코드를 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2091">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="db630-2092">각 레코드는 개별적으로 지정 된 콜백 메서드는 `callback` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2092">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="db630-2093">일반적으로 콜백 메서드 호출을 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> "재생" 또는 그리기, 레코드에 대 한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2093">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="db630-2094">콜백 메서드를 호출 하는 경우 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>를 호출 하 여 이렇게 해야 합니다 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> 특정 메서드의 <xref:System.Drawing.Imaging.Metafile> 열거 되.</span><span class="sxs-lookup"><span data-stu-id="db630-2094">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2095">코드 예제를 보려면 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="db630-2095">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-2096">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-2096">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Point destPoint, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::Point destPoint, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Point * System.Drawing.Graphics.EnumerateMetafileProc * nativeint * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoint, callback, callbackData, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoint" Type="System.Drawing.Point" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="db630-2097">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2097"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoint"><span data-ttu-id="db630-2098">그려지는 메타파일의 왼쪽 위 모퉁이 위치를 지정하는 <see cref="T:System.Drawing.Point" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2098"><see cref="T:System.Drawing.Point" /> structure that specifies the location of the upper-left corner of the drawn metafile.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-2099">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2099"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="db630-2100">필수적이지만 무시되는 내부 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2100">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="db630-2101">이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" />를 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2101">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="db630-2102">그려지는 이미지에 대한 이미지 특성 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2102"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</span></span></param>
        <summary><span data-ttu-id="db630-2103">지정된 <see cref="T:System.Drawing.Imaging.Metafile" />의 레코드를 지정된 이미지 특성으로 지정된 지점에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2103">Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point using specified image attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2104">이 메서드는 지정 된 메타 파일에 포함 된 레코드를 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2104">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="db630-2105">각 레코드는 개별적으로 지정 된 콜백 메서드는 `callback` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2105">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="db630-2106">일반적으로 콜백 메서드 호출을 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> "재생" 또는 그리기, 레코드에 대 한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2106">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="db630-2107">콜백 메서드를 호출 하는 경우 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>를 호출 하 여 이렇게 해야 합니다 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> 특정 메서드의 <xref:System.Drawing.Imaging.Metafile> 열거 되.</span><span class="sxs-lookup"><span data-stu-id="db630-2107">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2108">코드 예제를 보려면 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="db630-2108">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-2109">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-2109">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Point destPoint, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Graphics/EnumerateMetafileProc callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::Point destPoint, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Point * System.Drawing.Rectangle * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoint, srcRect, srcUnit, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoint" Type="System.Drawing.Point" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="db630-2110">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2110"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoint"><span data-ttu-id="db630-2111">그려지는 메타파일의 왼쪽 위 모퉁이 위치를 지정하는 <see cref="T:System.Drawing.Point" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2111"><see cref="T:System.Drawing.Point" /> structure that specifies the location of the upper-left corner of the drawn metafile.</span></span></param>
        <param name="srcRect"><span data-ttu-id="db630-2112">왼쪽 위 모퉁이를 기준으로 하여 그릴 메타파일의 부분을 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2112"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="db630-2113"><paramref name="srcRect" /> 매개 변수로 지정한 사각형에 포함된 메타파일의 부분을 결정하는 데 사용되는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2113">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-2114">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2114"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <summary><span data-ttu-id="db630-2115"><see cref="T:System.Drawing.Imaging.Metafile" />에서 선택한 사각형의 레코드를 지정된 지점에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2115">Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2116">이 메서드는 지정 된 메타 파일에 포함 된 레코드를 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2116">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="db630-2117">각 레코드는 개별적으로 지정 된 콜백 메서드는 `callback` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2117">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="db630-2118">일반적으로 콜백 메서드 호출을 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> "재생" 또는 그리기, 레코드에 대 한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2118">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="db630-2119">콜백 메서드를 호출 하는 경우 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>를 호출 하 여 이렇게 해야 합니다 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> 특정 메서드의 <xref:System.Drawing.Imaging.Metafile> 열거 되.</span><span class="sxs-lookup"><span data-stu-id="db630-2119">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2120">코드 예제를 보려면 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="db630-2120">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Point[] destPoints, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, cli::array &lt;System::Drawing::Point&gt; ^ destPoints, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Point[] * System.Drawing.Graphics.EnumerateMetafileProc * nativeint * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoints, callback, callbackData, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoints" Type="System.Drawing.Point[]" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="db630-2121">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2121"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoints"><span data-ttu-id="db630-2122">그려지는 메타파일의 크기와 위치를 결정하는 평행 사변형이 정의된 세 개의 <see cref="T:System.Drawing.Point" /> 구조체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2122">Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-2123">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2123"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="db630-2124">필수적이지만 무시되는 내부 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2124">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="db630-2125">이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" />를 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2125">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="db630-2126">그려지는 이미지에 대한 이미지 특성 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2126"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</span></span></param>
        <summary><span data-ttu-id="db630-2127">지정된 <see cref="T:System.Drawing.Imaging.Metafile" />의 레코드를 지정된 이미지 특성으로 지정된 평행 사변형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2127">Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram using specified image attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2128">이 메서드는 지정 된 메타 파일에 포함 된 레코드를 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2128">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="db630-2129">각 레코드는 개별적으로 지정 된 콜백 메서드는 `callback` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2129">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="db630-2130">일반적으로 콜백 메서드 호출을 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> "재생" 또는 그리기, 레코드에 대 한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2130">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="db630-2131">콜백 메서드를 호출 하는 경우 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>를 호출 하 여 이렇게 해야 합니다 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> 특정 메서드의 <xref:System.Drawing.Imaging.Metafile> 열거 되.</span><span class="sxs-lookup"><span data-stu-id="db630-2131">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="db630-2132">`destPoints` 세 지점이 평행 사변형의 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2132">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="db630-2133">세 가지 <xref:System.Drawing.Point> 구조는 평행 사변형의 왼쪽 위, 오른쪽 위 및 왼쪽 아래 모서리를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2133">The three <xref:System.Drawing.Point> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="db630-2134">네 번째 지점은 평행 사변형을 구성 하기 위해 처음 3 개에서 추정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2134">The fourth point is extrapolated from the first three to form a parallelogram.</span></span> <span data-ttu-id="db630-2135">그려지는 메타 파일은 평행 사변형에 맞추기 위해 크기가 조정 되 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2135">The drawn metafile is scaled and sheared to fit the parallelogram.</span></span>  
  
 <span data-ttu-id="db630-2136">지정 된 이미지 특성은 `imageAttr` 메타 파일 작성 된 경우 지정 된 매개 변수 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2136">The image attributes specified by the `imageAttr` parameter replace those specified when the metafile was written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2137">코드 예제를 보려면 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="db630-2137">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-2138">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-2138">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Point[] destPoints, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Graphics/EnumerateMetafileProc callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, cli::array &lt;System::Drawing::Point&gt; ^ destPoints, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Point[] * System.Drawing.Rectangle * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoints, srcRect, srcUnit, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoints" Type="System.Drawing.Point[]" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="db630-2139">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2139"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoints"><span data-ttu-id="db630-2140">그려지는 메타파일의 크기와 위치를 결정하는 평행 사변형이 정의된 세 개의 <see cref="T:System.Drawing.Point" /> 구조체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2140">Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</span></span></param>
        <param name="srcRect"><span data-ttu-id="db630-2141">왼쪽 위 모퉁이를 기준으로 하여 그릴 메타파일의 부분을 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2141"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="db630-2142"><paramref name="srcRect" /> 매개 변수로 지정한 사각형에 포함된 메타파일의 부분을 결정하는 데 사용되는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2142">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-2143">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2143"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <summary><span data-ttu-id="db630-2144"><see cref="T:System.Drawing.Imaging.Metafile" />에서 선택한 사각형의 레코드를 지정된 평행 사변형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2144">Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2145">이 메서드는 지정 된 메타 파일에 포함 된 레코드를 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2145">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="db630-2146">각 레코드는 개별적으로 지정 된 콜백 메서드는 `callback` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2146">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="db630-2147">일반적으로 콜백 메서드 호출을 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> "재생" 또는 그리기, 레코드에 대 한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2147">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="db630-2148">콜백 메서드를 호출 하는 경우 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>를 호출 하 여 이렇게 해야 합니다 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> 특정 메서드의 <xref:System.Drawing.Imaging.Metafile> 열거 되.</span><span class="sxs-lookup"><span data-stu-id="db630-2148">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="db630-2149">`destPoints` 세 지점이 평행 사변형의 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2149">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="db630-2150">세 가지 <xref:System.Drawing.Point> 구조는 평행 사변형의 왼쪽 위, 오른쪽 위 및 왼쪽 아래 모서리를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2150">The three <xref:System.Drawing.Point> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="db630-2151">네 번째 지점은 평행 사변형을 구성 하기 위해 처음 3 개에서 추정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2151">The fourth point is extrapolated from the first three to form a parallelogram.</span></span> <span data-ttu-id="db630-2152">그려지는 메타 파일은 평행 사변형에 맞추기 위해 크기가 조정 되 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2152">The drawn metafile is scaled and sheared to fit the parallelogram.</span></span>  
  
 <span data-ttu-id="db630-2153">지정 된 영역 외부에서 수행 하는 모든 그리기를 `srcRect` 매개 변수가 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2153">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2154">코드 예제를 보려면 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="db630-2154">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.PointF destPoint, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::PointF destPoint, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.PointF * System.Drawing.Graphics.EnumerateMetafileProc * nativeint * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoint, callback, callbackData, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoint" Type="System.Drawing.PointF" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="db630-2155">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2155"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoint"><span data-ttu-id="db630-2156">그려지는 메타파일의 왼쪽 위 모퉁이 위치를 지정하는 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2156"><see cref="T:System.Drawing.PointF" /> structure that specifies the location of the upper-left corner of the drawn metafile.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-2157">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2157"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="db630-2158">필수적이지만 무시되는 내부 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2158">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="db630-2159">이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" />를 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2159">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="db630-2160">그려지는 이미지에 대한 이미지 특성 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2160"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</span></span></param>
        <summary><span data-ttu-id="db630-2161">지정된 <see cref="T:System.Drawing.Imaging.Metafile" />의 레코드를 지정된 이미지 특성으로 지정된 지점에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2161">Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point using specified image attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2162">이 메서드는 지정 된 메타 파일에 포함 된 레코드를 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2162">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="db630-2163">각 레코드는 개별적으로 지정 된 콜백 메서드는 `callback` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2163">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="db630-2164">일반적으로 콜백 메서드 호출을 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> "재생" 또는 그리기, 레코드에 대 한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2164">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="db630-2165">콜백 메서드를 호출 하는 경우 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, 특정 메서드를 호출 하 여 이렇게 해야 <xref:System.Drawing.Imaging.Metafile> 열거 되는 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2165">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="db630-2166">지정 된 이미지 특성은 `imageAttr` 메타 파일 작성 된 경우 지정 된 매개 변수 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2166">The image attributes specified by the `imageAttr` parameter replace those specified when the metafile was written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2167">코드 예제를 보려면 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="db630-2167">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-2168">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-2168">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.PointF destPoint, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Graphics/EnumerateMetafileProc callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::PointF destPoint, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.PointF * System.Drawing.RectangleF * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoint, srcRect, srcUnit, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoint" Type="System.Drawing.PointF" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="db630-2169">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2169"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoint"><span data-ttu-id="db630-2170">그려지는 메타파일의 왼쪽 위 모퉁이 위치를 지정하는 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2170"><see cref="T:System.Drawing.PointF" /> structure that specifies the location of the upper-left corner of the drawn metafile.</span></span></param>
        <param name="srcRect"><span data-ttu-id="db630-2171">왼쪽 위 모퉁이를 기준으로 하여 그릴 메타파일의 부분을 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2171"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="db630-2172"><paramref name="srcRect" /> 매개 변수로 지정한 사각형에 포함된 메타파일의 부분을 결정하는 데 사용되는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2172">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-2173">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2173"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <summary><span data-ttu-id="db630-2174"><see cref="T:System.Drawing.Imaging.Metafile" />에서 선택한 사각형의 레코드를 지정된 지점에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2174">Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2175">이 메서드는 지정 된 메타 파일에 포함 된 레코드를 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2175">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="db630-2176">각 레코드는 개별적으로 지정 된 콜백 메서드는 `callback` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2176">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="db630-2177">일반적으로 콜백 메서드 호출을 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> "재생" 또는 그리기, 레코드에 대 한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2177">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="db630-2178">콜백 메서드를 호출 하는 경우 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>를 호출 하 여 이렇게 해야 합니다 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> 특정 메서드의 <xref:System.Drawing.Imaging.Metafile> 열거 되.</span><span class="sxs-lookup"><span data-stu-id="db630-2178">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="db630-2179">지정 된 영역 외부에서 수행 하는 모든 그리기를 `srcRect` 매개 변수가 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2179">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2180">코드 예제를 보려면 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="db630-2180">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.PointF[] destPoints, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.PointF[] * System.Drawing.Graphics.EnumerateMetafileProc * nativeint * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoints, callback, callbackData, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="db630-2181">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2181"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoints"><span data-ttu-id="db630-2182">그려지는 메타파일의 크기와 위치를 결정하는 평행 사변형이 정의된 세 개의 <see cref="T:System.Drawing.PointF" /> 구조체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2182">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-2183">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2183"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="db630-2184">필수적이지만 무시되는 내부 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2184">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="db630-2185">이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" />를 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2185">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="db630-2186">그려지는 이미지에 대한 이미지 특성 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2186"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</span></span></param>
        <summary><span data-ttu-id="db630-2187">지정된 <see cref="T:System.Drawing.Imaging.Metafile" />의 레코드를 지정된 이미지 특성으로 지정된 평행 사변형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2187">Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram using specified image attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2188">이 메서드는 지정 된 메타 파일에 포함 된 레코드를 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2188">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="db630-2189">각 레코드는 개별적으로 지정 된 콜백 메서드는 `callback` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2189">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="db630-2190">일반적으로 콜백 메서드 호출을 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> "재생" 또는 그리기, 레코드에 대 한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2190">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="db630-2191">콜백 메서드를 호출 하는 경우 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>를 호출 하 여 이렇게 해야 합니다 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> 특정 메서드의 <xref:System.Drawing.Imaging.Metafile> 열거 되.</span><span class="sxs-lookup"><span data-stu-id="db630-2191">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="db630-2192">`destPoints` 세 지점이 평행 사변형의 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2192">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="db630-2193">세 가지 <xref:System.Drawing.PointF> 구조는 평행 사변형의 왼쪽 위, 오른쪽 위 및 왼쪽 아래 모서리를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2193">The three <xref:System.Drawing.PointF> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="db630-2194">네 번째 지점은 평행 사변형을 구성 하기 위해 처음 3 개에서 추정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2194">The fourth point is extrapolated from the first three to form a parallelogram.</span></span> <span data-ttu-id="db630-2195">그려지는 메타 파일은 평행 사변형에 맞추기 위해 크기가 조정 되 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2195">The drawn metafile is scaled and sheared to fit the parallelogram.</span></span>  
  
 <span data-ttu-id="db630-2196">지정 된 이미지 특성은 `imageAttr` 메타 파일 작성 된 경우 지정 된 매개 변수 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2196">The image attributes specified by the `imageAttr` parameter replace those specified when the metafile was written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2197">코드 예제를 보려면 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="db630-2197">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-2198">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-2198">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Graphics/EnumerateMetafileProc callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoints, srcRect, srcUnit, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="db630-2199">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2199"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoints"><span data-ttu-id="db630-2200">그려지는 메타파일의 크기와 위치를 결정하는 평행 사변형이 정의된 세 개의 <see cref="T:System.Drawing.PointF" /> 구조체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2200">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</span></span></param>
        <param name="srcRect"><span data-ttu-id="db630-2201">왼쪽 위 모퉁이를 기준으로 하여 그릴 메타파일의 부분을 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2201"><see cref="T:System.Drawing.RectangleF" /> structures that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="db630-2202"><paramref name="srcRect" /> 매개 변수로 지정한 사각형에 포함된 메타파일의 부분을 결정하는 데 사용되는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2202">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-2203">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2203"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <summary><span data-ttu-id="db630-2204"><see cref="T:System.Drawing.Imaging.Metafile" />에서 선택한 사각형의 레코드를 지정된 평행 사변형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2204">Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2205">이 메서드는 지정 된 메타 파일에 포함 된 레코드를 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2205">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="db630-2206">각 레코드는 개별적으로 지정 된 콜백 메서드는 `callback` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2206">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="db630-2207">일반적으로 콜백 메서드 호출을 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> "재생" 또는 그리기, 레코드에 대 한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2207">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="db630-2208">콜백 메서드를 호출 하는 경우 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>를 호출 하 여 이렇게 해야 합니다 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> 특정 메서드의 <xref:System.Drawing.Imaging.Metafile> 열거 되.</span><span class="sxs-lookup"><span data-stu-id="db630-2208">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="db630-2209">`destPoints` 세 지점이 평행 사변형의 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2209">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="db630-2210">세 가지 <xref:System.Drawing.Point> 구조는 평행 사변형의 왼쪽 위, 오른쪽 위 및 왼쪽 아래 모서리를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2210">The three <xref:System.Drawing.Point> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="db630-2211">네 번째 지점은 평행 사변형을 구성 하기 위해 처음 3 개에서 추정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2211">The fourth point is extrapolated from the first three to form a parallelogram.</span></span> <span data-ttu-id="db630-2212">그려지는 메타 파일은 평행 사변형에 맞추기 위해 크기가 조정 되 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2212">The drawn metafile is scaled and sheared to fit the parallelogram.</span></span>  
  
 <span data-ttu-id="db630-2213">지정 된 영역 외부에서 수행 하는 모든 그리기를 `srcRect` 매개 변수가 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2213">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2214">코드 예제를 보려면 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="db630-2214">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-2215">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-2215">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Rectangle destRect, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::Rectangle destRect, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Rectangle * System.Drawing.Graphics.EnumerateMetafileProc * nativeint * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destRect, callback, callbackData, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="db630-2216">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2216"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destRect"><span data-ttu-id="db630-2217">그려지는 메타파일의 위치와 크기를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2217"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn metafile.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-2218">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2218"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="db630-2219">필수적이지만 무시되는 내부 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2219">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="db630-2220">이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" />를 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2220">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="db630-2221">그려지는 이미지에 대한 이미지 특성 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2221"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</span></span></param>
        <summary><span data-ttu-id="db630-2222">지정된 <see cref="T:System.Drawing.Imaging.Metafile" />의 레코드를 지정된 이미지 특성으로 지정된 사각형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2222">Sends the records of the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle using specified image attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2223">이 메서드는 지정 된 메타 파일에 포함 된 레코드를 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2223">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="db630-2224">각 레코드는 개별적으로 지정 된 콜백 메서드는 `callback` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2224">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="db630-2225">일반적으로 콜백 메서드 호출을 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> "재생" 또는 그리기, 레코드에 대 한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2225">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="db630-2226">콜백 메서드를 호출 하는 경우 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>를 호출 하 여 이렇게 해야 합니다 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> 특정 메서드의 <xref:System.Drawing.Imaging.Metafile> 열거 되.</span><span class="sxs-lookup"><span data-stu-id="db630-2226">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="db630-2227">지정 된 이미지 특성은 `imageAttr` 메타 파일 작성 된 경우 지정 된 매개 변수 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2227">The image attributes specified by the `imageAttr` parameter replace those specified when the metafile was written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2228">코드 예제를 보려면 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="db630-2228">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-2229">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-2229">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Rectangle destRect, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Graphics/EnumerateMetafileProc callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::Rectangle destRect, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Rectangle * System.Drawing.Rectangle * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destRect, srcRect, srcUnit, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="db630-2230">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2230"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destRect"><span data-ttu-id="db630-2231">그려지는 메타파일의 위치와 크기를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2231"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn metafile.</span></span></param>
        <param name="srcRect"><span data-ttu-id="db630-2232">왼쪽 위 모퉁이를 기준으로 하여 그릴 메타파일의 부분을 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2232"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="db630-2233"><paramref name="srcRect" /> 매개 변수로 지정한 사각형에 포함된 메타파일의 부분을 결정하는 데 사용되는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2233">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-2234">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2234"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <summary><span data-ttu-id="db630-2235"><see cref="T:System.Drawing.Imaging.Metafile" />에서 선택한 사각형의 레코드를 지정된 사각형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2235">Sends the records of a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2236">이 메서드는 지정 된 메타 파일에 포함 된 레코드를 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2236">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="db630-2237">각 레코드는 개별적으로 지정 된 콜백 메서드는 `callback` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2237">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="db630-2238">일반적으로 콜백 메서드 호출을 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> "재생" 또는 그리기, 레코드에 대 한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2238">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="db630-2239">콜백 메서드를 호출 하는 경우 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>를 호출 하 여 이렇게 해야 합니다 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> 특정 메서드의 <xref:System.Drawing.Imaging.Metafile> 열거 되.</span><span class="sxs-lookup"><span data-stu-id="db630-2239">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="db630-2240">지정 된 영역 외부에서 수행 하는 모든 그리기를 `srcRect` 매개 변수가 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2240">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2241">코드 예제를 보려면 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="db630-2241">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-2242">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-2242">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.RectangleF destRect, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::RectangleF destRect, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.RectangleF * System.Drawing.Graphics.EnumerateMetafileProc * nativeint * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destRect, callback, callbackData, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="db630-2243">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2243"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destRect"><span data-ttu-id="db630-2244">그려지는 메타파일의 위치와 크기를 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2244"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn metafile.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-2245">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2245"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="db630-2246">필수적이지만 무시되는 내부 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2246">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="db630-2247">이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" />를 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2247">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="db630-2248">그려지는 이미지에 대한 이미지 특성 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2248"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</span></span></param>
        <summary><span data-ttu-id="db630-2249">지정된 <see cref="T:System.Drawing.Imaging.Metafile" />의 레코드를 지정된 이미지 특성으로 지정된 사각형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2249">Sends the records of the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle using specified image attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2250">이 메서드는 지정 된 메타 파일에 포함 된 레코드를 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2250">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="db630-2251">각 레코드는 개별적으로 지정 된 콜백 메서드는 `callback` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2251">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="db630-2252">일반적으로 콜백 메서드 호출을 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> "재생" 또는 그리기, 레코드에 대 한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2252">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="db630-2253">콜백 메서드를 호출 하는 경우 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>를 호출 하 여 이렇게 해야 합니다 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> 특정 메서드의 <xref:System.Drawing.Imaging.Metafile> 열거 되.</span><span class="sxs-lookup"><span data-stu-id="db630-2253">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="db630-2254">지정 된 이미지 특성은 `imageAttr` 메타 파일 작성 된 경우 지정 된 매개 변수 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2254">The image attributes specified by the `imageAttr` parameter replace those specified when the metafile was written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2255">코드 예제를 보려면 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="db630-2255">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-2256">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-2256">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.RectangleF destRect, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Graphics/EnumerateMetafileProc callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::RectangleF destRect, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.RectangleF * System.Drawing.RectangleF * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destRect, srcRect, srcUnit, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="db630-2257">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2257"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destRect"><span data-ttu-id="db630-2258">그려지는 메타파일의 위치와 크기를 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2258"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn metafile.</span></span></param>
        <param name="srcRect"><span data-ttu-id="db630-2259">왼쪽 위 모퉁이를 기준으로 하여 그릴 메타파일의 부분을 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2259"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="db630-2260"><paramref name="srcRect" /> 매개 변수로 지정한 사각형에 포함된 메타파일의 부분을 결정하는 데 사용되는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2260">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-2261">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2261"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <summary><span data-ttu-id="db630-2262"><see cref="T:System.Drawing.Imaging.Metafile" />에서 선택한 사각형의 레코드를 지정된 사각형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2262">Sends the records of a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2263">이 메서드는 지정 된 메타 파일에 포함 된 레코드를 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2263">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="db630-2264">각 레코드는 개별적으로 지정 된 콜백 메서드는 `callback` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2264">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="db630-2265">일반적으로 콜백 메서드 호출을 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> "재생" 또는 그리기, 레코드에 대 한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2265">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="db630-2266">콜백 메서드를 호출 하는 경우 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>를 호출 하 여 이렇게 해야 합니다 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> 특정 메서드의 <xref:System.Drawing.Imaging.Metafile> 열거 되.</span><span class="sxs-lookup"><span data-stu-id="db630-2266">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="db630-2267">지정 된 영역 외부에서 수행 하는 모든 그리기를 `srcRect` 매개 변수가 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2267">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2268">코드 예제를 보려면 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="db630-2268">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-2269">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-2269">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Point destPoint, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::Point destPoint, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Point * System.Drawing.Rectangle * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc * nativeint -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoint, srcRect, srcUnit, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoint" Type="System.Drawing.Point" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="db630-2270">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2270"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoint"><span data-ttu-id="db630-2271">그려지는 메타파일의 왼쪽 위 모퉁이 위치를 지정하는 <see cref="T:System.Drawing.Point" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2271"><see cref="T:System.Drawing.Point" /> structure that specifies the location of the upper-left corner of the drawn metafile.</span></span></param>
        <param name="srcRect"><span data-ttu-id="db630-2272">왼쪽 위 모퉁이를 기준으로 하여 그릴 메타파일의 부분을 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2272"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="db630-2273"><paramref name="srcRect" /> 매개 변수로 지정한 사각형에 포함된 메타파일의 부분을 결정하는 데 사용되는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2273">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-2274">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2274"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="db630-2275">필수적이지만 무시되는 내부 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2275">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="db630-2276">이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" />를 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2276">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <summary><span data-ttu-id="db630-2277"><see cref="T:System.Drawing.Imaging.Metafile" />에서 선택한 사각형의 레코드를 지정된 지점에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2277">Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2278">이 메서드는 지정 된 메타 파일에 포함 된 레코드를 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2278">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="db630-2279">각 레코드는 개별적으로 지정 된 콜백 메서드는 `callback` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2279">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="db630-2280">일반적으로 콜백 메서드 호출을 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> "재생" 또는 그리기, 레코드에 대 한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2280">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="db630-2281">콜백 메서드를 호출 하는 경우 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>를 호출 하 여 이렇게 해야 합니다 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> 특정 메서드의 <xref:System.Drawing.Imaging.Metafile> 열거 되.</span><span class="sxs-lookup"><span data-stu-id="db630-2281">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2282">코드 예제를 보려면 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="db630-2282">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-2283">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-2283">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Point[] destPoints, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, cli::array &lt;System::Drawing::Point&gt; ^ destPoints, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Point[] * System.Drawing.Rectangle * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc * nativeint -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoints, srcRect, srcUnit, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoints" Type="System.Drawing.Point[]" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="db630-2284">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2284"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoints"><span data-ttu-id="db630-2285">그려지는 메타파일의 크기와 위치를 결정하는 평행 사변형이 정의된 세 개의 <see cref="T:System.Drawing.Point" /> 구조체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2285">Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</span></span></param>
        <param name="srcRect"><span data-ttu-id="db630-2286">왼쪽 위 모퉁이를 기준으로 하여 그릴 메타파일의 부분을 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2286"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="db630-2287"><paramref name="srcRect" /> 매개 변수로 지정한 사각형에 포함된 메타파일의 부분을 결정하는 데 사용되는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2287">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-2288">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2288"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="db630-2289">필수적이지만 무시되는 내부 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2289">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="db630-2290">이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" />를 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2290">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <summary><span data-ttu-id="db630-2291"><see cref="T:System.Drawing.Imaging.Metafile" />에서 선택한 사각형의 레코드를 지정된 평행 사변형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2291">Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2292">이 메서드는 지정 된 메타 파일에 포함 된 레코드를 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2292">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="db630-2293">각 레코드는 개별적으로 지정 된 콜백 메서드는 `callback` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2293">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="db630-2294">일반적으로 콜백 메서드 호출을 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> "재생" 또는 그리기, 레코드에 대 한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2294">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="db630-2295">콜백 메서드를 호출 하는 경우 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>를 호출 하 여 이렇게 해야 합니다 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> 특정 메서드의 <xref:System.Drawing.Imaging.Metafile> 열거 되.</span><span class="sxs-lookup"><span data-stu-id="db630-2295">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="db630-2296">`destPoints` 세 지점이 평행 사변형의 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2296">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="db630-2297">세 가지 <xref:System.Drawing.Point> 구조는 평행 사변형의 왼쪽 위, 오른쪽 위 및 왼쪽 아래 모서리를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2297">The three <xref:System.Drawing.Point> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="db630-2298">네 번째 지점은 평행 사변형을 구성 하기 위해 처음 3 개에서 추정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2298">The fourth point is extrapolated from the first three to form a parallelogram.</span></span> <span data-ttu-id="db630-2299">그려지는 메타 파일은 평행 사변형에 맞추기 위해 크기가 조정 되 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2299">The drawn metafile is scaled and sheared to fit the parallelogram.</span></span>  
  
 <span data-ttu-id="db630-2300">지정 된 영역 외부에서 수행 하는 모든 그리기를 `srcRect` 매개 변수가 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2300">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2301">코드 예제를 보려면 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="db630-2301">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-2302">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-2302">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.PointF destPoint, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::PointF destPoint, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.PointF * System.Drawing.RectangleF * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc * nativeint -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoint, srcRect, srcUnit, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoint" Type="System.Drawing.PointF" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="db630-2303">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2303"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoint"><span data-ttu-id="db630-2304">그려지는 메타파일의 왼쪽 위 모퉁이 위치를 지정하는 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2304"><see cref="T:System.Drawing.PointF" /> structure that specifies the location of the upper-left corner of the drawn metafile.</span></span></param>
        <param name="srcRect"><span data-ttu-id="db630-2305">왼쪽 위 모퉁이를 기준으로 하여 그릴 메타파일의 부분을 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2305"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="db630-2306"><paramref name="srcRect" /> 매개 변수로 지정한 사각형에 포함된 메타파일의 부분을 결정하는 데 사용되는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2306">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-2307">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2307"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="db630-2308">필수적이지만 무시되는 내부 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2308">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="db630-2309">이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" />를 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2309">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <summary><span data-ttu-id="db630-2310"><see cref="T:System.Drawing.Imaging.Metafile" />에서 선택한 사각형의 레코드를 지정된 지점에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2310">Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2311">이 메서드는 지정 된 메타 파일에 포함 된 레코드를 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2311">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="db630-2312">각 레코드는 개별적으로 지정 된 콜백 메서드는 `callback` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2312">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="db630-2313">일반적으로 콜백 메서드 호출을 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> "재생" 또는 그리기, 레코드에 대 한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2313">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="db630-2314">콜백 메서드를 호출 하는 경우 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>를 호출 하 여 이렇게 해야 합니다 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> 특정 메서드의 <xref:System.Drawing.Imaging.Metafile> 열거 되.</span><span class="sxs-lookup"><span data-stu-id="db630-2314">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="db630-2315">지정 된 영역 외부에서 수행 하는 모든 그리기를 `srcRect` 매개 변수가 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2315">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2316">코드 예제를 보려면 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="db630-2316">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-2317">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-2317">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc * nativeint -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoints, srcRect, srcUnit, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="db630-2318">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2318"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoints"><span data-ttu-id="db630-2319">그려지는 메타파일의 크기와 위치를 결정하는 평행 사변형이 정의된 세 개의 <see cref="T:System.Drawing.PointF" /> 구조체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2319">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</span></span></param>
        <param name="srcRect"><span data-ttu-id="db630-2320">왼쪽 위 모퉁이를 기준으로 하여 그릴 메타파일의 부분을 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2320"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="db630-2321"><paramref name="srcRect" /> 매개 변수로 지정한 사각형에 포함된 메타파일의 부분을 결정하는 데 사용되는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2321">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-2322">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2322"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="db630-2323">필수적이지만 무시되는 내부 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2323">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="db630-2324">이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" />를 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2324">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <summary><span data-ttu-id="db630-2325"><see cref="T:System.Drawing.Imaging.Metafile" />에서 선택한 사각형의 레코드를 지정된 평행 사변형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2325">Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2326">이 메서드는 지정 된 메타 파일에 포함 된 레코드를 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2326">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="db630-2327">각 레코드는 개별적으로 지정 된 콜백 메서드는 `callback` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2327">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="db630-2328">일반적으로 콜백 메서드 호출을 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> "재생" 또는 그리기, 레코드에 대 한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2328">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="db630-2329">콜백 메서드를 호출 하는 경우 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>를 호출 하 여 이렇게 해야 합니다 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> 특정 메서드의 <xref:System.Drawing.Imaging.Metafile> 열거 되.</span><span class="sxs-lookup"><span data-stu-id="db630-2329">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="db630-2330">`destPoints` 세 지점이 평행 사변형의 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2330">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="db630-2331">세 가지 <xref:System.Drawing.PointF> 구조는 평행 사변형의 왼쪽 위, 오른쪽 위 및 왼쪽 아래 모서리를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2331">The three <xref:System.Drawing.PointF> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="db630-2332">네 번째 지점은 평행 사변형을 구성 하기 위해 처음 3 개에서 추정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2332">The fourth point is extrapolated from the first three to form a parallelogram.</span></span> <span data-ttu-id="db630-2333">그려지는 메타 파일은 평행 사변형에 맞추기 위해 크기가 조정 되 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2333">The drawn metafile is scaled and sheared to fit the parallelogram.</span></span>  
  
 <span data-ttu-id="db630-2334">지정 된 영역 외부에서 수행 하는 모든 그리기를 `srcRect` 매개 변수가 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2334">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2335">코드 예제를 보려면 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="db630-2335">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-2336">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-2336">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Rectangle destRect, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::Rectangle destRect, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Rectangle * System.Drawing.Rectangle * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc * nativeint -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destRect, srcRect, srcUnit, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="db630-2337">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2337"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destRect"><span data-ttu-id="db630-2338">그려지는 메타파일의 위치와 크기를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2338"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn metafile.</span></span></param>
        <param name="srcRect"><span data-ttu-id="db630-2339">왼쪽 위 모퉁이를 기준으로 하여 그릴 메타파일의 부분을 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2339"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="db630-2340"><paramref name="srcRect" /> 매개 변수로 지정한 사각형에 포함된 메타파일의 부분을 결정하는 데 사용되는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2340">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-2341">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2341"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="db630-2342">필수적이지만 무시되는 내부 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2342">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="db630-2343">이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" />를 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2343">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <summary><span data-ttu-id="db630-2344"><see cref="T:System.Drawing.Imaging.Metafile" />에서 선택한 사각형의 레코드를 지정된 사각형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2344">Sends the records of a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2345">이 메서드는 지정 된 메타 파일에 포함 된 레코드를 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2345">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="db630-2346">각 레코드는 개별적으로 지정 된 콜백 메서드는 `callback` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2346">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="db630-2347">일반적으로 콜백 메서드 호출을 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> "재생" 또는 그리기, 레코드에 대 한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2347">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="db630-2348">콜백 메서드를 호출 하는 경우 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>를 호출 하 여 이렇게 해야 합니다 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> 특정 메서드의 <xref:System.Drawing.Imaging.Metafile> 열거 되.</span><span class="sxs-lookup"><span data-stu-id="db630-2348">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="db630-2349">지정 된 영역 외부에서 수행 하는 모든 그리기를 `srcRect` 매개 변수가 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2349">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2350">코드 예제를 보려면 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="db630-2350">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-2351">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-2351">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.RectangleF destRect, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::RectangleF destRect, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.RectangleF * System.Drawing.RectangleF * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc * nativeint -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destRect, srcRect, srcUnit, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="db630-2352">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2352"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destRect"><span data-ttu-id="db630-2353">그려지는 메타파일의 위치와 크기를 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2353"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn metafile.</span></span></param>
        <param name="srcRect"><span data-ttu-id="db630-2354">왼쪽 위 모퉁이를 기준으로 하여 그릴 메타파일의 부분을 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2354"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="db630-2355"><paramref name="srcRect" /> 매개 변수로 지정한 사각형에 포함된 메타파일의 부분을 결정하는 데 사용되는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2355">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-2356">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2356"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="db630-2357">필수적이지만 무시되는 내부 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2357">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="db630-2358">이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" />를 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2358">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <summary><span data-ttu-id="db630-2359"><see cref="T:System.Drawing.Imaging.Metafile" />에서 선택한 사각형의 레코드를 지정된 사각형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2359">Sends the records of a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2360">이 메서드는 지정 된 메타 파일에 포함 된 레코드를 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2360">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="db630-2361">각 레코드는 개별적으로 지정 된 콜백 메서드는`callback` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2361">Each record is individually sent to a callback method specified by the`callback` parameter.</span></span> <span data-ttu-id="db630-2362">일반적으로 콜백 메서드 호출을 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> "재생" 또는 그리기, 레코드에 대 한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2362">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="db630-2363">콜백 메서드를 호출 하는 경우 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>를 호출 하 여 이렇게 해야 합니다 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> 특정 메서드의 <xref:System.Drawing.Imaging.Metafile> 열거 되.</span><span class="sxs-lookup"><span data-stu-id="db630-2363">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="db630-2364">지정 된 영역 외부에서 수행 하는 모든 그리기를 `srcRect` 매개 변수가 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2364">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2365">코드 예제를 보려면 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="db630-2365">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-2366">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-2366">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Point destPoint, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit unit, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::Point destPoint, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit unit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Point * System.Drawing.Rectangle * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc * nativeint * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoint, srcRect, unit, callback, callbackData, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoint" Type="System.Drawing.Point" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="db630-2367">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2367"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoint"><span data-ttu-id="db630-2368">그려지는 메타파일의 왼쪽 위 모퉁이 위치를 지정하는 <see cref="T:System.Drawing.Point" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2368"><see cref="T:System.Drawing.Point" /> structure that specifies the location of the upper-left corner of the drawn metafile.</span></span></param>
        <param name="srcRect"><span data-ttu-id="db630-2369">왼쪽 위 모퉁이를 기준으로 하여 그릴 메타파일의 부분을 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2369"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span></span></param>
        <param name="unit"><span data-ttu-id="db630-2370"><paramref name="srcRect" /> 매개 변수로 지정한 사각형에 포함된 메타파일의 부분을 결정하는 데 사용되는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2370">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-2371">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2371"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="db630-2372">필수적이지만 무시되는 내부 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2372">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="db630-2373">이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" />를 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2373">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="db630-2374">그려지는 이미지에 대한 이미지 특성 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2374"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</span></span></param>
        <summary><span data-ttu-id="db630-2375"><see cref="T:System.Drawing.Imaging.Metafile" />에서 선택한 사각형의 레코드를 지정된 이미지 특성으로 지정된 지점에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2375">Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point using specified image attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2376">이 메서드는 지정 된 메타 파일에 포함 된 레코드를 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2376">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="db630-2377">각 레코드는 개별적으로 지정 된 콜백 메서드는 `callback` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2377">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="db630-2378">일반적으로 콜백 메서드 호출을 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> "재생" 또는 그리기, 레코드에 대 한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2378">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="db630-2379">콜백 메서드를 호출 하는 경우 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>를 호출 하 여 이렇게 해야 합니다 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> 특정 메서드의 <xref:System.Drawing.Imaging.Metafile> 열거 되.</span><span class="sxs-lookup"><span data-stu-id="db630-2379">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2380">코드 예제를 보려면 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="db630-2380">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Point[] destPoints, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit unit, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, cli::array &lt;System::Drawing::Point&gt; ^ destPoints, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit unit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Point[] * System.Drawing.Rectangle * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc * nativeint * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoints, srcRect, unit, callback, callbackData, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoints" Type="System.Drawing.Point[]" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="db630-2381">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2381"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoints"><span data-ttu-id="db630-2382">그려지는 메타파일의 크기와 위치를 결정하는 평행 사변형이 정의된 세 개의 <see cref="T:System.Drawing.Point" /> 구조체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2382">Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</span></span></param>
        <param name="srcRect"><span data-ttu-id="db630-2383">왼쪽 위 모퉁이를 기준으로 하여 그릴 메타파일의 부분을 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2383"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span></span></param>
        <param name="unit"><span data-ttu-id="db630-2384"><paramref name="srcRect" /> 매개 변수로 지정한 사각형에 포함된 메타파일의 부분을 결정하는 데 사용되는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2384">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-2385">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2385"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="db630-2386">필수적이지만 무시되는 내부 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2386">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="db630-2387">이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" />를 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2387">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="db630-2388">그려지는 이미지에 대한 이미지 특성 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2388"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</span></span></param>
        <summary><span data-ttu-id="db630-2389"><see cref="T:System.Drawing.Imaging.Metafile" />에서 선택한 사각형의 레코드를 지정된 이미지 특성으로 지정된 평행 사변형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2389">Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram using specified image attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2390">이 메서드는 지정 된 메타 파일에 포함 된 레코드를 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2390">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="db630-2391">각 레코드는 개별적으로 지정 된 콜백 메서드는 `callback` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2391">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="db630-2392">일반적으로 콜백 메서드 호출을 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> "재생" 또는 그리기, 레코드에 대 한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2392">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="db630-2393">콜백 메서드를 호출 하는 경우 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>를 호출 하 여 이렇게 해야 합니다 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> 특정 메서드의 <xref:System.Drawing.Imaging.Metafile> 열거 되.</span><span class="sxs-lookup"><span data-stu-id="db630-2393">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="db630-2394">`destPoints` 세 지점이 평행 사변형의 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2394">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="db630-2395">세 가지 <xref:System.Drawing.Point> 구조는 평행 사변형의 왼쪽 위, 오른쪽 위 및 왼쪽 아래 모서리를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2395">The three <xref:System.Drawing.Point> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="db630-2396">네 번째 지점은 평행 사변형을 구성 하기 위해 처음 3 개에서 추정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2396">The fourth point is extrapolated from the first three to form a parallelogram.</span></span> <span data-ttu-id="db630-2397">그려지는 메타 파일은 평행 사변형에 맞추기 위해 크기가 조정 되 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2397">The drawn metafile is scaled and sheared to fit the parallelogram.</span></span>  
  
 <span data-ttu-id="db630-2398">지정 된 영역 외부에서 수행 하는 모든 그리기를 `srcRect` 매개 변수가 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2398">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
 <span data-ttu-id="db630-2399">지정 된 이미지 특성은 `imageAttr` 메타 파일 작성 된 경우 지정 된 매개 변수 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2399">The image attributes specified by the `imageAttr` parameter replace those specified when the metafile was written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2400">코드 예제를 보려면 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="db630-2400">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-2401">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-2401">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.PointF destPoint, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit unit, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::PointF destPoint, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit unit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.PointF * System.Drawing.RectangleF * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc * nativeint * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoint, srcRect, unit, callback, callbackData, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoint" Type="System.Drawing.PointF" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="db630-2402">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2402"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoint"><span data-ttu-id="db630-2403">그려지는 메타파일의 왼쪽 위 모퉁이 위치를 지정하는 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2403"><see cref="T:System.Drawing.PointF" /> structure that specifies the location of the upper-left corner of the drawn metafile.</span></span></param>
        <param name="srcRect"><span data-ttu-id="db630-2404">왼쪽 위 모퉁이를 기준으로 하여 그릴 메타파일의 부분을 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2404"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span></span></param>
        <param name="unit"><span data-ttu-id="db630-2405"><paramref name="srcRect" /> 매개 변수로 지정한 사각형에 포함된 메타파일의 부분을 결정하는 데 사용되는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2405">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-2406">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2406"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="db630-2407">필수적이지만 무시되는 내부 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2407">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="db630-2408">이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" />를 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2408">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="db630-2409">그려지는 이미지에 대한 이미지 특성 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2409"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</span></span></param>
        <summary><span data-ttu-id="db630-2410"><see cref="T:System.Drawing.Imaging.Metafile" />에서 선택한 사각형의 레코드를 지정된 이미지 특성으로 지정된 지점에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2410">Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point using specified image attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2411">이 메서드는 지정 된 메타 파일에 포함 된 레코드를 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2411">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="db630-2412">각 레코드는 개별적으로 지정 된 콜백 메서드는 `callback` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2412">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="db630-2413">일반적으로 콜백 메서드 호출을 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> "재생" 또는 그리기, 레코드에 대 한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2413">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="db630-2414">콜백 메서드를 호출 하는 경우 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>를 호출 하 여 이렇게 해야 합니다 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> 특정 메서드의 <xref:System.Drawing.Imaging.Metafile> 열거 되.</span><span class="sxs-lookup"><span data-stu-id="db630-2414">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="db630-2415">지정 된 영역 외부에서 수행 하는 모든 그리기를 `srcRect` 매개 변수가 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2415">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
 <span data-ttu-id="db630-2416">지정 된 이미지 특성은 `imageAttr` 메타 파일 작성 된 경우 지정 된 매개 변수 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2416">The image attributes specified by the `imageAttr` parameter replace those specified when the metafile was written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2417">코드 예제를 보려면 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="db630-2417">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit unit, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit unit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc * nativeint * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoints, srcRect, unit, callback, callbackData, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="db630-2418">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2418"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoints"><span data-ttu-id="db630-2419">그려지는 메타파일의 크기와 위치를 결정하는 평행 사변형이 정의된 세 개의 <see cref="T:System.Drawing.PointF" /> 구조체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2419">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</span></span></param>
        <param name="srcRect"><span data-ttu-id="db630-2420">왼쪽 위 모퉁이를 기준으로 하여 그릴 메타파일의 부분을 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2420"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span></span></param>
        <param name="unit"><span data-ttu-id="db630-2421"><paramref name="srcRect" /> 매개 변수로 지정한 사각형에 포함된 메타파일의 부분을 결정하는 데 사용되는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2421">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-2422">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2422"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="db630-2423">필수적이지만 무시되는 내부 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2423">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="db630-2424">이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" />를 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2424">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="db630-2425">그려지는 이미지에 대한 이미지 특성 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2425"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</span></span></param>
        <summary><span data-ttu-id="db630-2426"><see cref="T:System.Drawing.Imaging.Metafile" />에서 선택한 사각형의 레코드를 지정된 이미지 특성으로 지정된 평행 사변형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2426">Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram using specified image attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2427">이 메서드는 지정 된 메타 파일에 포함 된 레코드를 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2427">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="db630-2428">각 레코드는 개별적으로 지정 된 콜백 메서드는 `callback` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2428">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="db630-2429">일반적으로 콜백 메서드 호출을 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> "재생" 또는 그리기, 레코드에 대 한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2429">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="db630-2430">콜백 메서드를 호출 하는 경우 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>를 호출 하 여 이렇게 해야 합니다 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> 특정 메서드의 <xref:System.Drawing.Imaging.Metafile> 열거 되.</span><span class="sxs-lookup"><span data-stu-id="db630-2430">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="db630-2431">`destPoints` 세 지점이 평행 사변형의 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2431">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="db630-2432">세 가지 <xref:System.Drawing.PointF> 구조는 평행 사변형의 왼쪽 위, 오른쪽 위 및 왼쪽 아래 모서리를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2432">The three <xref:System.Drawing.PointF> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="db630-2433">네 번째 지점은 평행 사변형을 구성 하기 위해 처음 3 개에서 추정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2433">The fourth point is extrapolated from the first three to form a parallelogram.</span></span> <span data-ttu-id="db630-2434">그려지는 메타 파일은 평행 사변형에 맞추기 위해 크기가 조정 되 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2434">The drawn metafile is scaled and sheared to fit the parallelogram.</span></span>  
  
 <span data-ttu-id="db630-2435">지정 된 영역 외부에서 수행 하는 모든 그리기를 `srcRect` 매개 변수가 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2435">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
 <span data-ttu-id="db630-2436">지정 된 이미지 특성은 `imageAttr` 메타 파일 작성 된 경우 지정 된 매개 변수 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2436">The image attributes specified by the `imageAttr` parameter replace those specified when the metafile was written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2437">코드 예제를 보려면 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="db630-2437">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-2438">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-2438">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Rectangle destRect, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit unit, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::Rectangle destRect, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit unit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Rectangle * System.Drawing.Rectangle * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc * nativeint * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destRect, srcRect, unit, callback, callbackData, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="db630-2439">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2439"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destRect"><span data-ttu-id="db630-2440">그려지는 메타파일의 위치와 크기를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2440"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn metafile.</span></span></param>
        <param name="srcRect"><span data-ttu-id="db630-2441">왼쪽 위 모퉁이를 기준으로 하여 그릴 메타파일의 부분을 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2441"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span></span></param>
        <param name="unit"><span data-ttu-id="db630-2442"><paramref name="srcRect" /> 매개 변수로 지정한 사각형에 포함된 메타파일의 부분을 결정하는 데 사용되는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2442">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-2443">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2443"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="db630-2444">필수적이지만 무시되는 내부 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2444">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="db630-2445">이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" />를 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2445">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="db630-2446">그려지는 이미지에 대한 이미지 특성 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2446"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</span></span></param>
        <summary><span data-ttu-id="db630-2447"><see cref="T:System.Drawing.Imaging.Metafile" />에서 선택한 사각형의 레코드를 지정된 이미지 특성으로 지정된 사각형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2447">Sends the records of a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle using specified image attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2448">이 메서드는 지정 된 메타 파일에 포함 된 레코드를 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2448">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="db630-2449">각 레코드는 개별적으로 지정 된 콜백 메서드는 `callback` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2449">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="db630-2450">일반적으로 콜백 메서드 호출을 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> "재생" 또는 그리기, 레코드에 대 한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2450">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="db630-2451">콜백 메서드를 호출 하는 경우 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>를 호출 하 여 이렇게 해야 합니다 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> 특정 메서드의 <xref:System.Drawing.Imaging.Metafile> 열거 되.</span><span class="sxs-lookup"><span data-stu-id="db630-2451">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="db630-2452">지정 된 영역 외부에서 수행 하는 모든 그리기를 `srcRect` 매개 변수가 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2452">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
 <span data-ttu-id="db630-2453">지정 된 이미지 특성은 `imageAttr` 메타 파일 작성 된 경우 지정 된 매개 변수 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2453">The image attributes specified by the `imageAttr` parameter replace those specified when the metafile was written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2454">코드 예제를 보려면 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="db630-2454">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-2455">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-2455">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.RectangleF destRect, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit unit, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::RectangleF destRect, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit unit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.RectangleF * System.Drawing.RectangleF * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc * nativeint * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destRect, srcRect, unit, callback, callbackData, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="db630-2456">열거할 <see cref="T:System.Drawing.Imaging.Metafile" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2456"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destRect"><span data-ttu-id="db630-2457">그려지는 메타파일의 위치와 크기를 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2457"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn metafile.</span></span></param>
        <param name="srcRect"><span data-ttu-id="db630-2458">왼쪽 위 모퉁이를 기준으로 하여 그릴 메타파일의 부분을 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2458"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span></span></param>
        <param name="unit"><span data-ttu-id="db630-2459"><paramref name="srcRect" /> 매개 변수로 지정한 사각형에 포함된 메타파일의 부분을 결정하는 데 사용되는 측정 단위를 지정하는 <see cref="T:System.Drawing.GraphicsUnit" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2459">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</span></span></param>
        <param name="callback"><span data-ttu-id="db630-2460">메타파일 레코드가 보내질 메서드를 지정하는 <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2460"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="db630-2461">필수적이지만 무시되는 내부 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2461">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="db630-2462">이 매개 변수에 대해 <see cref="F:System.IntPtr.Zero" />를 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2462">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="db630-2463">그려지는 이미지에 대한 이미지 특성 정보를 지정하는 <see cref="T:System.Drawing.Imaging.ImageAttributes" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2463"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</span></span></param>
        <summary><span data-ttu-id="db630-2464"><see cref="T:System.Drawing.Imaging.Metafile" />에서 선택한 사각형의 레코드를 지정된 이미지 특성으로 지정된 사각형에 표시하기 위해 한 번에 하나씩 콜백 메서드로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2464">Sends the records of a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle using specified image attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2465">이 메서드는 지정 된 메타 파일에 포함 된 레코드를 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2465">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="db630-2466">각 레코드는 개별적으로 지정 된 콜백 메서드는 `callback` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2466">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="db630-2467">일반적으로 콜백 메서드 호출을 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> "재생" 또는 그리기, 레코드에 대 한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2467">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="db630-2468">콜백 메서드를 호출 하는 경우 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>를 호출 하 여 이렇게 해야 합니다 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> 특정 메서드의 <xref:System.Drawing.Imaging.Metafile> 열거 되.</span><span class="sxs-lookup"><span data-stu-id="db630-2468">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="db630-2469">지정 된 영역 외부에서 수행 하는 모든 그리기를 `srcRect` 매개 변수가 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2469">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
 <span data-ttu-id="db630-2470">지정 된 이미지 특성은 `imageAttr` 메타 파일 작성 된 경우 지정 된 매개 변수 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2470">The image attributes specified by the `imageAttr` parameter replace those specified when the metafile was written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2471">코드 예제를 보려면 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="db630-2471">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71"><span data-ttu-id="db630-2472">이미지, 비트맵 및 메타파일</span><span class="sxs-lookup"><span data-stu-id="db630-2472">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExcludeClip">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db630-2473">이 <see cref="T:System.Drawing.Graphics" />의 클립 영역을 업데이트하여 <see cref="T:System.Drawing.Rectangle" /> 구조체에 의해 지정된 영역을 제외합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2473">Updates the clip region of this <see cref="T:System.Drawing.Graphics" /> to exclude the area specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExcludeClip">
      <MemberSignature Language="C#" Value="public void ExcludeClip (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExcludeClip(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExcludeClip (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExcludeClip(System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.ExcludeClip : System.Drawing.Rectangle -&gt; unit" Usage="graphics.ExcludeClip rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="db630-2474">사각형이 클립 영역에서 제외되도록 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2474"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the rectangle to exclude from the clip region.</span></span></param>
        <summary><span data-ttu-id="db630-2475">이 <see cref="T:System.Drawing.Graphics" />의 클립 영역을 업데이트하여 <see cref="T:System.Drawing.Rectangle" /> 구조체에 의해 지정된 영역을 제외합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2475">Updates the clip region of this <see cref="T:System.Drawing.Graphics" /> to exclude the area specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2476">이 메서드는 지정 된 영역을 제외 합니다 `rect` 현재 클립 영역에서 매개 변수 결과 영역을 할당 합니다 <xref:System.Drawing.Graphics.Clip%2A> 이 속성 <xref:System.Drawing.Graphics>.</span><span class="sxs-lookup"><span data-stu-id="db630-2476">This method excludes the area specified by the `rect` parameter from the current clip region and assigns the resulting area to the <xref:System.Drawing.Graphics.Clip%2A> property of this <xref:System.Drawing.Graphics>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2477">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2477">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-2478">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2478">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-2479">100 픽셀 x 100 픽셀의 사각형 있는 왼쪽 위 모퉁이 좌표 (100, 100)를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2479">Creates a 100 pixel by 100 pixel rectangle whose upper-left corner is at the coordinate (100, 100).</span></span>  
  
-   <span data-ttu-id="db630-2480">사각형에 의해 정의 된 영역을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2480">Creates a region defined by the rectangle.</span></span>  
  
-   <span data-ttu-id="db630-2481">사각형 영역을 제외 하도록 클립 영역을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2481">Sets the clipping region to exclude the rectangular region.</span></span>  
  
-   <span data-ttu-id="db630-2482">300 픽셀 x 300 픽셀의 사각형 왼쪽 위 모퉁이 있는 파란색 단색 브러시를 사용 하 여 좌표 (0, 0)를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2482">Fills a 300 pixel by 300 pixel rectangle whose upper-left corner is at the coordinate (0, 0) with a solid blue brush.</span></span>  
  
 <span data-ttu-id="db630-2483">결과 누락 된 해당 오른쪽 아래 모서리 쪽으로 사각형 영역을 사용 하 여 파란색 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2483">The result is a blue rectangle with a square region toward its lower-right corner missing.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#92](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#92)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#92](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#92)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#92](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#92)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExcludeClip">
      <MemberSignature Language="C#" Value="public void ExcludeClip (System.Drawing.Region region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExcludeClip(class System.Drawing.Region region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Region)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExcludeClip(System::Drawing::Region ^ region);" />
      <MemberSignature Language="F#" Value="member this.ExcludeClip : System.Drawing.Region -&gt; unit" Usage="graphics.ExcludeClip region" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Drawing.Region" />
      </Parameters>
      <Docs>
        <param name="region"><span data-ttu-id="db630-2484">영역이 클립 영역에서 제외되도록 지정하는 <see cref="T:System.Drawing.Region" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2484"><see cref="T:System.Drawing.Region" /> that specifies the region to exclude from the clip region.</span></span></param>
        <summary><span data-ttu-id="db630-2485">이 <see cref="T:System.Drawing.Graphics" />의 클립 영역을 업데이트하여 <see cref="T:System.Drawing.Region" />에 의해 지정된 영역을 제외합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2485">Updates the clip region of this <see cref="T:System.Drawing.Graphics" /> to exclude the area specified by a <see cref="T:System.Drawing.Region" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2486">이 메서드는 지정 된 영역을 제외 합니다 `region` 현재 클립 영역에서 매개 변수 결과 영역을 할당 합니다 <xref:System.Drawing.Graphics.Clip%2A> 이 속성 <xref:System.Drawing.Graphics>.</span><span class="sxs-lookup"><span data-stu-id="db630-2486">This method excludes the area specified by the `region` parameter from the current clip region and assigns the resulting area to the <xref:System.Drawing.Graphics.Clip%2A> property of this <xref:System.Drawing.Graphics>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2487">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2487">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-2488">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2488">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-2489">100 픽셀 x 100 픽셀의 사각형 있는 왼쪽 위 모퉁이 좌표 (100, 100)를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2489">Creates a 100 pixel by 100 pixel rectangle whose upper-left corner is at the coordinate (100, 100).</span></span>  
  
-   <span data-ttu-id="db630-2490">사각형을 제외할 클립 영역을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2490">Sets the clipping region to exclude the rectangle.</span></span>  
  
-   <span data-ttu-id="db630-2491">300 픽셀 x 300 픽셀의 사각형 왼쪽 위 모퉁이 있는 파란색 단색 브러시를 사용 하 여 좌표 (0, 0)를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2491">Fills a 300 pixel by 300 pixel rectangle whose upper-left corner is at the coordinate (0, 0) with a solid blue brush.</span></span>  
  
 <span data-ttu-id="db630-2492">결과 누락 된 해당 오른쪽 아래 모서리 쪽으로 사각형 영역을 사용 하 여 파란색 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2492">The result is a blue rectangle with a square area toward its lower-right corner missing.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#91](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#91)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#91](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#91)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#91](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#91)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FillClosedCurve">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db630-2493"><see cref="T:System.Drawing.Point" /> 구조체의 배열로 정의된 폐쇄형 카디널 스플라인 곡선의 내부를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2493">Fills the interior of a closed cardinal spline curve defined by an array of <see cref="T:System.Drawing.Point" /> structures.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FillClosedCurve">
      <MemberSignature Language="C#" Value="public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillClosedCurve(class System.Drawing.Brush brush, valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillClosedCurve(System::Drawing::Brush ^ brush, cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.FillClosedCurve : System.Drawing.Brush * System.Drawing.Point[] -&gt; unit" Usage="graphics.FillClosedCurve (brush, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="db630-2494">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2494"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="points"><span data-ttu-id="db630-2495">스플라인을 정의하는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2495">Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.</span></span></param>
        <summary><span data-ttu-id="db630-2496"><see cref="T:System.Drawing.Point" /> 구조체의 배열로 정의된 폐쇄형 카디널 스플라인 곡선의 내부를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2496">Fills the interior of a closed cardinal spline curve defined by an array of <see cref="T:System.Drawing.Point" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2497">이 메서드는 배열의 각 요소를 통과 하는 폐쇄형된 카디널 스플라인의 내부를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2497">This method fills the interior of a closed cardinal spline that passes through each point in the array.</span></span> <span data-ttu-id="db630-2498">마지막 지점을 첫 번째 요소와 일치 하지 않는 경우 추가 곡선 세그먼트를 닫아야를 첫 번째 지점과 마지막 지점에서 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2498">If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.</span></span>  
  
 <span data-ttu-id="db630-2499">점 배열에 4 개 이상 있어야 <xref:System.Drawing.Point> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2499">The array of points must contain at least four <xref:System.Drawing.Point> structures.</span></span>  
  
 <span data-ttu-id="db630-2500">이 메서드는 0.5의 기본 장력을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2500">This method uses a default tension of 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2501">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2501">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-2502">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2502">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-2503">빨간색 단색 브러시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2503">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="db630-2504">스플라인을 정의 4 개 요소의 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2504">Creates an array of four points to define a spline.</span></span>  
  
-   <span data-ttu-id="db630-2505">화면에 곡선을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2505">Fills the curve on the screen.</span></span>  
  
 <span data-ttu-id="db630-2506">곡선에 있는 기본 장력 0.5입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2506">The curve has a default tension of 0.5.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#93](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#93)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#93](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#93)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#93](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#93)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-2507"><paramref name="brush" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2507"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="db630-2508">또는</span><span class="sxs-lookup"><span data-stu-id="db630-2508">-or-</span></span> 
 <span data-ttu-id="db630-2509"><paramref name="points" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2509"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillClosedCurve">
      <MemberSignature Language="C#" Value="public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillClosedCurve(class System.Drawing.Brush brush, valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillClosedCurve(System::Drawing::Brush ^ brush, cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.FillClosedCurve : System.Drawing.Brush * System.Drawing.PointF[] -&gt; unit" Usage="graphics.FillClosedCurve (brush, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="db630-2510">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2510"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="points"><span data-ttu-id="db630-2511">스플라인을 정의하는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2511">Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.</span></span></param>
        <summary><span data-ttu-id="db630-2512"><see cref="T:System.Drawing.PointF" /> 구조체의 배열로 정의된 폐쇄형 카디널 스플라인 곡선의 내부를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2512">Fills the interior of a closed cardinal spline curve defined by an array of <see cref="T:System.Drawing.PointF" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2513">이 메서드는 배열의 각 요소를 통과 하는 폐쇄형된 카디널 스플라인의 내부를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2513">This method fills the interior of a closed cardinal spline that passes through each point in the array.</span></span> <span data-ttu-id="db630-2514">마지막 지점을 첫 번째 요소와 일치 하지 않는 경우 추가 곡선 세그먼트를 닫아야를 첫 번째 지점과 마지막 지점에서 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2514">If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.</span></span>  
  
 <span data-ttu-id="db630-2515">점 배열에 4 개 이상 있어야 <xref:System.Drawing.PointF> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2515">The array of points must contain at least four <xref:System.Drawing.PointF> structures.</span></span>  
  
 <span data-ttu-id="db630-2516">이 메서드는 0.5의 기본 장력을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2516">This method uses a default tension of 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2517">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2517">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-2518">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2518">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-2519">빨간색 단색 브러시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2519">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="db630-2520">스플라인을 정의 4 개 요소의 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2520">Creates an array of four points to define a spline.</span></span>  
  
-   <span data-ttu-id="db630-2521">화면에 곡선을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2521">Fills the curve on the screen.</span></span>  
  
 <span data-ttu-id="db630-2522">곡선에 있는 기본 장력 0.5입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2522">The curve has a default tension of 0.5.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#96](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#96)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#96](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#96)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#96](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#96)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-2523"><paramref name="brush" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2523"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="db630-2524">또는</span><span class="sxs-lookup"><span data-stu-id="db630-2524">-or-</span></span> 
 <span data-ttu-id="db630-2525"><paramref name="points" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2525"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillClosedCurve">
      <MemberSignature Language="C#" Value="public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.Point[] points, System.Drawing.Drawing2D.FillMode fillmode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillClosedCurve(class System.Drawing.Brush brush, valuetype System.Drawing.Point[] points, valuetype System.Drawing.Drawing2D.FillMode fillmode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillClosedCurve(System::Drawing::Brush ^ brush, cli::array &lt;System::Drawing::Point&gt; ^ points, System::Drawing::Drawing2D::FillMode fillmode);" />
      <MemberSignature Language="F#" Value="member this.FillClosedCurve : System.Drawing.Brush * System.Drawing.Point[] * System.Drawing.Drawing2D.FillMode -&gt; unit" Usage="graphics.FillClosedCurve (brush, points, fillmode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="fillmode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="db630-2526">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2526"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="points"><span data-ttu-id="db630-2527">스플라인을 정의하는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2527">Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.</span></span></param>
        <param name="fillmode"><span data-ttu-id="db630-2528">곡선이 채워지는 방법을 결정하는 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2528">Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the curve is filled.</span></span></param>
        <summary><span data-ttu-id="db630-2529">지정된 채우기 모드를 사용하여 <see cref="T:System.Drawing.Point" /> 구조체의 배열로 정의된 폐쇄형 카디널 스플라인 곡선의 내부를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2529">Fills the interior of a closed cardinal spline curve defined by an array of <see cref="T:System.Drawing.Point" /> structures using the specified fill mode.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2530">이 메서드는 배열의 각 요소를 통과 하는 폐쇄형된 카디널 스플라인의 내부를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2530">This method fills the interior of a closed cardinal spline that passes through each point in the array.</span></span> <span data-ttu-id="db630-2531">마지막 지점을 첫 번째 요소와 일치 하지 않는 경우 추가 곡선 세그먼트를 닫아야를 첫 번째 지점과 마지막 지점에서 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2531">If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.</span></span>  
  
 <span data-ttu-id="db630-2532">점 배열에 4 개 이상 있어야 <xref:System.Drawing.Point> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2532">The array of points must contain at least four <xref:System.Drawing.Point> structures.</span></span>  
  
 <span data-ttu-id="db630-2533">이 메서드는 0.5의 기본 장력을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2533">This method uses a default tension of 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2534">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2534">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-2535">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2535">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-2536">빨간색 단색 브러시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2536">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="db630-2537">스플라인을 정의 4 개 요소의 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2537">Creates an array of four points to define a spline.</span></span>  
  
-   <span data-ttu-id="db630-2538">채우기 모드를 설정 <xref:System.Drawing.Drawing2D.FillMode.Winding>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2538">Sets the fill mode to <xref:System.Drawing.Drawing2D.FillMode.Winding>.</span></span>  
  
-   <span data-ttu-id="db630-2539">화면에 곡선을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2539">Fills the curve on the screen.</span></span>  
  
 <span data-ttu-id="db630-2540">곡선에 있는 기본 장력 0.5입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2540">The curve has a default tension of 0.5.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#94](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#94)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#94](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#94)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#94](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#94)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-2541"><paramref name="brush" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2541"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="db630-2542">또는</span><span class="sxs-lookup"><span data-stu-id="db630-2542">-or-</span></span> 
 <span data-ttu-id="db630-2543"><paramref name="points" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2543"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillClosedCurve">
      <MemberSignature Language="C#" Value="public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.PointF[] points, System.Drawing.Drawing2D.FillMode fillmode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillClosedCurve(class System.Drawing.Brush brush, valuetype System.Drawing.PointF[] points, valuetype System.Drawing.Drawing2D.FillMode fillmode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillClosedCurve(System::Drawing::Brush ^ brush, cli::array &lt;System::Drawing::PointF&gt; ^ points, System::Drawing::Drawing2D::FillMode fillmode);" />
      <MemberSignature Language="F#" Value="member this.FillClosedCurve : System.Drawing.Brush * System.Drawing.PointF[] * System.Drawing.Drawing2D.FillMode -&gt; unit" Usage="graphics.FillClosedCurve (brush, points, fillmode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="fillmode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="db630-2544">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2544"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="points"><span data-ttu-id="db630-2545">스플라인을 정의하는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2545">Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.</span></span></param>
        <param name="fillmode"><span data-ttu-id="db630-2546">곡선이 채워지는 방법을 결정하는 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2546">Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the curve is filled.</span></span></param>
        <summary><span data-ttu-id="db630-2547">지정된 채우기 모드를 사용하여 <see cref="T:System.Drawing.PointF" /> 구조체의 배열로 정의된 폐쇄형 카디널 스플라인 곡선의 내부를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2547">Fills the interior of a closed cardinal spline curve defined by an array of <see cref="T:System.Drawing.PointF" /> structures using the specified fill mode.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2548">이 메서드는 배열의 각 요소를 통과 하는 폐쇄형된 카디널 스플라인의 내부를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2548">This method fills the interior of a closed cardinal spline that passes through each point in the array.</span></span> <span data-ttu-id="db630-2549">마지막 지점을 첫 번째 요소와 일치 하지 않는 경우 추가 곡선 세그먼트를 닫아야를 첫 번째 지점과 마지막 지점에서 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2549">If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.</span></span>  
  
 <span data-ttu-id="db630-2550">점 배열에 4 개 이상 있어야 <xref:System.Drawing.Point> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2550">The array of points must contain at least four <xref:System.Drawing.Point> structures.</span></span>  
  
 <span data-ttu-id="db630-2551">이 메서드는 0.5의 기본 장력을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2551">This method uses a default tension of 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2552">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2552">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-2553">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2553">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-2554">빨간색 단색 브러시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2554">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="db630-2555">스플라인을 정의 4 개 요소의 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2555">Creates an array of four points to define a spline.</span></span>  
  
-   <span data-ttu-id="db630-2556">채우기 모드를 설정 <xref:System.Drawing.Drawing2D.FillMode.Winding>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2556">Sets the fill mode to <xref:System.Drawing.Drawing2D.FillMode.Winding>.</span></span>  
  
-   <span data-ttu-id="db630-2557">화면에 곡선을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2557">Fills the curve on the screen.</span></span>  
  
 <span data-ttu-id="db630-2558">곡선에 있는 기본 장력 0.5입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2558">The curve has a default tension of 0.5.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#97](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#97)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#97](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#97)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#97](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#97)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-2559"><paramref name="brush" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2559"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="db630-2560">또는</span><span class="sxs-lookup"><span data-stu-id="db630-2560">-or-</span></span> 
 <span data-ttu-id="db630-2561"><paramref name="points" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2561"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillClosedCurve">
      <MemberSignature Language="C#" Value="public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.Point[] points, System.Drawing.Drawing2D.FillMode fillmode, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillClosedCurve(class System.Drawing.Brush brush, valuetype System.Drawing.Point[] points, valuetype System.Drawing.Drawing2D.FillMode fillmode, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillClosedCurve(System::Drawing::Brush ^ brush, cli::array &lt;System::Drawing::Point&gt; ^ points, System::Drawing::Drawing2D::FillMode fillmode, float tension);" />
      <MemberSignature Language="F#" Value="member this.FillClosedCurve : System.Drawing.Brush * System.Drawing.Point[] * System.Drawing.Drawing2D.FillMode * single -&gt; unit" Usage="graphics.FillClosedCurve (brush, points, fillmode, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="fillmode" Type="System.Drawing.Drawing2D.FillMode" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="db630-2562">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2562"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="points"><span data-ttu-id="db630-2563">스플라인을 정의하는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2563">Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.</span></span></param>
        <param name="fillmode"><span data-ttu-id="db630-2564">곡선이 채워지는 방법을 결정하는 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2564">Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the curve is filled.</span></span></param>
        <param name="tension"><span data-ttu-id="db630-2565">곡선의 장력을 지정하는 0.0F 보다 크거나 같은 값입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2565">Value greater than or equal to 0.0F that specifies the tension of the curve.</span></span></param>
        <summary><span data-ttu-id="db630-2566">지정된 채우기 모드와 장력을 사용하여 <see cref="T:System.Drawing.Point" /> 구조체의 배열로 정의된 폐쇄형 카디널 스플라인 곡선의 내부를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2566">Fills the interior of a closed cardinal spline curve defined by an array of <see cref="T:System.Drawing.Point" /> structures using the specified fill mode and tension.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2567">이 메서드는 배열의 각 요소를 통과 하는 폐쇄형된 카디널 스플라인의 내부를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2567">This method fills the interior of a closed cardinal spline that passes through each point in the array.</span></span> <span data-ttu-id="db630-2568">마지막 지점을 첫 번째 요소와 일치 하지 않는 경우 추가 곡선 세그먼트를 닫아야를 첫 번째 지점과 마지막 지점에서 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2568">If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.</span></span>  
  
 <span data-ttu-id="db630-2569">점 배열에 4 개 이상 있어야 <xref:System.Drawing.Point> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2569">The array of points must contain at least four <xref:System.Drawing.Point> structures.</span></span>  
  
 <span data-ttu-id="db630-2570">`tension` 매개 변수는 스플라인의 모양을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2570">The `tension` parameter determines the shape of the spline.</span></span> <span data-ttu-id="db630-2571">경우 값은 `tension` 매개 변수는 0.0F,이 메서드는 요소를 연결 하려면 직선 세그먼트를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2571">If the value of the `tension` parameter is 0.0F, this method draws straight line segments to connect the points.</span></span> <span data-ttu-id="db630-2572">일반적으로 `tension` 매개 변수 보다 작거나 1.0F로는 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2572">Usually, the `tension` parameter is less than or equal to 1.0F.</span></span> <span data-ttu-id="db630-2573">1.0F 값 이상한 결과 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2573">Values over 1.0F produce unusual results.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2574">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2574">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-2575">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2575">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-2576">빨간색 단색 브러시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2576">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="db630-2577">스플라인을 정의 4 개 요소의 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2577">Creates an array of four points to define a spline.</span></span>  
  
-   <span data-ttu-id="db630-2578">채우기 모드를 설정 <xref:System.Drawing.Drawing2D.FillMode.Winding>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2578">Sets the fill mode to <xref:System.Drawing.Drawing2D.FillMode.Winding>.</span></span>  
  
-   <span data-ttu-id="db630-2579">1.0 장력을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2579">Sets the tension to 1.0.</span></span>  
  
-   <span data-ttu-id="db630-2580">화면에 곡선을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2580">Fills the curve on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#95](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#95)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#95](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#95)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#95](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#95)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-2581"><paramref name="brush" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2581"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="db630-2582">또는</span><span class="sxs-lookup"><span data-stu-id="db630-2582">-or-</span></span> 
 <span data-ttu-id="db630-2583"><paramref name="points" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2583"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillClosedCurve">
      <MemberSignature Language="C#" Value="public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.PointF[] points, System.Drawing.Drawing2D.FillMode fillmode, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillClosedCurve(class System.Drawing.Brush brush, valuetype System.Drawing.PointF[] points, valuetype System.Drawing.Drawing2D.FillMode fillmode, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillClosedCurve(System::Drawing::Brush ^ brush, cli::array &lt;System::Drawing::PointF&gt; ^ points, System::Drawing::Drawing2D::FillMode fillmode, float tension);" />
      <MemberSignature Language="F#" Value="member this.FillClosedCurve : System.Drawing.Brush * System.Drawing.PointF[] * System.Drawing.Drawing2D.FillMode * single -&gt; unit" Usage="graphics.FillClosedCurve (brush, points, fillmode, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="fillmode" Type="System.Drawing.Drawing2D.FillMode" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="db630-2584">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2584">A <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="points"><span data-ttu-id="db630-2585">스플라인을 정의하는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2585">Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.</span></span></param>
        <param name="fillmode"><span data-ttu-id="db630-2586">곡선이 채워지는 방법을 결정하는 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2586">Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the curve is filled.</span></span></param>
        <param name="tension"><span data-ttu-id="db630-2587">곡선의 장력을 지정하는 0.0F 보다 크거나 같은 값입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2587">Value greater than or equal to 0.0F that specifies the tension of the curve.</span></span></param>
        <summary><span data-ttu-id="db630-2588">지정된 채우기 모드와 장력을 사용하여 <see cref="T:System.Drawing.PointF" /> 구조체의 배열로 정의된 폐쇄형 카디널 스플라인 곡선의 내부를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2588">Fills the interior of a closed cardinal spline curve defined by an array of <see cref="T:System.Drawing.PointF" /> structures using the specified fill mode and tension.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2589">이 메서드는 배열의 각 요소를 통과 하는 폐쇄형된 카디널 스플라인의 내부를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2589">This method fills the interior of a closed cardinal spline that passes through each point in the array.</span></span> <span data-ttu-id="db630-2590">마지막 지점을 첫 번째 요소와 일치 하지 않는 경우 추가 곡선 세그먼트를 닫아야를 첫 번째 지점과 마지막 지점에서 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2590">If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.</span></span>  
  
 <span data-ttu-id="db630-2591">점 배열에 4 개 이상 있어야 <xref:System.Drawing.Point> 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2591">The array of points must contain at least four <xref:System.Drawing.Point> structures.</span></span>  
  
 <span data-ttu-id="db630-2592">`tension` 매개 변수는 스플라인의 모양을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2592">The `tension` parameter determines the shape of the spline.</span></span> <span data-ttu-id="db630-2593">경우 값은 `tension` 매개 변수는 0.0F,이 메서드는 요소를 연결 하려면 직선 세그먼트를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2593">If the value of the `tension` parameter is 0.0F, this method draws straight line segments to connect the points.</span></span> <span data-ttu-id="db630-2594">일반적으로 `tension` 매개 변수 보다 작거나 1.0F로는 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2594">Usually, the `tension` parameter is less than or equal to 1.0F.</span></span> <span data-ttu-id="db630-2595">1.0F 값 이상한 결과 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2595">Values over 1.0F produce unusual results.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2596">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2596">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-2597">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2597">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-2598">빨간색 단색 브러시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2598">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="db630-2599">스플라인을 정의 4 개 요소의 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2599">Creates an array of four points to define a spline.</span></span>  
  
-   <span data-ttu-id="db630-2600">채우기 모드를 설정 <xref:System.Drawing.Drawing2D.FillMode.Winding>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2600">Sets the fill mode to <xref:System.Drawing.Drawing2D.FillMode.Winding>.</span></span>  
  
-   <span data-ttu-id="db630-2601">1.0 장력을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2601">Sets the tension to 1.0.</span></span>  
  
-   <span data-ttu-id="db630-2602">화면에 곡선을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2602">Fills the curve on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#98](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#98)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#98](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#98)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#98](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-2603"><paramref name="brush" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2603"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="db630-2604">또는</span><span class="sxs-lookup"><span data-stu-id="db630-2604">-or-</span></span> 
 <span data-ttu-id="db630-2605"><paramref name="points" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2605"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FillEllipse">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db630-2606">좌표, 너비, 높이의 쌍으로 지정된 경계 사각형에 의해 정의되는 타원의 내부를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2606">Fills the interior of an ellipse defined by a bounding rectangle specified by a pair of coordinates, a width, and a height.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FillEllipse">
      <MemberSignature Language="C#" Value="public void FillEllipse (System.Drawing.Brush brush, System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillEllipse(class System.Drawing.Brush brush, valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillEllipse(System::Drawing::Brush ^ brush, System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.FillEllipse : System.Drawing.Brush * System.Drawing.Rectangle -&gt; unit" Usage="graphics.FillEllipse (brush, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="db630-2607">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2607"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="rect"><span data-ttu-id="db630-2608">타원을 정의하는 경계 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2608"><see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding rectangle that defines the ellipse.</span></span></param>
        <summary><span data-ttu-id="db630-2609"><see cref="T:System.Drawing.Rectangle" /> 구조체에 의해 지정된 경계 사각형에 의해 정의되는 타원의 내부를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2609">Fills the interior of an ellipse defined by a bounding rectangle specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2610">이 방법을 사용 하 여 타원의 내부를 채웁니다는 <xref:System.Drawing.Brush>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2610">This method fills the interior of an ellipse with a <xref:System.Drawing.Brush>.</span></span> <span data-ttu-id="db630-2611">타원 나타내는 경계 사각형에 의해 정의 됩니다는 `rect` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2611">The ellipse is defined by the bounding rectangle represented by the `rect` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2612">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2612">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-2613">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2613">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-2614">빨간색 단색 브러시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2614">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="db630-2615">타원을 제한 하는 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2615">Creates a rectangle that bounds an ellipse.</span></span>  
  
-   <span data-ttu-id="db630-2616">화면에서 타원을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2616">Fills the ellipse on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#99](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#99)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#99](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#99)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#99](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#99)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-2617"><paramref name="brush" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2617"><paramref name="brush" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillEllipse">
      <MemberSignature Language="C#" Value="public void FillEllipse (System.Drawing.Brush brush, System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillEllipse(class System.Drawing.Brush brush, valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillEllipse(System::Drawing::Brush ^ brush, System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.FillEllipse : System.Drawing.Brush * System.Drawing.RectangleF -&gt; unit" Usage="graphics.FillEllipse (brush, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="db630-2618">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2618"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="rect"><span data-ttu-id="db630-2619">타원을 정의하는 경계 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2619"><see cref="T:System.Drawing.RectangleF" /> structure that represents the bounding rectangle that defines the ellipse.</span></span></param>
        <summary><span data-ttu-id="db630-2620"><see cref="T:System.Drawing.RectangleF" /> 구조체에 의해 지정된 경계 사각형에 의해 정의되는 타원의 내부를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2620">Fills the interior of an ellipse defined by a bounding rectangle specified by a <see cref="T:System.Drawing.RectangleF" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2621">이 방법을 사용 하 여 타원의 내부를 채웁니다는 <xref:System.Drawing.Brush>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2621">This method fills the interior of an ellipse with a <xref:System.Drawing.Brush>.</span></span> <span data-ttu-id="db630-2622">타원 나타내는 경계 사각형에 의해 정의 됩니다는 `rect` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2622">The ellipse is defined by the bounding rectangle represented by the `rect` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2623">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2623">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-2624">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2624">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-2625">빨간색 단색 브러시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2625">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="db630-2626">타원을 제한 하는 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2626">Creates a rectangle that bounds an ellipse.</span></span>  
  
-   <span data-ttu-id="db630-2627">화면에서 타원을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2627">Fills the ellipse on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#100](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#100)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#100](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#100)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#100](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#100)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-2628"><paramref name="brush" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2628"><paramref name="brush" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillEllipse">
      <MemberSignature Language="C#" Value="public void FillEllipse (System.Drawing.Brush brush, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillEllipse(class System.Drawing.Brush brush, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillEllipse(System::Drawing::Brush ^ brush, int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.FillEllipse : System.Drawing.Brush * int * int * int * int -&gt; unit" Usage="graphics.FillEllipse (brush, x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="db630-2629">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2629"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="x"><span data-ttu-id="db630-2630">타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2630">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="y"><span data-ttu-id="db630-2631">타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2631">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="width"><span data-ttu-id="db630-2632">타원을 정의하는 경계 사각형의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2632">Width of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="height"><span data-ttu-id="db630-2633">타원을 정의하는 경계 사각형의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2633">Height of the bounding rectangle that defines the ellipse.</span></span></param>
        <summary><span data-ttu-id="db630-2634">좌표, 너비, 높이의 쌍으로 지정된 경계 사각형에 의해 정의되는 타원의 내부를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2634">Fills the interior of an ellipse defined by a bounding rectangle specified by a pair of coordinates, a width, and a height.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2635">이 방법을 사용 하 여 타원의 내부를 채웁니다는 <xref:System.Drawing.Brush>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2635">This method fills the interior of an ellipse with a <xref:System.Drawing.Brush>.</span></span> <span data-ttu-id="db630-2636">타원 나타내는 경계 사각형에 의해 정의 됩니다 합니다 `x`, `y`를 `width`, 및 `height` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2636">The ellipse is defined by the bounding rectangle represented by the `x`, `y`, `width`, and `height` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2637">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2637">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-2638">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2638">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-2639">빨간색 단색 브러시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2639">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="db630-2640">타원을 제한 하는 사각형의 크기와 위치를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2640">Creates the location and size of a rectangle that bounds an ellipse.</span></span>  
  
-   <span data-ttu-id="db630-2641">화면에서 타원을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2641">Fills the ellipse on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#101](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#101)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#101](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#101)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#101](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#101)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-2642"><paramref name="brush" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2642"><paramref name="brush" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillEllipse">
      <MemberSignature Language="C#" Value="public void FillEllipse (System.Drawing.Brush brush, float x, float y, float width, float height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillEllipse(class System.Drawing.Brush brush, float32 x, float32 y, float32 width, float32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillEllipse(System::Drawing::Brush ^ brush, float x, float y, float width, float height);" />
      <MemberSignature Language="F#" Value="member this.FillEllipse : System.Drawing.Brush * single * single * single * single -&gt; unit" Usage="graphics.FillEllipse (brush, x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="db630-2643">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2643"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="x"><span data-ttu-id="db630-2644">타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2644">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="y"><span data-ttu-id="db630-2645">타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2645">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="width"><span data-ttu-id="db630-2646">타원을 정의하는 경계 사각형의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2646">Width of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="height"><span data-ttu-id="db630-2647">타원을 정의하는 경계 사각형의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2647">Height of the bounding rectangle that defines the ellipse.</span></span></param>
        <summary><span data-ttu-id="db630-2648">좌표, 너비, 높이의 쌍으로 지정된 경계 사각형에 의해 정의되는 타원의 내부를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2648">Fills the interior of an ellipse defined by a bounding rectangle specified by a pair of coordinates, a width, and a height.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2649">이 방법을 사용 하 여 타원의 내부를 채웁니다는 <xref:System.Drawing.Brush>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2649">This method fills the interior of an ellipse with a <xref:System.Drawing.Brush>.</span></span> <span data-ttu-id="db630-2650">타원 나타내는 경계 사각형에 의해 정의 됩니다 합니다 `x`, `y`를 `width`, 및 `height` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2650">The ellipse is defined by the bounding rectangle represented by the `x`, `y`, `width`, and `height` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2651">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2651">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-2652">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2652">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-2653">빨간색 단색 브러시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2653">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="db630-2654">타원을 제한 하는 사각형의 크기와 위치를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2654">Creates the location and size of a rectangle that bounds an ellipse.</span></span>  
  
-   <span data-ttu-id="db630-2655">화면에서 타원을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2655">Fills the ellipse on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#102](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#102)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#102](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#102)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#102](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#102)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-2656"><paramref name="brush" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2656"><paramref name="brush" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillPath">
      <MemberSignature Language="C#" Value="public void FillPath (System.Drawing.Brush brush, System.Drawing.Drawing2D.GraphicsPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillPath(class System.Drawing.Brush brush, class System.Drawing.Drawing2D.GraphicsPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillPath(System::Drawing::Brush ^ brush, System::Drawing::Drawing2D::GraphicsPath ^ path);" />
      <MemberSignature Language="F#" Value="member this.FillPath : System.Drawing.Brush * System.Drawing.Drawing2D.GraphicsPath -&gt; unit" Usage="graphics.FillPath (brush, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="db630-2657">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2657"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="path"><span data-ttu-id="db630-2658">채울 경로를 나타내는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2658"><see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> that represents the path to fill.</span></span></param>
        <summary><span data-ttu-id="db630-2659"><see cref="T:System.Drawing.Drawing2D.GraphicsPath" />의 내부를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2659">Fills the interior of a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2660"><xref:System.Drawing.Drawing2D.GraphicsPath> 는 일련의 선과 곡선 세그먼트로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2660">A <xref:System.Drawing.Drawing2D.GraphicsPath> consists of a series of line and curve segments.</span></span> <span data-ttu-id="db630-2661">표시 되는 경로 `path` 매개 변수 닫혀 있지 않으며, 추가 세그먼트가에 추가 됩니다 마지막 지점에서 첫 번째 요소 경로를 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2661">If the path represented by the `path` parameter is not closed, an additional segment is added from the last point to the first point to close the path.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2662">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2662">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-2663">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2663">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-2664">빨간색 단색 브러시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2664">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="db630-2665">그래픽 경로 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2665">Creates a graphics path object.</span></span>  
  
-   <span data-ttu-id="db630-2666">타원의 그래픽 경로를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2666">Adds an ellipse to the graphics path.</span></span>  
  
-   <span data-ttu-id="db630-2667">화면에서 경로 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2667">Fills the path on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#103](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#103)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#103](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#103)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#103](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#103)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-2668"><paramref name="brush" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2668"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="db630-2669">또는</span><span class="sxs-lookup"><span data-stu-id="db630-2669">-or-</span></span> 
 <span data-ttu-id="db630-2670"><paramref name="path" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2670"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FillPie">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db630-2671">좌표 쌍, 너비, 높이 및 두 개의 방사형 선에 의해 지정된 타원에 의해 정의되는 원형 섹션의 내부를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2671">Fills the interior of a pie section defined by an ellipse specified by a pair of coordinates, a width, a height, and two radial lines.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FillPie">
      <MemberSignature Language="C#" Value="public void FillPie (System.Drawing.Brush brush, System.Drawing.Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillPie(class System.Drawing.Brush brush, valuetype System.Drawing.Rectangle rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillPie(System::Drawing::Brush ^ brush, System::Drawing::Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.FillPie : System.Drawing.Brush * System.Drawing.Rectangle * single * single -&gt; unit" Usage="graphics.FillPie (brush, rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="db630-2672">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2672"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="rect"><span data-ttu-id="db630-2673">원형 섹션이 발생된 타원을 정의하는 경계 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2673"><see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding rectangle that defines the ellipse from which the pie section comes.</span></span></param>
        <param name="startAngle"><span data-ttu-id="db630-2674">x-축에서 원형 섹션의 첫째 면까지 시계 방향으로 측정한 각도(단위: 도)입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2674">Angle in degrees measured clockwise from the x-axis to the first side of the pie section.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="db630-2675"><paramref name="startAngle" /> 매개 변수에서 원형 섹션의 둘째 면까지 시계 방향으로 측정한 각도(단위: 도)입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2675">Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie section.</span></span></param>
        <summary><span data-ttu-id="db630-2676"><see cref="T:System.Drawing.RectangleF" /> 구조체와 두 개의 방사형 선에 의해 지정된 타원에 의해 정의되는 원형 섹션의 내부를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2676">Fills the interior of a pie section defined by an ellipse specified by a <see cref="T:System.Drawing.RectangleF" /> structure and two radial lines.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2677">이 메서드는 호의 끝점을 사용 하 여 교차 하는 두 개의 방사형 선에 타원의 호에서 정의 되는 원형 섹션의 내부를 채웁니다. 줄임표는 경계 사각형에 의해 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2677">This method fills the interior of a pie section defined by an arc of an ellipse and the two radial lines that intersect with the endpoints of the arc. The ellipse is defined by the bounding rectangle.</span></span> <span data-ttu-id="db630-2678">원형 섹션이 정의한 두 개의 방사형 선에 이루어져를 `startAngle` 및 `sweepAngle` 매개 변수 및 타원을 사용 하 여 방사형 해당 줄의 교차 부분 간에 호입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2678">The pie section consists of the two radial lines defined by the `startAngle` and `sweepAngle` parameters and the arc between the intersections of those radial lines with the ellipse.</span></span>  
  
 <span data-ttu-id="db630-2679">경우는 `sweepAngle` 매개 변수 보다 작거나-360도 360도 보다 크거나, 360도 또는-360도 각각 것 처럼 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2679">If the `sweepAngle` parameter is greater than 360 degrees or less than -360 degrees, it is treated as if it were 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2680">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2680">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-2681">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2681">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-2682">빨간색 단색 브러시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2682">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="db630-2683">타원을 제한 하는 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2683">Creates a rectangle that bounds an ellipse.</span></span>  
  
-   <span data-ttu-id="db630-2684">(X 축)에 상대적인 시작 각도 및 스윕 각도 (시계 방향으로 둘 다)을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2684">Defines the start angle (relative to the x axis) and the sweep angle (both in a clockwise direction).</span></span>  
  
-   <span data-ttu-id="db630-2685">화면에서 타원의 원형 영역을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2685">Fills the pie-shaped area of the ellipse on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#104](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#104)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#104](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#104)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#104](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#104)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-2686"><paramref name="brush" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2686"><paramref name="brush" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillPie">
      <MemberSignature Language="C#" Value="public void FillPie (System.Drawing.Brush brush, int x, int y, int width, int height, int startAngle, int sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillPie(class System.Drawing.Brush brush, int32 x, int32 y, int32 width, int32 height, int32 startAngle, int32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillPie(System::Drawing::Brush ^ brush, int x, int y, int width, int height, int startAngle, int sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.FillPie : System.Drawing.Brush * int * int * int * int * int * int -&gt; unit" Usage="graphics.FillPie (brush, x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="startAngle" Type="System.Int32" />
        <Parameter Name="sweepAngle" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="db630-2687">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2687"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="x"><span data-ttu-id="db630-2688">원형 섹션이 발생된 타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2688">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</span></span></param>
        <param name="y"><span data-ttu-id="db630-2689">원형 섹션이 발생된 타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2689">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</span></span></param>
        <param name="width"><span data-ttu-id="db630-2690">원형 섹션이 발생된 타원을 정의하는 경계 사각형의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2690">Width of the bounding rectangle that defines the ellipse from which the pie section comes.</span></span></param>
        <param name="height"><span data-ttu-id="db630-2691">원형 섹션이 발생된 타원을 정의하는 경계 사각형의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2691">Height of the bounding rectangle that defines the ellipse from which the pie section comes.</span></span></param>
        <param name="startAngle"><span data-ttu-id="db630-2692">x-축에서 원형 섹션의 첫째 면까지 시계 방향으로 측정한 각도(단위: 도)입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2692">Angle in degrees measured clockwise from the x-axis to the first side of the pie section.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="db630-2693"><paramref name="startAngle" /> 매개 변수에서 원형 섹션의 둘째 면까지 시계 방향으로 측정한 각도(단위: 도)입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2693">Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie section.</span></span></param>
        <summary><span data-ttu-id="db630-2694">좌표 쌍, 너비, 높이 및 두 개의 방사형 선에 의해 지정된 타원에 의해 정의되는 원형 섹션의 내부를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2694">Fills the interior of a pie section defined by an ellipse specified by a pair of coordinates, a width, a height, and two radial lines.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2695">이 메서드는 호의 끝점을 사용 하 여 교차 하는 두 개의 방사형 선에 타원의 호에서 정의 되는 원형 섹션의 내부를 채웁니다. 줄임표는 경계 사각형에 의해 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2695">This method fills the interior of a pie section defined by an arc of an ellipse and the two radial lines that intersect with the endpoints of the arc. The ellipse is defined by the bounding rectangle.</span></span> <span data-ttu-id="db630-2696">원형 섹션이 정의한 두 개의 방사형 선에 이루어져를 `startAngle` 및 `sweepAngle` 매개 변수 및 타원을 사용 하 여 방사형 해당 줄의 교차 부분 간에 호입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2696">The pie section consists of the two radial lines defined by the `startAngle` and `sweepAngle` parameters and the arc between the intersections of those radial lines with the ellipse.</span></span>  
  
 <span data-ttu-id="db630-2697">경우는 `sweepAngle` 매개 변수 보다 작거나-360도 360도 보다 크거나, 360도 또는-360도 각각 것 처럼 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2697">If the `sweepAngle` parameter is greater than 360 degrees or less than -360 degrees, it is treated as if it were 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2698">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2698">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-2699">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2699">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-2700">빨간색 단색 브러시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2700">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="db630-2701">타원을 제한 하는 사각형의 크기와 위치를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2701">Creates the location and size of a rectangle that bounds an ellipse.</span></span>  
  
-   <span data-ttu-id="db630-2702">(X 축)에 상대적인 시작 각도 및 스윕 각도 (시계 방향으로 둘 다)을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2702">Defines the start angle (relative to the x axis) and the sweep angle (both in a clockwise direction).</span></span>  
  
-   <span data-ttu-id="db630-2703">화면에서 타원의 원형 영역을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2703">Fills the pie-shaped area of the ellipse on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#105](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#105)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#105](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#105)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#105](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#105)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-2704"><paramref name="brush" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2704"><paramref name="brush" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillPie">
      <MemberSignature Language="C#" Value="public void FillPie (System.Drawing.Brush brush, float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillPie(class System.Drawing.Brush brush, float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillPie(System::Drawing::Brush ^ brush, float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.FillPie : System.Drawing.Brush * single * single * single * single * single * single -&gt; unit" Usage="graphics.FillPie (brush, x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="db630-2705">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2705"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="x"><span data-ttu-id="db630-2706">원형 섹션이 발생된 타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2706">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</span></span></param>
        <param name="y"><span data-ttu-id="db630-2707">원형 섹션이 발생된 타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2707">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</span></span></param>
        <param name="width"><span data-ttu-id="db630-2708">원형 섹션이 발생된 타원을 정의하는 경계 사각형의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2708">Width of the bounding rectangle that defines the ellipse from which the pie section comes.</span></span></param>
        <param name="height"><span data-ttu-id="db630-2709">원형 섹션이 발생된 타원을 정의하는 경계 사각형의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2709">Height of the bounding rectangle that defines the ellipse from which the pie section comes.</span></span></param>
        <param name="startAngle"><span data-ttu-id="db630-2710">x-축에서 원형 섹션의 첫째 면까지 시계 방향으로 측정한 각도(단위: 도)입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2710">Angle in degrees measured clockwise from the x-axis to the first side of the pie section.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="db630-2711"><paramref name="startAngle" /> 매개 변수에서 원형 섹션의 둘째 면까지 시계 방향으로 측정한 각도(단위: 도)입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2711">Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie section.</span></span></param>
        <summary><span data-ttu-id="db630-2712">좌표 쌍, 너비, 높이 및 두 개의 방사형 선에 의해 지정된 타원에 의해 정의되는 원형 섹션의 내부를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2712">Fills the interior of a pie section defined by an ellipse specified by a pair of coordinates, a width, a height, and two radial lines.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2713">이 메서드는 호의 끝점을 사용 하 여 교차 하는 두 개의 방사형 선에 타원의 호에서 정의 되는 원형 섹션의 내부를 채웁니다. 줄임표는 경계 사각형에 의해 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2713">This method fills the interior of a pie section defined by an arc of an ellipse and the two radial lines that intersect with the endpoints of the arc. The ellipse is defined by the bounding rectangle.</span></span> <span data-ttu-id="db630-2714">원형 섹션이 정의한 두 개의 방사형 선에 이루어져 합니다 `startAngle` 및 `sweepAngle` 매개 변수 및 타원을 사용 하 여 방사형 해당 줄의 교차 부분 간에 호.</span><span class="sxs-lookup"><span data-stu-id="db630-2714">The pie section consists of the two radial lines defined by the `startAngle` and `sweepAngle` parameters, and the arc between the intersections of those radial lines with the ellipse.</span></span>  
  
 <span data-ttu-id="db630-2715">경우는 `sweepAngle` 매개 변수 보다 작거나-360도 360도 보다 크거나, 360도 또는-360도 각각 것 처럼 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2715">If the `sweepAngle` parameter is greater than 360 degrees or less than -360 degrees, it is treated as if it were 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2716">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2716">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-2717">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2717">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-2718">빨간색 단색 브러시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2718">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="db630-2719">타원을 제한 하는 사각형의 크기와 위치를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2719">Creates the location and size of a rectangle that bounds an ellipse.</span></span>  
  
-   <span data-ttu-id="db630-2720">(X 축)에 상대적인 시작 각도 및 스윕 각도 (시계 방향으로 둘 다)을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2720">Defines the start angle (relative to the x axis) and the sweep angle (both in a clockwise direction).</span></span>  
  
-   <span data-ttu-id="db630-2721">화면에서 타원의 원형 영역을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2721">Fills the pie-shaped area of the ellipse on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#106](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#106)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#106](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#106)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#106](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#106)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-2722"><paramref name="brush" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2722"><paramref name="brush" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FillPolygon">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db630-2723"><see cref="T:System.Drawing.Point" /> 구조체에 의해 지정된 점의 배열에 의해 정의되는 다각형의 내부를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2723">Fills the interior of a polygon defined by an array of points specified by <see cref="T:System.Drawing.Point" /> structures.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FillPolygon">
      <MemberSignature Language="C#" Value="public void FillPolygon (System.Drawing.Brush brush, System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillPolygon(class System.Drawing.Brush brush, valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillPolygon(System::Drawing::Brush ^ brush, cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.FillPolygon : System.Drawing.Brush * System.Drawing.Point[] -&gt; unit" Usage="graphics.FillPolygon (brush, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="db630-2724">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2724"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="points"><span data-ttu-id="db630-2725">채울 다각형의 꼭짓점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2725">Array of <see cref="T:System.Drawing.Point" /> structures that represent the vertices of the polygon to fill.</span></span></param>
        <summary><span data-ttu-id="db630-2726"><see cref="T:System.Drawing.Point" /> 구조체에 의해 지정된 점의 배열에 의해 정의되는 다각형의 내부를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2726">Fills the interior of a polygon defined by an array of points specified by <see cref="T:System.Drawing.Point" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2727">배열에서 두 연속 점 모든 다각형의 한 쪽을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2727">Every two consecutive points in the array specify a side of the polygon.</span></span> <span data-ttu-id="db630-2728">또한 첫 번째 지점과 마지막 지점 교차 하지 않을 경우 다각형의 닫는 쪽을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2728">In addition, if the last point and the first point do not coincide, they specify the closing side of the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2729">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2729">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-2730">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2730">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-2731">파란색 단색 브러시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2731">Creates a solid blue brush.</span></span>  
  
-   <span data-ttu-id="db630-2732">7 개의 점이 다각형의 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2732">Creates an array of seven points to define a polygon.</span></span>  
  
-   <span data-ttu-id="db630-2733">화면에 다각형 영역을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2733">Fills the polygonal area on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#107](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#107)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#107](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#107)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#107](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#107)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-2734"><paramref name="brush" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2734"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="db630-2735">또는</span><span class="sxs-lookup"><span data-stu-id="db630-2735">-or-</span></span> 
 <span data-ttu-id="db630-2736"><paramref name="points" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2736"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillPolygon">
      <MemberSignature Language="C#" Value="public void FillPolygon (System.Drawing.Brush brush, System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillPolygon(class System.Drawing.Brush brush, valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillPolygon(System::Drawing::Brush ^ brush, cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.FillPolygon : System.Drawing.Brush * System.Drawing.PointF[] -&gt; unit" Usage="graphics.FillPolygon (brush, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="db630-2737">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2737"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="points"><span data-ttu-id="db630-2738">채울 다각형의 꼭짓점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2738">Array of <see cref="T:System.Drawing.PointF" /> structures that represent the vertices of the polygon to fill.</span></span></param>
        <summary><span data-ttu-id="db630-2739"><see cref="T:System.Drawing.PointF" /> 구조체에 의해 지정된 점의 배열에 의해 정의되는 다각형의 내부를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2739">Fills the interior of a polygon defined by an array of points specified by <see cref="T:System.Drawing.PointF" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2740">배열에서 두 연속 점 모든 다각형의 한 쪽을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2740">Every two consecutive points in the array specify a side of the polygon.</span></span> <span data-ttu-id="db630-2741">또한 첫 번째 지점과 마지막 지점 교차 하지 않을 경우 다각형의 닫는 쪽을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2741">In addition, if the last point and the first point do not coincide, they specify the closing side of the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2742">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2742">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-2743">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2743">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-2744">파란색 단색 브러시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2744">Creates a solid blue brush.</span></span>  
  
-   <span data-ttu-id="db630-2745">7 개의 점이 다각형의 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2745">Creates an array of seven points to define a polygon.</span></span>  
  
-   <span data-ttu-id="db630-2746">화면에 다각형 영역을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2746">Fills the polygonal area on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#109](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#109)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#109](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#109)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#109](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#109)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-2747"><paramref name="brush" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2747"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="db630-2748">또는</span><span class="sxs-lookup"><span data-stu-id="db630-2748">-or-</span></span> 
 <span data-ttu-id="db630-2749"><paramref name="points" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2749"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillPolygon">
      <MemberSignature Language="C#" Value="public void FillPolygon (System.Drawing.Brush brush, System.Drawing.Point[] points, System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillPolygon(class System.Drawing.Brush brush, valuetype System.Drawing.Point[] points, valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillPolygon(System::Drawing::Brush ^ brush, cli::array &lt;System::Drawing::Point&gt; ^ points, System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberSignature Language="F#" Value="member this.FillPolygon : System.Drawing.Brush * System.Drawing.Point[] * System.Drawing.Drawing2D.FillMode -&gt; unit" Usage="graphics.FillPolygon (brush, points, fillMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="db630-2750">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2750"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="points"><span data-ttu-id="db630-2751">채울 다각형의 꼭짓점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2751">Array of <see cref="T:System.Drawing.Point" /> structures that represent the vertices of the polygon to fill.</span></span></param>
        <param name="fillMode"><span data-ttu-id="db630-2752">채우기의 스타일을 결정하는 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2752">Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines the style of the fill.</span></span></param>
        <summary><span data-ttu-id="db630-2753">지정된 채우기 모드를 사용하여 <see cref="T:System.Drawing.Point" /> 구조체에 의해 지정된 점의 배열에 의해 정의되는 다각형의 내부를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2753">Fills the interior of a polygon defined by an array of points specified by <see cref="T:System.Drawing.Point" /> structures using the specified fill mode.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2754">배열에서 두 연속 점 모든 다각형의 한 쪽을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2754">Every two consecutive points in the array specify a side of the polygon.</span></span> <span data-ttu-id="db630-2755">또한 첫 번째 지점과 마지막 지점 교차 하지 않을 경우 다각형의 닫는 쪽을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2755">In addition, if the last point and the first point do not coincide, they specify the closing side of the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2756">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2756">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-2757">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2757">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-2758">파란색 단색 브러시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2758">Creates a solid blue brush.</span></span>  
  
-   <span data-ttu-id="db630-2759">7 개의 점이 다각형의 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2759">Creates an array of seven points to define a polygon.</span></span>  
  
-   <span data-ttu-id="db630-2760">채우기 모드를 설정 <xref:System.Drawing.Drawing2D.FillMode.Winding>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2760">Sets the fill mode to <xref:System.Drawing.Drawing2D.FillMode.Winding>.</span></span>  
  
-   <span data-ttu-id="db630-2761">화면에 다각형 영역을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2761">Fills the polygonal area on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#108](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#108)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#108](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#108)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#108](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#108)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-2762"><paramref name="brush" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2762"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="db630-2763">또는</span><span class="sxs-lookup"><span data-stu-id="db630-2763">-or-</span></span> 
 <span data-ttu-id="db630-2764"><paramref name="points" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2764"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillPolygon">
      <MemberSignature Language="C#" Value="public void FillPolygon (System.Drawing.Brush brush, System.Drawing.PointF[] points, System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillPolygon(class System.Drawing.Brush brush, valuetype System.Drawing.PointF[] points, valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillPolygon(System::Drawing::Brush ^ brush, cli::array &lt;System::Drawing::PointF&gt; ^ points, System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberSignature Language="F#" Value="member this.FillPolygon : System.Drawing.Brush * System.Drawing.PointF[] * System.Drawing.Drawing2D.FillMode -&gt; unit" Usage="graphics.FillPolygon (brush, points, fillMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="db630-2765">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2765"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="points"><span data-ttu-id="db630-2766">채울 다각형의 꼭짓점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2766">Array of <see cref="T:System.Drawing.PointF" /> structures that represent the vertices of the polygon to fill.</span></span></param>
        <param name="fillMode"><span data-ttu-id="db630-2767">채우기의 스타일을 결정하는 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2767">Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines the style of the fill.</span></span></param>
        <summary><span data-ttu-id="db630-2768">지정된 채우기 모드를 사용하여 <see cref="T:System.Drawing.PointF" /> 구조체에 의해 지정된 점의 배열에 의해 정의되는 다각형의 내부를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2768">Fills the interior of a polygon defined by an array of points specified by <see cref="T:System.Drawing.PointF" /> structures using the specified fill mode.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2769">배열에서 두 연속 점 모든 다각형의 한 쪽을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2769">Every two consecutive points in the array specify a side of the polygon.</span></span> <span data-ttu-id="db630-2770">또한 첫 번째 지점과 마지막 지점 교차 하지 않을 경우 다각형의 닫는 쪽을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2770">In addition, if the last point and the first point do not coincide, they specify the closing side of the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2771">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2771">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-2772">코드에는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2772">The code performs the following action:</span></span>  
  
-   <span data-ttu-id="db630-2773">파란색 단색 브러시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2773">Creates a solid blue brush.</span></span>  
  
-   <span data-ttu-id="db630-2774">7 개의 점이 다각형의 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2774">Creates an array of seven points to define a polygon.</span></span>  
  
-   <span data-ttu-id="db630-2775">채우기 모드를 설정 <xref:System.Drawing.Drawing2D.FillMode.Winding>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2775">Sets the fill mode to <xref:System.Drawing.Drawing2D.FillMode.Winding>.</span></span>  
  
-   <span data-ttu-id="db630-2776">화면에 다각형 영역을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2776">Fills the polygonal area on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#110](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#110)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#110](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#110)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#110](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#110)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-2777"><paramref name="brush" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2777"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="db630-2778">또는</span><span class="sxs-lookup"><span data-stu-id="db630-2778">-or-</span></span> 
 <span data-ttu-id="db630-2779"><paramref name="points" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2779"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FillRectangle">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db630-2780">좌표 쌍, 너비 및 높이로 지정된 사각형의 내부를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2780">Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FillRectangle">
      <MemberSignature Language="C#" Value="public void FillRectangle (System.Drawing.Brush brush, System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillRectangle(class System.Drawing.Brush brush, valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillRectangle(System::Drawing::Brush ^ brush, System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.FillRectangle : System.Drawing.Brush * System.Drawing.Rectangle -&gt; unit" Usage="graphics.FillRectangle (brush, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="db630-2781">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2781"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="rect"><span data-ttu-id="db630-2782">채울 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2782"><see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle to fill.</span></span></param>
        <summary><span data-ttu-id="db630-2783"><see cref="T:System.Drawing.Rectangle" /> 구조체의 의해 지정된 사각형의 내부를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2783">Fills the interior of a rectangle specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2784">이 메서드는 정의 된 사각형의 내부를 채웁니다는 `rect` 매개 변수를 지정 된 왼쪽 위를 포함 하 여 모서리 및 계산 된 최대 하단 및 아래쪽 가장자리입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2784">This method fills the interior of the rectangle defined by the `rect` parameter, including the specified upper-left corner and up to the calculated lower and bottom edges.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2785">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2785">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-2786">코드에는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2786">The code performs the following action:</span></span>  
  
-   <span data-ttu-id="db630-2787">파란색 단색 브러시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2787">Creates a solid blue brush.</span></span>  
  
-   <span data-ttu-id="db630-2788">사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2788">Creates a rectangle.</span></span>  
  
-   <span data-ttu-id="db630-2789">화면에서 사각형 영역을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2789">Fills the rectangular area on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#111](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#111)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#111](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#111)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#111](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#111)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-2790"><paramref name="brush" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2790"><paramref name="brush" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillRectangle">
      <MemberSignature Language="C#" Value="public void FillRectangle (System.Drawing.Brush brush, System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillRectangle(class System.Drawing.Brush brush, valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillRectangle(System::Drawing::Brush ^ brush, System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.FillRectangle : System.Drawing.Brush * System.Drawing.RectangleF -&gt; unit" Usage="graphics.FillRectangle (brush, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="db630-2791">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2791"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="rect"><span data-ttu-id="db630-2792">채울 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2792"><see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle to fill.</span></span></param>
        <summary><span data-ttu-id="db630-2793"><see cref="T:System.Drawing.RectangleF" /> 구조체의 의해 지정된 사각형의 내부를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2793">Fills the interior of a rectangle specified by a <see cref="T:System.Drawing.RectangleF" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2794">이 메서드는 정의 된 사각형의 내부를 채웁니다는 `rect` 매개 변수를 지정 된 왼쪽 위를 포함 하 여 모서리 및 계산 된 최대 하단 및 아래쪽 가장자리입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2794">This method fills the interior of the rectangle defined by the `rect` parameter, including the specified upper-left corner and up to the calculated lower and bottom edges.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2795">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2795">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-2796">코드에는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2796">The code performs the following action:</span></span>  
  
-   <span data-ttu-id="db630-2797">파란색 단색 브러시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2797">Creates a solid blue brush.</span></span>  
  
-   <span data-ttu-id="db630-2798">사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2798">Creates a rectangle.</span></span>  
  
-   <span data-ttu-id="db630-2799">화면에서 사각형 영역을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2799">Fills the rectangular area on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#112](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#112)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#112](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#112)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#112](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#112)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-2800"><paramref name="brush" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2800"><paramref name="brush" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillRectangle">
      <MemberSignature Language="C#" Value="public void FillRectangle (System.Drawing.Brush brush, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillRectangle(class System.Drawing.Brush brush, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillRectangle(System::Drawing::Brush ^ brush, int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.FillRectangle : System.Drawing.Brush * int * int * int * int -&gt; unit" Usage="graphics.FillRectangle (brush, x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="db630-2801">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2801"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="x"><span data-ttu-id="db630-2802">채울 사각형의 왼쪽 위 모퉁이에 대한 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2802">The x-coordinate of the upper-left corner of the rectangle to fill.</span></span></param>
        <param name="y"><span data-ttu-id="db630-2803">채울 사각형의 왼쪽 위 모퉁이에 대한 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2803">The y-coordinate of the upper-left corner of the rectangle to fill.</span></span></param>
        <param name="width"><span data-ttu-id="db630-2804">채울 사각형의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2804">Width of the rectangle to fill.</span></span></param>
        <param name="height"><span data-ttu-id="db630-2805">채울 사각형의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2805">Height of the rectangle to fill.</span></span></param>
        <summary><span data-ttu-id="db630-2806">좌표 쌍, 너비 및 높이로 지정된 사각형의 내부를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2806">Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2807">이 메서드는 정의 된 사각형의 내부를 채웁니다 합니다`x`, `y`를 `width`, 및 `height` 매개 변수를 지정 된 왼쪽 위를 포함 하 여 모서리 및 하단까지 계산 및 아래쪽 가장자리입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2807">This method fills the interior of the rectangle defined by the`x`, `y`, `width`, and `height` parameters, including the specified upper-left corner and up to the calculated lower and bottom edges.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2808">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2808">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-2809">코드에는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2809">The code performs the following action:</span></span>  
  
-   <span data-ttu-id="db630-2810">파란색 단색 브러시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2810">Creates a solid blue brush.</span></span>  
  
-   <span data-ttu-id="db630-2811">사각형의 크기와 위치를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2811">Creates the location and size of a rectangle.</span></span>  
  
-   <span data-ttu-id="db630-2812">화면에서 사각형 영역을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2812">Fills the rectangular area on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#113](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#113)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#113](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#113)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#113](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#113)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-2813"><paramref name="brush" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2813"><paramref name="brush" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillRectangle">
      <MemberSignature Language="C#" Value="public void FillRectangle (System.Drawing.Brush brush, float x, float y, float width, float height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillRectangle(class System.Drawing.Brush brush, float32 x, float32 y, float32 width, float32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillRectangle(System::Drawing::Brush ^ brush, float x, float y, float width, float height);" />
      <MemberSignature Language="F#" Value="member this.FillRectangle : System.Drawing.Brush * single * single * single * single -&gt; unit" Usage="graphics.FillRectangle (brush, x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="db630-2814">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2814"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="x"><span data-ttu-id="db630-2815">채울 사각형의 왼쪽 위 모퉁이에 대한 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2815">The x-coordinate of the upper-left corner of the rectangle to fill.</span></span></param>
        <param name="y"><span data-ttu-id="db630-2816">채울 사각형의 왼쪽 위 모퉁이에 대한 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2816">The y-coordinate of the upper-left corner of the rectangle to fill.</span></span></param>
        <param name="width"><span data-ttu-id="db630-2817">채울 사각형의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2817">Width of the rectangle to fill.</span></span></param>
        <param name="height"><span data-ttu-id="db630-2818">채울 사각형의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2818">Height of the rectangle to fill.</span></span></param>
        <summary><span data-ttu-id="db630-2819">좌표 쌍, 너비 및 높이로 지정된 사각형의 내부를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2819">Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2820">이 메서드는 정의 된 사각형의 내부를 채웁니다 합니다 `x`, `y`를 `width`, 및 `height` 매개 변수를 지정 된 왼쪽 위를 포함 하 여 모서리 및 하단까지 계산 및 아래쪽 가장자리입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2820">This method fills the interior of the rectangle defined by the `x`, `y`, `width`, and `height` parameters, including the specified upper-left corner and up to the calculated lower and bottom edges.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2821">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2821">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-2822">코드에는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2822">The code performs the following action:</span></span>  
  
-   <span data-ttu-id="db630-2823">파란색 단색 브러시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2823">Creates a solid blue brush.</span></span>  
  
-   <span data-ttu-id="db630-2824">사각형의 크기와 위치를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2824">Creates the location and size of a rectangle.</span></span>  
  
-   <span data-ttu-id="db630-2825">화면에서 사각형 영역을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2825">Fills the rectangular area on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#114](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#114)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#114](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#114)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#114](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#114)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-2826"><paramref name="brush" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2826"><paramref name="brush" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FillRectangles">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db630-2827"><see cref="T:System.Drawing.Rectangle" /> 구조체에 의해 지정된 일련의 사각형의 내부를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2827">Fills the interiors of a series of rectangles specified by <see cref="T:System.Drawing.Rectangle" /> structures.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FillRectangles">
      <MemberSignature Language="C#" Value="public void FillRectangles (System.Drawing.Brush brush, System.Drawing.Rectangle[] rects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillRectangles(class System.Drawing.Brush brush, valuetype System.Drawing.Rectangle[] rects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.Rectangle[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillRectangles(System::Drawing::Brush ^ brush, cli::array &lt;System::Drawing::Rectangle&gt; ^ rects);" />
      <MemberSignature Language="F#" Value="member this.FillRectangles : System.Drawing.Brush * System.Drawing.Rectangle[] -&gt; unit" Usage="graphics.FillRectangles (brush, rects)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="rects" Type="System.Drawing.Rectangle[]" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="db630-2828">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2828"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="rects"><span data-ttu-id="db630-2829">채울 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2829">Array of <see cref="T:System.Drawing.Rectangle" /> structures that represent the rectangles to fill.</span></span></param>
        <summary><span data-ttu-id="db630-2830"><see cref="T:System.Drawing.Rectangle" /> 구조체에 의해 지정된 일련의 사각형의 내부를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2830">Fills the interiors of a series of rectangles specified by <see cref="T:System.Drawing.Rectangle" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="db630-2831">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2831">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-2832">코드에는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2832">The code performs the following action:</span></span>  
  
-   <span data-ttu-id="db630-2833">파란색 단색 브러시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2833">Creates a solid blue brush.</span></span>  
  
-   <span data-ttu-id="db630-2834">세 개의 사각형의 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2834">Creates an array of three rectangles.</span></span>  
  
-   <span data-ttu-id="db630-2835">화면에 세 개의 사각형 영역을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2835">Fills the three rectangular areas on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#115](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#115)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#115](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#115)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#115](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#115)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-2836"><paramref name="brush" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2836"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="db630-2837">또는</span><span class="sxs-lookup"><span data-stu-id="db630-2837">-or-</span></span> 
 <span data-ttu-id="db630-2838"><paramref name="rects" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2838"><paramref name="rects" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="db630-2839"><paramref name="rects" />이 길이가 0인 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2839"><paramref name="rects" /> is a zero-length array.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillRectangles">
      <MemberSignature Language="C#" Value="public void FillRectangles (System.Drawing.Brush brush, System.Drawing.RectangleF[] rects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillRectangles(class System.Drawing.Brush brush, valuetype System.Drawing.RectangleF[] rects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillRectangles(System::Drawing::Brush ^ brush, cli::array &lt;System::Drawing::RectangleF&gt; ^ rects);" />
      <MemberSignature Language="F#" Value="member this.FillRectangles : System.Drawing.Brush * System.Drawing.RectangleF[] -&gt; unit" Usage="graphics.FillRectangles (brush, rects)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="rects" Type="System.Drawing.RectangleF[]" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="db630-2840">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2840"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="rects"><span data-ttu-id="db630-2841">채울 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2841">Array of <see cref="T:System.Drawing.RectangleF" /> structures that represent the rectangles to fill.</span></span></param>
        <summary><span data-ttu-id="db630-2842"><see cref="T:System.Drawing.RectangleF" /> 구조체에 의해 지정된 일련의 사각형의 내부를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2842">Fills the interiors of a series of rectangles specified by <see cref="T:System.Drawing.RectangleF" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="db630-2843">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2843">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-2844">코드에는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2844">The code performs the following action:</span></span>  
  
-   <span data-ttu-id="db630-2845">파란색 단색 브러시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2845">Creates a solid blue brush.</span></span>  
  
-   <span data-ttu-id="db630-2846">세 개의 사각형의 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2846">Creates an array of three rectangles.</span></span>  
  
-   <span data-ttu-id="db630-2847">화면에 세 개의 사각형 영역을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2847">Fills the three rectangular areas on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#116](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#116)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#116](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#116)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#116](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#116)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-2848"><paramref name="brush" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2848"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="db630-2849">또는</span><span class="sxs-lookup"><span data-stu-id="db630-2849">-or-</span></span> 
 <span data-ttu-id="db630-2850"><paramref name="rects" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2850"><paramref name="rects" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="db630-2851"><paramref name="Rects" />이 길이가 0인 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2851"><paramref name="Rects" /> is a zero-length array.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillRegion">
      <MemberSignature Language="C#" Value="public void FillRegion (System.Drawing.Brush brush, System.Drawing.Region region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillRegion(class System.Drawing.Brush brush, class System.Drawing.Region region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillRegion(System::Drawing::Brush ^ brush, System::Drawing::Region ^ region);" />
      <MemberSignature Language="F#" Value="member this.FillRegion : System.Drawing.Brush * System.Drawing.Region -&gt; unit" Usage="graphics.FillRegion (brush, region)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="region" Type="System.Drawing.Region" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="db630-2852">채우기의 특징을 결정하는 <see cref="T:System.Drawing.Brush" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2852"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="region"><span data-ttu-id="db630-2853">채울 영역을 나타내는 <see cref="T:System.Drawing.Region" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2853"><see cref="T:System.Drawing.Region" /> that represents the area to fill.</span></span></param>
        <summary><span data-ttu-id="db630-2854"><see cref="T:System.Drawing.Region" />의 내부를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2854">Fills the interior of a <see cref="T:System.Drawing.Region" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2855"><xref:System.Drawing.Region> 사각형과 경로로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2855">A <xref:System.Drawing.Region> is composed of rectangles and paths.</span></span> <span data-ttu-id="db630-2856">지역 닫히지 않으면 세그먼트를 추가 닫습니다 첫 번째 지점과 마지막 지점에서 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2856">If the region is not closed, an additional segment is added from the last point to the first point to close it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2857">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2857">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-2858">코드에는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2858">The code performs the following action:</span></span>  
  
-   <span data-ttu-id="db630-2859">파란색 단색 브러시를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2859">Creates a solid blue brush.</span></span>  
  
-   <span data-ttu-id="db630-2860">사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2860">Creates a rectangle.</span></span>  
  
-   <span data-ttu-id="db630-2861">사각형 영역을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2861">Creates a rectangular region.</span></span>  
  
-   <span data-ttu-id="db630-2862">화면에서 사각형 영역을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2862">Fills the rectangular region on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#117](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#117)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#117](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#117)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#117](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#117)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-2863"><paramref name="brush" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2863"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="db630-2864">또는</span><span class="sxs-lookup"><span data-stu-id="db630-2864">-or-</span></span> 
 <span data-ttu-id="db630-2865"><paramref name="region" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2865"><paramref name="region" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Graphics ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Graphics ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="graphics.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="db630-2866">가비지 컬렉션이 회수하기 전에 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2866">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Flush">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db630-2867">모든 보류 중인 그래픽 작업을 강제로 실행하여 작업 마치기를 기다리지 않고 즉시 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2867">Forces execution of all pending graphics operations and returns immediately without waiting for the operations to finish.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="graphics.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="db630-2868">모든 보류 중인 그래픽 작업을 강제로 실행하여 작업 마치기를 기다리지 않고 즉시 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2868">Forces execution of all pending graphics operations and returns immediately without waiting for the operations to finish.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2869">이 메서드는 플러시를 시작 하 고 현재 실행 중인 모든 그래픽 작업이 완료 되기를 기다리지 않고 즉시 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2869">This method starts a flush and returns immediately without waiting for any currently executing graphics operation to finish.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush (System.Drawing.Drawing2D.FlushIntention intention);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush(valuetype System.Drawing.Drawing2D.FlushIntention intention) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.Flush(System.Drawing.Drawing2D.FlushIntention)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush (intention As FlushIntention)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush(System::Drawing::Drawing2D::FlushIntention intention);" />
      <MemberSignature Language="F#" Value="member this.Flush : System.Drawing.Drawing2D.FlushIntention -&gt; unit" Usage="graphics.Flush intention" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intention" Type="System.Drawing.Drawing2D.FlushIntention" />
      </Parameters>
      <Docs>
        <param name="intention"><span data-ttu-id="db630-2870">메서드가 즉시 반환하거나 모든 기존 작업을 마칠 때까지 기다리도록 지정하는 <see cref="T:System.Drawing.Drawing2D.FlushIntention" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2870">Member of the <see cref="T:System.Drawing.Drawing2D.FlushIntention" /> enumeration that specifies whether the method returns immediately or waits for any existing operations to finish.</span></span></param>
        <summary><span data-ttu-id="db630-2871">메서드가 대기 중이거나 대기 중이 아니거나 지정된 대로 모든 보류 중인 그래픽 작업을 강제로 실행하여 작업을 마치기 전에 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2871">Forces execution of all pending graphics operations with the method waiting or not waiting, as specified, to return before the operations finish.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2872">값이 <xref:System.Drawing.Drawing2D.FlushIntention.Flush> 에 대 한는 `intention` 매개 변수는 메서드가 값 플러시 시작 된 후 즉시 반환 지정 <xref:System.Drawing.Drawing2D.FlushIntention.Sync> 메서드 반환 하기 전에 모든 기존 작업이 완료 될 때까지 기다리도록 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2872">A value of <xref:System.Drawing.Drawing2D.FlushIntention.Flush> for the `intention` parameter specifies that the method return immediately after beginning the flush, while a value of <xref:System.Drawing.Drawing2D.FlushIntention.Sync> specifies that the method wait before returning until any existing operations finish.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromHdc">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db630-2873">디바이스 컨텍스트에 대한 지정된 핸들에서 새 <see cref="T:System.Drawing.Graphics" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2873">Creates a new <see cref="T:System.Drawing.Graphics" /> from the specified handle to a device context.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromHdc">
      <MemberSignature Language="C#" Value="public static System.Drawing.Graphics FromHdc (IntPtr hdc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Graphics FromHdc(native int hdc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FromHdc(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHdc (hdc As IntPtr) As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Graphics ^ FromHdc(IntPtr hdc);" />
      <MemberSignature Language="F#" Value="static member FromHdc : nativeint -&gt; System.Drawing.Graphics" Usage="System.Drawing.Graphics.FromHdc hdc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hdc" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hdc"><span data-ttu-id="db630-2874">디바이스 컨텍스트에 대한 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2874">Handle to a device context.</span></span></param>
        <summary><span data-ttu-id="db630-2875">디바이스 컨텍스트에 대한 지정된 핸들에서 새 <see cref="T:System.Drawing.Graphics" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2875">Creates a new <see cref="T:System.Drawing.Graphics" /> from the specified handle to a device context.</span></span></summary>
        <returns><span data-ttu-id="db630-2876">이 메서드는 지정된 디바이스 컨텍스트에 대한 새 <see cref="T:System.Drawing.Graphics" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2876">This method returns a new <see cref="T:System.Drawing.Graphics" /> for the specified device context.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2877">항상 호출 해야 합니다 <xref:System.Drawing.Graphics.Dispose%2A> 해제 하는 메서드에 <xref:System.Drawing.Graphics> 및 관련 된 리소스에서 만든를 <xref:System.Drawing.Graphics.FromHdc%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="db630-2877">You should always call the <xref:System.Drawing.Graphics.Dispose%2A> method to release the <xref:System.Drawing.Graphics> and related resources created by the <xref:System.Drawing.Graphics.FromHdc%2A> method.</span></span>  
  
 <span data-ttu-id="db630-2878">디스플레이 디바이스에 연결 된 ICM 색 프로필을 하는 경우에 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] 기본적으로 해당 프로필을 사용 하지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2878">Even if the display device has an associated ICM color profile, [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] will not use that profile by default.</span></span> <span data-ttu-id="db630-2879">ICM에 사용할 수 있도록를 <xref:System.Drawing.Graphics>, 생성 합니다 <xref:System.Drawing.Graphics> HDC (및 ICM_ON)를 전달 하면는 HDC에서를 `SetICMMode` 함수.</span><span class="sxs-lookup"><span data-stu-id="db630-2879">To enable ICM for a <xref:System.Drawing.Graphics>, construct the <xref:System.Drawing.Graphics> from an HDC after you pass the HDC (and ICM_ON) to the `SetICMMode` function.</span></span> <span data-ttu-id="db630-2880">다음 수행한 모든 그리기를 <xref:System.Drawing.Graphics> 디스플레이 디바이스와 연결 된 ICM 프로필에 따라 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2880">Then any drawing done by the <xref:System.Drawing.Graphics> will be adjusted according to the ICM profile associated with the display device.</span></span> <span data-ttu-id="db630-2881">ICM를 사용 하도록 설정 하면 성능이 저하 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2881">Enabling ICM will result in slower performance.</span></span>  
  
 <span data-ttu-id="db630-2882">호출 시 디바이스 컨텍스트 (예: 매핑 모드, 논리 단위 및 like) 상태의 <xref:System.Drawing.Graphics.FromHdc%2A> 렌더링 작업에 영향을 줄 수는 <xref:System.Drawing.Graphics>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2882">The state of the device context (mapping mode, logical unit, and the like) at the time you call <xref:System.Drawing.Graphics.FromHdc%2A> can affect rendering done by the <xref:System.Drawing.Graphics>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2883">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2883">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-2884">코드에는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2884">The code performs the following action:</span></span>  
  
-   <span data-ttu-id="db630-2885">내부 포인터 형식 변수를 만들고 `hdc` 형식의 그래픽 개체의 디바이스 컨텍스트에 대 한 핸들을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2885">Creates an internal pointer type variable `hdc` and sets it to the handle to the device context of the graphics object of the form.</span></span>  
  
-   <span data-ttu-id="db630-2886">사용 하 여 새 그래픽 개체를 만들고 `hdc`합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2886">Creates a new graphics object using `hdc`.</span></span>  
  
-   <span data-ttu-id="db630-2887">(화면)에 새 그래픽 개체를 사용 하 여 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2887">Draws a rectangle with the new graphics object (on the screen).</span></span>  
  
-   <span data-ttu-id="db630-2888">사용 하 여 새 그래픽 개체를 해제 `hdc`합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2888">Releases the new graphics object using `hdc`.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#118](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#118)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#118](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#118)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#118](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#118)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromHdc">
      <MemberSignature Language="C#" Value="public static System.Drawing.Graphics FromHdc (IntPtr hdc, IntPtr hdevice);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Graphics FromHdc(native int hdc, native int hdevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FromHdc(System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHdc (hdc As IntPtr, hdevice As IntPtr) As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Graphics ^ FromHdc(IntPtr hdc, IntPtr hdevice);" />
      <MemberSignature Language="F#" Value="static member FromHdc : nativeint * nativeint -&gt; System.Drawing.Graphics" Usage="System.Drawing.Graphics.FromHdc (hdc, hdevice)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hdc" Type="System.IntPtr" />
        <Parameter Name="hdevice" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hdc"><span data-ttu-id="db630-2889">디바이스 컨텍스트에 대한 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2889">Handle to a device context.</span></span></param>
        <param name="hdevice"><span data-ttu-id="db630-2890">디바이스 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2890">Handle to a device.</span></span></param>
        <summary><span data-ttu-id="db630-2891">디바이스 컨텍스트에 대한 지정된 핸들과 디바이스에 대한 핸들에서 새 <see cref="T:System.Drawing.Graphics" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2891">Creates a new <see cref="T:System.Drawing.Graphics" /> from the specified handle to a device context and handle to a device.</span></span></summary>
        <returns><span data-ttu-id="db630-2892">이 메서드는 지정된 디바이스 컨텍스트와 디바이스에 대한 새 <see cref="T:System.Drawing.Graphics" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2892">This method returns a new <see cref="T:System.Drawing.Graphics" /> for the specified device context and device.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2893">항상 호출 해야 합니다 <xref:System.Drawing.Graphics.Dispose%2A> 해제 하는 메서드에 <xref:System.Drawing.Graphics> 및 관련 된 리소스에서 만든를 <xref:System.Drawing.Graphics.FromHdc%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="db630-2893">You should always call the <xref:System.Drawing.Graphics.Dispose%2A> method to release the <xref:System.Drawing.Graphics> and related resources created by the <xref:System.Drawing.Graphics.FromHdc%2A> method.</span></span>  
  
 <span data-ttu-id="db630-2894">디스플레이 디바이스에 연결 된 ICM 색 프로필을 하는 경우에 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] 기본적으로 해당 프로필을 사용 하지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2894">Even if the display device has an associated ICM color profile, [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] will not use that profile by default.</span></span> <span data-ttu-id="db630-2895">ICM에 사용할 수 있도록를 <xref:System.Drawing.Graphics>, 생성 합니다 <xref:System.Drawing.Graphics> HDC (및 ICM_ON)를 전달 하면는 HDC에서를 `SetICMMode` 함수.</span><span class="sxs-lookup"><span data-stu-id="db630-2895">To enable ICM for a <xref:System.Drawing.Graphics>, construct the <xref:System.Drawing.Graphics> from an HDC after you pass the HDC (and ICM_ON) to the `SetICMMode` function.</span></span> <span data-ttu-id="db630-2896">다음 수행한 모든 그리기를 <xref:System.Drawing.Graphics> 디스플레이 디바이스와 연결 된 ICM 프로필에 따라 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2896">Then any drawing done by the <xref:System.Drawing.Graphics> will be adjusted according to the ICM profile associated with the display device.</span></span> <span data-ttu-id="db630-2897">ICM를 사용 하도록 설정 하면 성능이 저하 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2897">Enabling ICM will result in slower performance.</span></span>  
  
 <span data-ttu-id="db630-2898">호출 시 디바이스 컨텍스트 (예: 매핑 모드, 논리 단위 및 like) 상태의 <xref:System.Drawing.Graphics.FromHdc%2A> 렌더링 작업에 영향을 줄 수는 <xref:System.Drawing.Graphics>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2898">The state of the device context (mapping mode, logical unit, and the like) at the time you call <xref:System.Drawing.Graphics.FromHdc%2A> can affect rendering done by the <xref:System.Drawing.Graphics>.</span></span>  
  
 <span data-ttu-id="db630-2899">디바이스 핸들을 일반적으로 특정 프린터 기능 쿼리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2899">The device handle is typically used to query specific printer capabilities.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="db630-2900">비관리 코드에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2900">for access to unmanaged code.</span></span> <span data-ttu-id="db630-2901">열거형 관련: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2901">Related enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="FromHdcInternal">
      <MemberSignature Language="C#" Value="public static System.Drawing.Graphics FromHdcInternal (IntPtr hdc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Graphics FromHdcInternal(native int hdc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FromHdcInternal(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHdcInternal (hdc As IntPtr) As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Graphics ^ FromHdcInternal(IntPtr hdc);" />
      <MemberSignature Language="F#" Value="static member FromHdcInternal : nativeint -&gt; System.Drawing.Graphics" Usage="System.Drawing.Graphics.FromHdcInternal hdc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hdc" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hdc"><span data-ttu-id="db630-2902">디바이스 컨텍스트에 대한 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2902">Handle to a device context.</span></span></param>
        <summary><span data-ttu-id="db630-2903">지정된 디바이스 컨텍스트에 대한 <see cref="T:System.Drawing.Graphics" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2903">Returns a <see cref="T:System.Drawing.Graphics" /> for the specified device context.</span></span></summary>
        <returns><span data-ttu-id="db630-2904">지정된 디바이스 컨텍스트에 대한 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2904">A <see cref="T:System.Drawing.Graphics" /> for the specified device context.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2905">이 메서드는 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2905">This method should not be used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromHwnd">
      <MemberSignature Language="C#" Value="public static System.Drawing.Graphics FromHwnd (IntPtr hwnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Graphics FromHwnd(native int hwnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FromHwnd(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHwnd (hwnd As IntPtr) As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Graphics ^ FromHwnd(IntPtr hwnd);" />
      <MemberSignature Language="F#" Value="static member FromHwnd : nativeint -&gt; System.Drawing.Graphics" Usage="System.Drawing.Graphics.FromHwnd hwnd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwnd" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hwnd"><span data-ttu-id="db630-2906">창 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2906">Handle to a window.</span></span></param>
        <summary><span data-ttu-id="db630-2907">지정된 창에 대한 핸들에서 새 <see cref="T:System.Drawing.Graphics" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2907">Creates a new <see cref="T:System.Drawing.Graphics" /> from the specified handle to a window.</span></span></summary>
        <returns><span data-ttu-id="db630-2908">이 메서드는 지정된 창 핸들에 대한 새 <see cref="T:System.Drawing.Graphics" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2908">This method returns a new <see cref="T:System.Drawing.Graphics" /> for the specified window handle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2909">항상 호출 해야 합니다 <xref:System.Drawing.Graphics.Dispose%2A> 해제 하는 메서드에 <xref:System.Drawing.Graphics> 및 관련 된 리소스에서 만든를 <xref:System.Drawing.Graphics.FromHwnd%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="db630-2909">You should always call the <xref:System.Drawing.Graphics.Dispose%2A> method to release the <xref:System.Drawing.Graphics> and related resources created by the <xref:System.Drawing.Graphics.FromHwnd%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2910">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수인를 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기 뿐만 `thisForm`, <xref:System.Windows.Forms.Form> 예입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2910">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler, as well as `thisForm`, the <xref:System.Windows.Forms.Form> for the example.</span></span> <span data-ttu-id="db630-2911">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2911">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-2912">새 내부 포인터 변수를 만들고 `hwnd` 예제 폼의 핸들을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2912">Creates a new internal pointer variable `hwnd` and sets it to the handle of the example's form.</span></span>  
  
-   <span data-ttu-id="db630-2913">새 <xref:System.Drawing.Graphics> 핸들에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2913">Creates a new <xref:System.Drawing.Graphics> from the handle.</span></span>  
  
-   <span data-ttu-id="db630-2914">새 사각형을 그립니다 <xref:System.Drawing.Graphics> 빨간색 펜을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2914">Draws a rectangle to the new <xref:System.Drawing.Graphics> using a red pen.</span></span>  
  
-   <span data-ttu-id="db630-2915">새 삭제 <xref:System.Drawing.Graphics>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2915">Disposes the new <xref:System.Drawing.Graphics>.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#119](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#119)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#119](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#119)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#119](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#119)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="db630-2916">비관리 코드에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2916">for access to unmanaged code.</span></span> <span data-ttu-id="db630-2917">열거형 관련: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2917">Related enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="FromHwndInternal">
      <MemberSignature Language="C#" Value="public static System.Drawing.Graphics FromHwndInternal (IntPtr hwnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Graphics FromHwndInternal(native int hwnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FromHwndInternal(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHwndInternal (hwnd As IntPtr) As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Graphics ^ FromHwndInternal(IntPtr hwnd);" />
      <MemberSignature Language="F#" Value="static member FromHwndInternal : nativeint -&gt; System.Drawing.Graphics" Usage="System.Drawing.Graphics.FromHwndInternal hwnd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwnd" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hwnd"><span data-ttu-id="db630-2918">창 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2918">Handle to a window.</span></span></param>
        <summary><span data-ttu-id="db630-2919">지정된 창 핸들에 대한 새 <see cref="T:System.Drawing.Graphics" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2919">Creates a new <see cref="T:System.Drawing.Graphics" /> for the specified windows handle.</span></span></summary>
        <returns><span data-ttu-id="db630-2920">지정된 창 핸들에 대한 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2920">A <see cref="T:System.Drawing.Graphics" /> for the specified window handle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2921">이 메서드는 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2921">This method should not be used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromImage">
      <MemberSignature Language="C#" Value="public static System.Drawing.Graphics FromImage (System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Graphics FromImage(class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FromImage(System.Drawing.Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Graphics ^ FromImage(System::Drawing::Image ^ image);" />
      <MemberSignature Language="F#" Value="static member FromImage : System.Drawing.Image -&gt; System.Drawing.Graphics" Usage="System.Drawing.Graphics.FromImage image" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="db630-2922">새 <see cref="T:System.Drawing.Graphics" />를 만들 <see cref="T:System.Drawing.Image" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2922"><see cref="T:System.Drawing.Image" /> from which to create the new <see cref="T:System.Drawing.Graphics" />.</span></span></param>
        <summary><span data-ttu-id="db630-2923">지정된 <see cref="T:System.Drawing.Image" />에서 새 <see cref="T:System.Drawing.Graphics" />을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2923">Creates a new <see cref="T:System.Drawing.Graphics" /> from the specified <see cref="T:System.Drawing.Image" />.</span></span></summary>
        <returns><span data-ttu-id="db630-2924">이 메서드는 지정된 <see cref="T:System.Drawing.Image" />에 대한 새 <see cref="T:System.Drawing.Graphics" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2924">This method returns a new <see cref="T:System.Drawing.Graphics" /> for the specified <see cref="T:System.Drawing.Image" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2925">이미지를 인덱싱된 픽셀 형식에 있으면이 메서드는 메시지와 함께 예외를 throw, "그래픽 개체를 인덱싱된 픽셀 형식에는 이미지에서 만들 수 없습니다."</span><span class="sxs-lookup"><span data-stu-id="db630-2925">If the image has an indexed pixel format, this method throws an exception with the message, "A Graphics object cannot be created from an image that has an indexed pixel format."</span></span> <span data-ttu-id="db630-2926">인덱싱된 픽셀 형식 다음 목록에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2926">The indexed pixel formats are shown in the following list.</span></span>  
  
-   <xref:System.Drawing.Imaging.PixelFormat.Format1bppIndexed>  
  
-   <xref:System.Drawing.Imaging.PixelFormat.Format4bppIndexed>  
  
-   <xref:System.Drawing.Imaging.PixelFormat.Format8bppIndexed>  
  
 <span data-ttu-id="db630-2927">사용 하 여 다른 형식으로 인덱싱된 이미지를 저장할 수 있습니다는 <xref:System.Drawing.Image.Save%28System.String%2CSystem.Drawing.Imaging.ImageFormat%29> 메서드와 다음 검색을 <xref:System.Drawing.Graphics> 새 이미지에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2927">You can save the indexed image as another format by using the <xref:System.Drawing.Image.Save%28System.String%2CSystem.Drawing.Imaging.ImageFormat%29> method and then retrieve a <xref:System.Drawing.Graphics> object for the new image.</span></span>  
  
 <span data-ttu-id="db630-2928">이 메서드는 또한 이미지 픽셀 형식 중 하나에 있는 경우 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2928">This method also throws an exception if the image has any of the following pixel formats.</span></span>  
  
-   <xref:System.Drawing.Imaging.PixelFormat.Undefined>  
  
-   <xref:System.Drawing.Imaging.PixelFormat.DontCare>  
  
-   <xref:System.Drawing.Imaging.PixelFormat.Format16bppArgb1555>  
  
-   <xref:System.Drawing.Imaging.PixelFormat.Format16bppGrayScale>  
  
 <span data-ttu-id="db630-2929">항상 호출 해야 합니다 <xref:System.Drawing.Graphics.Dispose%2A> 해제 하는 메서드에 <xref:System.Drawing.Graphics> 및 관련 된 리소스에서 만든를 <xref:System.Drawing.Graphics.FromImage%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="db630-2929">You should always call the <xref:System.Drawing.Graphics.Dispose%2A> method to release the <xref:System.Drawing.Graphics> and related resources created by the <xref:System.Drawing.Graphics.FromImage%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2930">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2930">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-2931">코드에는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2931">The code performs the following action:</span></span>  
  
-   <span data-ttu-id="db630-2932">만듭니다는 <xref:System.Drawing.Image> 예제 폴더에 파일 예제 그래픽에서.</span><span class="sxs-lookup"><span data-stu-id="db630-2932">Creates an <xref:System.Drawing.Image> from a graphics file SampImag.jpg in the example folder.</span></span>  
  
-   <span data-ttu-id="db630-2933">만듭니다는 <xref:System.Drawing.Graphics> 에서 <xref:System.Drawing.Image>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2933">Creates a <xref:System.Drawing.Graphics> from the <xref:System.Drawing.Image>.</span></span>  
  
-   <span data-ttu-id="db630-2934">그 사각형을 입력 하 여 이미지를 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2934">Alters the image by filling a rectangle within it.</span></span>  
  
-   <span data-ttu-id="db630-2935">그립니다는 <xref:System.Drawing.Image> 화면.</span><span class="sxs-lookup"><span data-stu-id="db630-2935">Draws the <xref:System.Drawing.Image> to the screen.</span></span>  
  
-   <span data-ttu-id="db630-2936">만들어진 해제 <xref:System.Drawing.Graphics>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2936">Releases the created <xref:System.Drawing.Graphics>.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#120](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#120)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#120](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#120)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#120](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#120)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db630-2937"><paramref name="image" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2937"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Exception"><span data-ttu-id="db630-2938"><paramref name="image" />에 인덱싱된 픽셀 형식이 있거나 형식이 정의되어 있지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="db630-2938"><paramref name="image" /> has an indexed pixel format or its format is undefined.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/737bae30-e599-4e1d-bf30-bab8280b32be"><span data-ttu-id="db630-2939">방법: 런타임에 비트맵 만들기</span><span class="sxs-lookup"><span data-stu-id="db630-2939">How to: Create a Bitmap at Run Time</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/a626d701-bd99-4fd8-b92f-7b8f794e042b"><span data-ttu-id="db630-2940">이미지, 비트맵, 아이콘 및 메타파일 사용</span><span class="sxs-lookup"><span data-stu-id="db630-2940">Working with Images, Bitmaps, Icons, and Metafiles</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/162861f9-f050-445e-8abb-b2c43a918b8b"><span data-ttu-id="db630-2941">방법: 그리는 데 필요한 그래픽 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="db630-2941">How to: Create Graphics Objects for Drawing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetContextInfo">
      <MemberSignature Language="C#" Value="public object GetContextInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetContextInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.GetContextInfo" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContextInfo () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetContextInfo();" />
      <MemberSignature Language="F#" Value="member this.GetContextInfo : unit -&gt; obj" Usage="graphics.GetContextInfo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="db630-2942">누적 그래픽 컨텍스트를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2942">Gets the cumulative graphics context.</span></span></summary>
        <returns><span data-ttu-id="db630-2943">누적 그래픽 컨텍스트를 나타내는 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2943">An <see cref="T:System.Object" /> representing the cumulative graphics context.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2944">반환 값은 누적 클립 영역을 포함 하는 첫 번째 요소 및 누적 변환 행렬을 포함 하는 두 번째 요소 위치 개체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2944">The return value is an object array where the first element contains the cumulative clip region and the second element contains the cumulative translate/transform matrix.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHalftonePalette">
      <MemberSignature Language="C#" Value="public static IntPtr GetHalftonePalette ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetHalftonePalette() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.GetHalftonePalette" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHalftonePalette () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetHalftonePalette();" />
      <MemberSignature Language="F#" Value="static member GetHalftonePalette : unit -&gt; nativeint" Usage="System.Drawing.Graphics.GetHalftonePalette " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="db630-2945">현재 Windows 하프톤 팔레트에 대한 핸들을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2945">Gets a handle to the current Windows halftone palette.</span></span></summary>
        <returns><span data-ttu-id="db630-2946">팔레트에 대한 핸들을 지정하는 내부 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2946">Internal pointer that specifies the handle to the palette.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2947">용도 <xref:System.Drawing.Graphics.GetHalftonePalette%2A> 메서드를 사용 하도록 설정 하는 것 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] 표시 픽셀당 8 비트를 사용 하는 경우 더 나은 품질 하프톤을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2947">The purpose of the <xref:System.Drawing.Graphics.GetHalftonePalette%2A> method is to enable [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] to produce a better quality halftone when the display uses 8 bits per pixel.</span></span> <span data-ttu-id="db630-2948">하프톤 팔레트를 사용 하 여 이미지를 표시 하려면 다음 절차를 따르십시오.</span><span class="sxs-lookup"><span data-stu-id="db630-2948">To display an image using the halftone palette, use the following procedure.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2949">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2949">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-2950">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2950">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-2951">상호 운용성 정의 <xref:System.Runtime.InteropServices.DllImportAttribute> 필요한을 포함 하는 Windows DLL 파일 gdi32.dll에 대 한 특성 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2951">Defines interoperability <xref:System.Runtime.InteropServices.DllImportAttribute> attributes for the Windows DLL file gdi32.dll, which contains the necessary [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] functions.</span></span>  
  
-   <span data-ttu-id="db630-2952">정의 된 `SelectPalette` 및 `RealizePalette` 외부와 해당 DLL의 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2952">Defines the `SelectPalette` and `RealizePalette` functions in that DLL as external.</span></span>  
  
-   <span data-ttu-id="db630-2953">기존 이미지 파일 (이어야 하는 예제 코드 파일과 동일한 폴더에) 예제에서에서 이미지를 만들고 화면에 이미지를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2953">Creates an image from an existing image file SampImag.jpg (which must be in the same folder as the example code file) and draws the image to the screen.</span></span>  
  
-   <span data-ttu-id="db630-2954">내부 포인터 형식 변수를 만들고 각각 graphics 개체를 현재 Windows 하프톤 팔레트에 핸들에 해당 값을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2954">Creates internal pointer type variables and sets their values to the handle to the graphics object and to the current Windows halftone palette, respectively.</span></span>  
  
-   <span data-ttu-id="db630-2955">선택한 하프톤 팔레트를 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2955">Selects and realizes the halftone palette.</span></span>  
  
-   <span data-ttu-id="db630-2956">사용 하 여 새 그래픽 개체를 만듭니다를 `hdc` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2956">Creates a new graphics object using the `hdc` parameter.</span></span>  
  
-   <span data-ttu-id="db630-2957">이미지를 다시 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2957">Draws the image again.</span></span>  
  
-   <span data-ttu-id="db630-2958">디바이스 컨텍스트에 대 한 핸들을 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2958">Releases the handle to the device context.</span></span>  
  
 <span data-ttu-id="db630-2959">결과 두 개의 샘플 이미지가 렌더링: 16 비트 색상표를 사용 하 고 8 비트 색상표를 사용 하 여 하나를 사용 하 여 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2959">The result is two renderings of the sample image: one with the 16-bit palette and one with the 8-bit palette.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#121](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#121)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#121](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#121)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#121](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#121)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHdc">
      <MemberSignature Language="C#" Value="public IntPtr GetHdc ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int GetHdc() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.GetHdc" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHdc () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IntPtr GetHdc();" />
      <MemberSignature Language="F#" Value="abstract member GetHdc : unit -&gt; nativeint&#xA;override this.GetHdc : unit -&gt; nativeint" Usage="graphics.GetHdc " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Drawing.IDeviceContext.GetHdc</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="db630-2960">이 <see cref="T:System.Drawing.Graphics" />와 관련된 디바이스 컨텍스트에 대한 핸들을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2960">Gets the handle to the device context associated with this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="db630-2961">이 <see cref="T:System.Drawing.Graphics" />와 관련된 디바이스 컨텍스트에 대한 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2961">Handle to the device context associated with this <see cref="T:System.Drawing.Graphics" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2962">디바이스 컨텍스트는 기준으로 Windows 구조를 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] 출력에 영향을 주는 그래픽 모드 뿐만 아니라 그래픽 개체 및 해당 관련된 특성의 집합을 정의 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2962">The device context is a Windows structure based on [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] that defines a set of graphical objects and their associated attributes, as well as the graphical modes that affect output.</span></span> <span data-ttu-id="db630-2963">이 메서드는 글꼴을 제외 하 고 해당 디바이스 컨텍스트를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2963">This method returns that device context with the exception of a font.</span></span> <span data-ttu-id="db630-2964">글꼴 선택 되어 있지 않으므로를 호출 합니다 <xref:System.Drawing.Font.FromHdc%2A> 에서 반환 된 핸들을 사용 하 여 메서드를 <xref:System.Drawing.Graphics.GetHdc%2A> 메서드가 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2964">Because a font is not selected, calls to the <xref:System.Drawing.Font.FromHdc%2A> method using a handle returned from the <xref:System.Drawing.Graphics.GetHdc%2A> method will fail.</span></span>  
  
 <span data-ttu-id="db630-2965">에 대 한 호출을 <xref:System.Drawing.Graphics.GetHdc%2A> 및 <xref:System.Drawing.Graphics.ReleaseHdc%2A> 메서드 쌍으로 나타나야 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2965">Calls to the <xref:System.Drawing.Graphics.GetHdc%2A> and <xref:System.Drawing.Graphics.ReleaseHdc%2A> methods must appear in pairs.</span></span> <span data-ttu-id="db630-2966">범위에 있는 동안를 <xref:System.Drawing.Graphics.GetHdc%2A> 하 고 <xref:System.Drawing.Graphics.ReleaseHdc%2A> 메서드 쌍을 하면 일반적으로 호출할 유일한 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2966">During the scope of a <xref:System.Drawing.Graphics.GetHdc%2A> and <xref:System.Drawing.Graphics.ReleaseHdc%2A> method pair, you usually make only calls to [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] functions.</span></span> <span data-ttu-id="db630-2967">호출에 대 한 범위에 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] 의 메서드를 <xref:System.Drawing.Graphics> 시킨를 `hdc` 매개 변수 실패는 `ObjectBusy` 오류.</span><span class="sxs-lookup"><span data-stu-id="db630-2967">Calls in that scope made to [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] methods of the <xref:System.Drawing.Graphics> that produced the `hdc` parameter fail with an `ObjectBusy` error.</span></span> <span data-ttu-id="db630-2968">또한 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] 상태 변경 내용이 무시 합니다 <xref:System.Drawing.Graphics> 의 `hdc` 후속 작업에서 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2968">Also, [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] ignores any state changes made to the <xref:System.Drawing.Graphics> of the `hdc` parameter in subsequent operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-2969">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2969">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-2970">예제는 Windows를 호출 하는 방법을 보여 줍니다 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] 와 동일한 작업을 수행 하는 함수를 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] <xref:System.Drawing.Graphics> 메서드.</span><span class="sxs-lookup"><span data-stu-id="db630-2970">The example illustrates calling a Windows [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] function to perform the same task as a [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] <xref:System.Drawing.Graphics> method.</span></span> <span data-ttu-id="db630-2971">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2971">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-2972">상호 운용성 정의 <xref:System.Runtime.InteropServices.DllImportAttribute> Windows DLL 파일 gdi32.dll에 대 한 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2972">Defines the interoperability <xref:System.Runtime.InteropServices.DllImportAttribute> attribute for the Windows DLL file gdi32.dll.</span></span> <span data-ttu-id="db630-2973">이 DLL에 원하는 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2973">This DLL contains the desired [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] function.</span></span>  
  
-   <span data-ttu-id="db630-2974">정의 <xref:System.Drawing.Rectangle> 외부와 해당 DLL에는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2974">Defines the <xref:System.Drawing.Rectangle> function in that DLL as external.</span></span>  
  
-   <span data-ttu-id="db630-2975">빨간색 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2975">Creates a red pen.</span></span>  
  
-   <span data-ttu-id="db630-2976">펜으로 사각형을 사용 하 여 화면을 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] <xref:System.Drawing.Graphics.DrawRectangle%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="db630-2976">With the pen, draws a rectangle to the screen using the [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] <xref:System.Drawing.Graphics.DrawRectangle%2A> method.</span></span>  
  
-   <span data-ttu-id="db630-2977">내부 포인터 형식 변수를 정의 `hdc` 형식의 디바이스 컨텍스트에 대 한 핸들을 해당 값을 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2977">Defines an internal pointer type variable `hdc` and sets its value to the handle to the device context of the form.</span></span>  
  
-   <span data-ttu-id="db630-2978">사각형을 사용 하 여 화면을 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] <xref:System.Drawing.Rectangle> 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2978">Draws a rectangle to the screen using the [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] <xref:System.Drawing.Rectangle> function.</span></span>  
  
-   <span data-ttu-id="db630-2979">나타내는 디바이스 컨텍스트를 해제 합니다 `hdc` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2979">Releases the device context represented by the `hdc` parameter.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#122](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#122)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#122](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#122)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#122](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#122)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="db630-2980">비관리 코드에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2980">for access to unmanaged code.</span></span> <span data-ttu-id="db630-2981">열거형 관련: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2981">Related enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetNearestColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color GetNearestColor (System.Drawing.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Color GetNearestColor(valuetype System.Drawing.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.GetNearestColor(System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Color GetNearestColor(System::Drawing::Color color);" />
      <MemberSignature Language="F#" Value="member this.GetNearestColor : System.Drawing.Color -&gt; System.Drawing.Color" Usage="graphics.GetNearestColor color" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="color"><span data-ttu-id="db630-2982">일치를 찾을 <see cref="T:System.Drawing.Color" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2982"><see cref="T:System.Drawing.Color" /> structure for which to find a match.</span></span></param>
        <summary><span data-ttu-id="db630-2983">지정된 <see cref="T:System.Drawing.Color" /> 구조체와 가장 가까운 색을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2983">Gets the nearest color to the specified <see cref="T:System.Drawing.Color" /> structure.</span></span></summary>
        <returns><span data-ttu-id="db630-2984"><see cref="T:System.Drawing.Color" /> 매개 변수로 지정된 색에 가장 가까운 색을 나타내는 <paramref name="color" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2984">A <see cref="T:System.Drawing.Color" /> structure that represents the nearest color to the one specified with the <paramref name="color" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="db630-2985">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2985">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-2986">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2986">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-2987">ARGB 좌표 (255 165, 63, 136)를 사용 하 여 임의의 색을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2987">Creates an arbitrary color with ARGB coordinates (255, 165, 63, 136).</span></span>  
  
-   <span data-ttu-id="db630-2988">단색 브러시를 만들고 지정된 된 색을 색을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2988">Creates a solid brush and sets its color to the specified color.</span></span>  
  
-   <span data-ttu-id="db630-2989">임의의 색을 사용 하 여 타원을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2989">Fills an ellipse using the arbitrary color.</span></span>  
  
-   <span data-ttu-id="db630-2990">두 번째 색을 만들고을 가장 가까운 시스템 ARGB 색 값을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2990">Creates a second color and sets its value to the nearest system ARGB color.</span></span>  
  
-   <span data-ttu-id="db630-2991">이 색을 사용 하 여 두 번째 타원을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2991">Fills a second ellipse with this color.</span></span>  
  
 <span data-ttu-id="db630-2992">결과 두 개의 타원: 지정된 된 임의의 색 및 지정된 된 색에 가장 가까운 시스템 색을 사용 하 여 그리는 두 번째를 사용 하 여 그린 첫 번째입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2992">The result is two ellipses: the first drawn with the arbitrary specified color and the second drawn with the system color nearest the specified color.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#123](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#123)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#123](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#123)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#123](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#123)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InterpolationMode">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.InterpolationMode InterpolationMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.InterpolationMode InterpolationMode" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.InterpolationMode" />
      <MemberSignature Language="VB.NET" Value="Public Property InterpolationMode As InterpolationMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::InterpolationMode InterpolationMode { System::Drawing::Drawing2D::InterpolationMode get(); void set(System::Drawing::Drawing2D::InterpolationMode value); };" />
      <MemberSignature Language="F#" Value="member this.InterpolationMode : System.Drawing.Drawing2D.InterpolationMode with get, set" Usage="System.Drawing.Graphics.InterpolationMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.InterpolationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db630-2993">이 <see cref="T:System.Drawing.Graphics" />와 관련된 보간 모드를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2993">Gets or sets the interpolation mode associated with this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <value><span data-ttu-id="db630-2994"><see cref="T:System.Drawing.Drawing2D.InterpolationMode" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2994">One of the <see cref="T:System.Drawing.Drawing2D.InterpolationMode" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2995">보간 모드 간 중간 값 하는 방법을 결정 끝점을 계산 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2995">The interpolation mode determines how intermediate values between two endpoints are calculated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IntersectClip">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db630-2996">이 <see cref="T:System.Drawing.Graphics" />의 클립 영역을 현재 클립 영역과 지정된 <see cref="T:System.Drawing.Rectangle" /> 구조체의 교차 부분으로 업데이트합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2996">Updates the clip region of this <see cref="T:System.Drawing.Graphics" /> to the intersection of the current clip region and the specified <see cref="T:System.Drawing.Rectangle" /> structure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IntersectClip">
      <MemberSignature Language="C#" Value="public void IntersectClip (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void IntersectClip(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IntersectClip (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IntersectClip(System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.IntersectClip : System.Drawing.Rectangle -&gt; unit" Usage="graphics.IntersectClip rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="db630-2997">현재 클립 영역과 교차하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2997"><see cref="T:System.Drawing.Rectangle" /> structure to intersect with the current clip region.</span></span></param>
        <summary><span data-ttu-id="db630-2998">이 <see cref="T:System.Drawing.Graphics" />의 클립 영역을 현재 클립 영역과 지정된 <see cref="T:System.Drawing.Rectangle" /> 구조체의 교차 부분으로 업데이트합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2998">Updates the clip region of this <see cref="T:System.Drawing.Graphics" /> to the intersection of the current clip region and the specified <see cref="T:System.Drawing.Rectangle" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-2999">이 메서드를 할당 합니다 <xref:System.Drawing.Graphics.Clip%2A> 속성 <xref:System.Drawing.Graphics> 현재 클립 영역과 지정 된 사각형의 교차로 표현 되는 영역을 `rect` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-2999">This method assigns to the <xref:System.Drawing.Graphics.Clip%2A> property of this <xref:System.Drawing.Graphics> the area represented by the intersection of the current clip region and the rectangle specified by the `rect` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-3000">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3000">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3001">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3001">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3002">왼쪽 위 모퉁이 사용 하 여 사각형을 만듭니다 (0, 0)이이 사각형에 클리핑 영역을 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3002">Creates a rectangle with upper-left corner at (0, 0) and sets the clipping region to this rectangle.</span></span>  
  
-   <span data-ttu-id="db630-3003">왼쪽 위 모퉁이 사용 하 여 두 번째 사각형을 만듭니다 (100, 100)이 사각형과 현재 클립 영역 (첫 번째 사각형)의 교차점으로 클리핑 영역을 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3003">Creates a second rectangle with upper-left corner at (100, 100) and sets the clipping region to the intersection of this rectangle and the current clipping region (the first rectangle).</span></span>  
  
-   <span data-ttu-id="db630-3004">파란색 단색 브러시를 사용 하 여 이전 사각형을 모두 포함 하는 큰 사각형을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3004">Fills a large rectangle that includes both previous rectangles with a solid blue brush.</span></span>  
  
-   <span data-ttu-id="db630-3005">클리핑 영역을 무한대로 다시 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3005">Resets the clipping region to infinite.</span></span>  
  
-   <span data-ttu-id="db630-3006">두 클리핑 영역 주위에 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3006">Draws rectangles around the two clipping regions.</span></span> <span data-ttu-id="db630-3007">클리핑 사각형을 첫 번째 및 두 번째 클리핑 영역에 대 한 빨간색 펜에 대 한 검정 펜을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3007">It uses a black pen for the first clipping rectangle and a red pen for the second clipping region.</span></span>  
  
 <span data-ttu-id="db630-3008">결과 두 개의 사각형의 교차 부분만 파란색 채워집니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3008">The result is that only the intersection of the two rectangles is filled with blue.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#124](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#124)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#124](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#124)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#124](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#124)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntersectClip">
      <MemberSignature Language="C#" Value="public void IntersectClip (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void IntersectClip(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.IntersectClip(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IntersectClip (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IntersectClip(System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.IntersectClip : System.Drawing.RectangleF -&gt; unit" Usage="graphics.IntersectClip rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="db630-3009">현재 클립 영역과 교차하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3009"><see cref="T:System.Drawing.RectangleF" /> structure to intersect with the current clip region.</span></span></param>
        <summary><span data-ttu-id="db630-3010">이 <see cref="T:System.Drawing.Graphics" />의 클립 영역을 현재 클립 영역과 지정된 <see cref="T:System.Drawing.RectangleF" /> 구조체의 교차 부분으로 업데이트합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3010">Updates the clip region of this <see cref="T:System.Drawing.Graphics" /> to the intersection of the current clip region and the specified <see cref="T:System.Drawing.RectangleF" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-3011">이 메서드를 할당 합니다 <xref:System.Drawing.Graphics.Clip%2A> 속성 <xref:System.Drawing.Graphics> 현재 클립 영역과 지정 된 사각형의 교차로 표현 되는 영역을 `rect` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3011">This method assigns to the <xref:System.Drawing.Graphics.Clip%2A> property of this <xref:System.Drawing.Graphics> the area represented by the intersection of the current clip region and the rectangle specified by the `rect` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-3012">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3012">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3013">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3013">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3014">왼쪽 위 모퉁이 사용 하 여 사각형을 만듭니다 (0, 0)이이 사각형에 클리핑 영역을 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3014">Creates a rectangle with upper-left corner at (0, 0) and sets the clipping region to this rectangle.</span></span>  
  
-   <span data-ttu-id="db630-3015">왼쪽 위 모퉁이 사용 하 여 두 번째 사각형을 만듭니다 (100, 100)이 사각형과 현재 클립 영역 (첫 번째 사각형)의 교차점으로 클리핑 영역을 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3015">Creates a second rectangle with upper-left corner at (100, 100) and sets the clipping region to the intersection of this rectangle and the current clipping region (the first rectangle).</span></span>  
  
-   <span data-ttu-id="db630-3016">파란색 단색 브러시를 사용 하 여 이전 사각형을 모두 포함 하는 큰 사각형을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3016">Fills a large rectangle that includes both previous rectangles with a solid blue brush.</span></span>  
  
-   <span data-ttu-id="db630-3017">클리핑 영역을 무한대로 다시 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3017">Resets the clipping region to infinite.</span></span>  
  
-   <span data-ttu-id="db630-3018">두 클리핑 영역 주위에 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3018">Draws rectangles around the two clipping regions.</span></span> <span data-ttu-id="db630-3019">클리핑 사각형을 첫 번째 및 두 번째 클리핑 영역에 대 한 빨간색 펜에 대 한 검정 펜을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3019">It uses a black pen for the first clipping rectangle and a red pen for the second clipping region.</span></span>  
  
 <span data-ttu-id="db630-3020">결과 두 개의 사각형의 교차 부분만 파란색 채워집니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3020">The result is that only the intersection of the two rectangles is filled with blue.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#125](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#125)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#125](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#125)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#125](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#125)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntersectClip">
      <MemberSignature Language="C#" Value="public void IntersectClip (System.Drawing.Region region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void IntersectClip(class System.Drawing.Region region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Region)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IntersectClip(System::Drawing::Region ^ region);" />
      <MemberSignature Language="F#" Value="member this.IntersectClip : System.Drawing.Region -&gt; unit" Usage="graphics.IntersectClip region" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Drawing.Region" />
      </Parameters>
      <Docs>
        <param name="region"><span data-ttu-id="db630-3021">현재 영역과 교차하는 <see cref="T:System.Drawing.Region" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3021"><see cref="T:System.Drawing.Region" /> to intersect with the current region.</span></span></param>
        <summary><span data-ttu-id="db630-3022">이 <see cref="T:System.Drawing.Graphics" />의 클립 영역을 현재 클립 영역과 지정된 <see cref="T:System.Drawing.Region" />의 교차 부분으로 업데이트합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3022">Updates the clip region of this <see cref="T:System.Drawing.Graphics" /> to the intersection of the current clip region and the specified <see cref="T:System.Drawing.Region" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-3023">이 메서드를 할당 합니다 <xref:System.Drawing.Graphics.Clip%2A> 속성 <xref:System.Drawing.Graphics> 현재 클립 영역과 지정 된 지역의 교차로 표현 되는 영역을 `region` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3023">This method assigns to the <xref:System.Drawing.Graphics.Clip%2A> property of this <xref:System.Drawing.Graphics> the area represented by the intersection of the current clip region and the region specified by the `region` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-3024">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3024">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3025">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3025">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3026">왼쪽 위 모퉁이 사용 하 여 사각형을 만듭니다 (0, 0).</span><span class="sxs-lookup"><span data-stu-id="db630-3026">Creates a rectangle with upper-left corner at (0, 0).</span></span>  
  
-   <span data-ttu-id="db630-3027">영역을 만드는 데 사용 및 사각형에 설정 하 고이 영역에 클립 영역을 설정 키를 누릅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3027">Creates a region and sets it to the rectangle, and sets the clipping region to this region.</span></span>  
  
-   <span data-ttu-id="db630-3028">왼쪽 위 모퉁이 사용 하 여 두 번째 사각형을 만듭니다 (100, 100).</span><span class="sxs-lookup"><span data-stu-id="db630-3028">Creates a second rectangle with upper-left corner at (100, 100).</span></span>  
  
-   <span data-ttu-id="db630-3029">영역을 만드는 두 번째 사각형에 설정 하 고 결합 모드를 사용 하 여이 지역 및 현재 클립 영역 (첫 번째 사각형)의 교차점으로 클립 영역을 설정 <xref:System.Drawing.Drawing2D.CombineMode.Replace>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3029">Creates a region and sets it to the second rectangle, and sets the clipping region to the intersection of this region and the current clipping region (the first rectangle) using a combine mode of <xref:System.Drawing.Drawing2D.CombineMode.Replace>.</span></span>  
  
-   <span data-ttu-id="db630-3030">파란색 단색 브러시를 사용 하 여 이전 두 지역 모두를 포함 하는 큰 사각형을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3030">Fills a large rectangle that includes both previous regions with a solid blue brush.</span></span>  
  
-   <span data-ttu-id="db630-3031">클리핑 영역을 무한대로 다시 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3031">Resets the clipping region to infinite.</span></span>  
  
-   <span data-ttu-id="db630-3032">두 클리핑 영역 주위에 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3032">Draws rectangles around the two clipping regions.</span></span> <span data-ttu-id="db630-3033">첫 번째 클리핑 영역 및 두 번째 클리핑 영역에 대 한 빨간색 펜에 대 한 검정 펜을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3033">It uses a black pen for the first clipping region and a red pen for the second clipping region.</span></span>  
  
 <span data-ttu-id="db630-3034">결과 두 영역의 교차 부분만 파란색 채워집니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3034">The result is that only the intersection of the two regions is filled with blue.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#126](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#126)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#126](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#126)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#126](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#126)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClipEmpty">
      <MemberSignature Language="C#" Value="public bool IsClipEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClipEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.IsClipEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsClipEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsClipEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClipEmpty : bool" Usage="System.Drawing.Graphics.IsClipEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db630-3035">이 <see cref="T:System.Drawing.Graphics" />의 클립 영역이 비어 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3035">Gets a value indicating whether the clipping region of this <see cref="T:System.Drawing.Graphics" /> is empty.</span></span></summary>
        <value><span data-ttu-id="db630-3036">이 <see cref="T:System.Drawing.Graphics" />의 클립 영역이 비어 있으면 <see langword="true" />이고, 비어 있지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3036"><see langword="true" /> if the clipping region of this <see cref="T:System.Drawing.Graphics" /> is empty; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsVisible">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db630-3037">좌표 쌍에 의해 지정된 점이 이 <see cref="T:System.Drawing.Graphics" />의 표시된 클립 영역 안에 포함되었는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3037">Indicates whether the point specified by a pair of coordinates is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.IsVisible(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.Point -&gt; bool" Usage="graphics.IsVisible point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="db630-3038">표시 여부를 테스트하는 <see cref="T:System.Drawing.Point" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3038"><see cref="T:System.Drawing.Point" /> structure to test for visibility.</span></span></param>
        <summary><span data-ttu-id="db630-3039">지정된 <see cref="T:System.Drawing.Point" /> 구조체가 이 <see cref="T:System.Drawing.Graphics" />의 표시된 클립 영역 안에 포함되었는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3039">Indicates whether the specified <see cref="T:System.Drawing.Point" /> structure is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="db630-3040"><paramref name="point" /> 매개 변수에 의해 지정된 점이 이 <see cref="T:System.Drawing.Graphics" />의 표시된 클립 영역 안에 포함되면 <see langword="true" />이고, 포함되지 않으면  <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3040"><see langword="true" /> if the point specified by the <paramref name="point" /> parameter is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="db630-3041">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3041">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3042">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3042">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3043">사각형 클립 영역을 만들고 사용 하 여 폼의 그래픽 개체에 대 한 클리핑 영역으로 설정 <xref:System.Drawing.Drawing2D.CombineMode.Replace>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3043">Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <xref:System.Drawing.Drawing2D.CombineMode.Replace>.</span></span>  
  
-   <span data-ttu-id="db630-3044">두 점 하나는 클리핑 영역 및 외부 하나 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3044">Creates two points, one inside the clipping region and one outside.</span></span>  
  
-   <span data-ttu-id="db630-3045">각 요소의 표시 여부를 테스트 하 고 표시 하는 것만을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3045">Tests each of the points for visibility and draws only the visible one.</span></span>  
  
 <span data-ttu-id="db630-3046">결과 하나의 작은 빨간색 원이 클립 영역 내에 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3046">The result is one small red circle, which is within the clip region.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#127](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#127)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#127](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#127)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#127](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#127)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.PointF point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.PointF point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.IsVisible(System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (point As PointF) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::PointF point);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.PointF -&gt; bool" Usage="graphics.IsVisible point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="db630-3047">표시 여부를 테스트하는 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3047"><see cref="T:System.Drawing.PointF" /> structure to test for visibility.</span></span></param>
        <summary><span data-ttu-id="db630-3048">지정된 <see cref="T:System.Drawing.PointF" /> 구조체가 이 <see cref="T:System.Drawing.Graphics" />의 표시된 클립 영역 안에 포함되었는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3048">Indicates whether the specified <see cref="T:System.Drawing.PointF" /> structure is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="db630-3049"><paramref name="point" /> 매개 변수에 의해 지정된 점이 이 <see cref="T:System.Drawing.Graphics" />의 표시된 클립 영역 안에 포함되면 <see langword="true" />이고, 포함되지 않으면  <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3049"><see langword="true" /> if the point specified by the <paramref name="point" /> parameter is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="db630-3050">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3050">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3051">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3051">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3052">사각형 클립 영역을 만들고 사용 하 여 폼 그래픽에 대 한 클리핑 영역으로 설정 <xref:System.Drawing.Drawing2D.CombineMode.Replace>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3052">Creates a rectangular clipping region and sets it as the clipping region for the graphics of the form using <xref:System.Drawing.Drawing2D.CombineMode.Replace>.</span></span>  
  
-   <span data-ttu-id="db630-3053">두 점 하나는 클리핑 영역 및 외부 하나 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3053">Creates two points, one inside the clipping region and one outside.</span></span>  
  
-   <span data-ttu-id="db630-3054">각 요소의 표시 여부를 테스트 하 고 표시 하는 것만을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3054">Tests each of the points for visibility and draws only the visible one.</span></span>  
  
 <span data-ttu-id="db630-3055">결과 하나의 작은 빨간색 원이 클립 영역 내에 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3055">The result is one small red circle, which is within the clip region.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#128](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#128)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#128](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#128)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#128](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#128)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.IsVisible(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (rect As Rectangle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.Rectangle -&gt; bool" Usage="graphics.IsVisible rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="db630-3056">표시 여부를 테스트하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3056"><see cref="T:System.Drawing.Rectangle" /> structure to test for visibility.</span></span></param>
        <summary><span data-ttu-id="db630-3057"><see cref="T:System.Drawing.Rectangle" /> 구조체에 의해 지정된 사각형이 이 <see cref="T:System.Drawing.Graphics" />의 표시된 클립 영역 안에 포함되었는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3057">Indicates whether the rectangle specified by a <see cref="T:System.Drawing.Rectangle" /> structure is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="db630-3058"><paramref name="rect" /> 매개 변수에 의해 지정된 사각형이 이 <see cref="T:System.Drawing.Graphics" />의 표시된 클립 영역 안에 포함되면 <see langword="true" />이고, 포함되지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3058"><see langword="true" /> if the rectangle specified by the <paramref name="rect" /> parameter is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="db630-3059">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3059">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3060">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3060">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3061">사각형 클립 영역을 만들고 사용 하 여 폼의 그래픽 개체에 대 한 클리핑 영역으로 설정 <xref:System.Drawing.Drawing2D.CombineMode.Replace>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3061">Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <xref:System.Drawing.Drawing2D.CombineMode.Replace>.</span></span>  
  
-   <span data-ttu-id="db630-3062">위치 및 두 개의 사각형의 크기, 하나는 클리핑 영역 및 외부 하나 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3062">Creates the location and size of two rectangles, one inside the clipping region and one outside.</span></span>  
  
-   <span data-ttu-id="db630-3063">각각의 표시 여부를 테스트 하 고 표시 하는 것만을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3063">Tests each of the rectangles for visibility and draws only the visible one.</span></span>  
  
 <span data-ttu-id="db630-3064">결과 하나의 작은 빨간색 사각형이 클립 영역 내에 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3064">The result is one small red rectangle, which is within the clip region.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#129](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#129)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#129](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#129)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#129](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#129)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.IsVisible(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (rect As RectangleF) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.RectangleF -&gt; bool" Usage="graphics.IsVisible rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="db630-3065">표시 여부를 테스트하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3065"><see cref="T:System.Drawing.RectangleF" /> structure to test for visibility.</span></span></param>
        <summary><span data-ttu-id="db630-3066"><see cref="T:System.Drawing.RectangleF" /> 구조체에 의해 지정된 사각형이 이 <see cref="T:System.Drawing.Graphics" />의 표시된 클립 영역 안에 포함되었는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3066">Indicates whether the rectangle specified by a <see cref="T:System.Drawing.RectangleF" /> structure is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="db630-3067"><paramref name="rect" /> 매개 변수에 의해 지정된 사각형이 이 <see cref="T:System.Drawing.Graphics" />의 표시된 클립 영역 안에 포함되면 <see langword="true" />이고, 포함되지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3067"><see langword="true" /> if the rectangle specified by the <paramref name="rect" /> parameter is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="db630-3068">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3068">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3069">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3069">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3070">사각형 클립 영역을 만들고 사용 하 여 폼의 그래픽 개체에 대 한 클리핑 영역으로 설정 <xref:System.Drawing.Drawing2D.CombineMode.Replace>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3070">Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <xref:System.Drawing.Drawing2D.CombineMode.Replace>.</span></span>  
  
-   <span data-ttu-id="db630-3071">두 사각형이, 하나는 클리핑 영역 및 외부 하나 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3071">Creates two rectangles, one inside the clipping region and one outside.</span></span>  
  
-   <span data-ttu-id="db630-3072">각각의 표시 여부를 테스트 하 고 표시 하는 것만을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3072">Tests each of the rectangles for visibility and draws only the visible one.</span></span>  
  
 <span data-ttu-id="db630-3073">결과 하나의 작은 빨간색 사각형이 클립 영역 내에 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3073">The result is one small red rectangle, which is within the clip region.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#130](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#130)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#130](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#130)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#130](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#130)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Integer, y As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : int * int -&gt; bool" Usage="graphics.IsVisible (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="db630-3074">표시 여부를 테스트할 점의 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3074">The x-coordinate of the point to test for visibility.</span></span></param>
        <param name="y"><span data-ttu-id="db630-3075">표시 여부를 테스트할 점의 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3075">The y-coordinate of the point to test for visibility.</span></span></param>
        <summary><span data-ttu-id="db630-3076">좌표 쌍에 의해 지정된 점이 이 <see cref="T:System.Drawing.Graphics" />의 표시된 클립 영역 안에 포함되었는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3076">Indicates whether the point specified by a pair of coordinates is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="db630-3077"><paramref name="x" /> 및 <paramref name="y" /> 매개 변수에 의해 정의된 점이 이 <see cref="T:System.Drawing.Graphics" />의 표시된 클립 영역 안에 포함되면 <see langword="true" />이고, 포함되지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3077"><see langword="true" /> if the point defined by the <paramref name="x" /> and <paramref name="y" /> parameters is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="db630-3078">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3078">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3079">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3079">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3080">사각형 클립 영역을 만들고 사용 하 여 폼의 그래픽 개체에 대 한 클리핑 영역으로 설정 <xref:System.Drawing.Drawing2D.CombineMode.Replace>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3080">Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <xref:System.Drawing.Drawing2D.CombineMode.Replace>.</span></span>  
  
-   <span data-ttu-id="db630-3081">두 점 하나는 클리핑 영역 및 외부 하나 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3081">Creates two points, one inside the clipping region and one outside.</span></span>  
  
-   <span data-ttu-id="db630-3082">각 요소의 표시 여부를 테스트 하 고 표시 하는 것만을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3082">Tests each of the points for visibility and draws only the visible one.</span></span>  
  
 <span data-ttu-id="db630-3083">결과 하나의 작은 빨간색 원이 클립 영역 내에 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3083">The result is one small red circle, which is within the clip region.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#131](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#131)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#131](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#131)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#131](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#131)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Single, y As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : single * single -&gt; bool" Usage="graphics.IsVisible (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="db630-3084">표시 여부를 테스트할 점의 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3084">The x-coordinate of the point to test for visibility.</span></span></param>
        <param name="y"><span data-ttu-id="db630-3085">표시 여부를 테스트할 점의 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3085">The y-coordinate of the point to test for visibility.</span></span></param>
        <summary><span data-ttu-id="db630-3086">좌표 쌍에 의해 지정된 점이 이 <see cref="T:System.Drawing.Graphics" />의 표시된 클립 영역 안에 포함되었는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3086">Indicates whether the point specified by a pair of coordinates is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="db630-3087"><paramref name="x" /> 및 <paramref name="y" /> 매개 변수에 의해 정의된 점이 이 <see cref="T:System.Drawing.Graphics" />의 표시된 클립 영역 안에 포함되면 <see langword="true" />이고, 포함되지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3087"><see langword="true" /> if the point defined by the <paramref name="x" /> and <paramref name="y" /> parameters is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="db630-3088">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3088">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3089">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3089">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3090">사각형 클립 영역을 만들고 사용 하 여 폼의 그래픽 개체에 대 한 클리핑 영역으로 설정 <xref:System.Drawing.Drawing2D.CombineMode.Replace>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3090">Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <xref:System.Drawing.Drawing2D.CombineMode.Replace>.</span></span>  
  
-   <span data-ttu-id="db630-3091">두 점 하나는 클리핑 영역 및 외부 하나 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3091">Creates two points, one inside the clipping region and one outside.</span></span>  
  
-   <span data-ttu-id="db630-3092">각 요소의 표시 여부를 테스트 하 고 표시 하는 것만을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3092">Tests each of the points for visibility and draws only the visible one.</span></span>  
  
 <span data-ttu-id="db630-3093">결과 하나의 작은 빨간색 원이 클립 영역 내에 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3093">The result is one small red circle, which is within the clip region.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#133](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#133)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#133](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#133)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#133](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#133)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Integer, y As Integer, width As Integer, height As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : int * int * int * int -&gt; bool" Usage="graphics.IsVisible (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="db630-3094">표시 여부를 테스트할 사각형의 왼쪽 위 모퉁이에 대한 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3094">The x-coordinate of the upper-left corner of the rectangle to test for visibility.</span></span></param>
        <param name="y"><span data-ttu-id="db630-3095">표시 여부를 테스트할 사각형의 왼쪽 위 모퉁이에 대한 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3095">The y-coordinate of the upper-left corner of the rectangle to test for visibility.</span></span></param>
        <param name="width"><span data-ttu-id="db630-3096">표시 여부를 테스트할 사각형의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3096">Width of the rectangle to test for visibility.</span></span></param>
        <param name="height"><span data-ttu-id="db630-3097">표시 여부를 테스트할 사각형의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3097">Height of the rectangle to test for visibility.</span></span></param>
        <summary><span data-ttu-id="db630-3098">좌표 쌍, 너비 및 높이에 의해 지정된 사각형이 이 <see cref="T:System.Drawing.Graphics" />의 표시된 클립 영역 안에 포함되었는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3098">Indicates whether the rectangle specified by a pair of coordinates, a width, and a height is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="db630-3099"><paramref name="x" />, <paramref name="y" />, <paramref name="width" /> 및 <paramref name="height" /> 매개 변수에 의해 정의된 사각형이 이 <see cref="T:System.Drawing.Graphics" />의 표시된 클립 영역 안에 포함되면 <see langword="true" />이고,  포함되지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3099"><see langword="true" /> if the rectangle defined by the <paramref name="x" />, <paramref name="y" />, <paramref name="width" />, and <paramref name="height" /> parameters is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="db630-3100">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3100">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3101">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3101">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3102">사각형 클립 영역을 만들고 사용 하 여 폼의 그래픽 개체에 대 한 클리핑 영역으로 설정 <xref:System.Drawing.Drawing2D.CombineMode.Replace>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3102">Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <xref:System.Drawing.Drawing2D.CombineMode.Replace>.</span></span>  
  
-   <span data-ttu-id="db630-3103">위치 및 두 개의 사각형의 크기, 하나는 클리핑 영역 및 외부 하나 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3103">Creates the location and size of two rectangles, one inside the clipping region and one outside.</span></span>  
  
-   <span data-ttu-id="db630-3104">각각의 표시 여부를 테스트 하 고 표시 하는 것만을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3104">Tests each of the rectangles for visibility and draws only the visible one.</span></span>  
  
 <span data-ttu-id="db630-3105">결과 하나의 작은 빨간색 사각형이 클립 영역 내에 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3105">The result is one small red rectangle, which is within the clip region.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#132](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#132)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#132](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#132)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#132](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#132)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y, float width, float height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y, float32 width, float32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Single, y As Single, width As Single, height As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y, float width, float height);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : single * single * single * single -&gt; bool" Usage="graphics.IsVisible (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="db630-3106">표시 여부를 테스트할 사각형의 왼쪽 위 모퉁이에 대한 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3106">The x-coordinate of the upper-left corner of the rectangle to test for visibility.</span></span></param>
        <param name="y"><span data-ttu-id="db630-3107">표시 여부를 테스트할 사각형의 왼쪽 위 모퉁이에 대한 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3107">The y-coordinate of the upper-left corner of the rectangle to test for visibility.</span></span></param>
        <param name="width"><span data-ttu-id="db630-3108">표시 여부를 테스트할 사각형의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3108">Width of the rectangle to test for visibility.</span></span></param>
        <param name="height"><span data-ttu-id="db630-3109">표시 여부를 테스트할 사각형의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3109">Height of the rectangle to test for visibility.</span></span></param>
        <summary><span data-ttu-id="db630-3110">좌표 쌍, 너비 및 높이에 의해 지정된 사각형이 이 <see cref="T:System.Drawing.Graphics" />의 표시된 클립 영역 안에 포함되었는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3110">Indicates whether the rectangle specified by a pair of coordinates, a width, and a height is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="db630-3111"><paramref name="x" />, <paramref name="y" />, <paramref name="width" /> 및 <paramref name="height" /> 매개 변수에 의해 정의된 사각형이 이 <see cref="T:System.Drawing.Graphics" />의 표시된 클립 영역 안에 포함되면 <see langword="true" />이고,  포함되지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3111"><see langword="true" /> if the rectangle defined by the <paramref name="x" />, <paramref name="y" />, <paramref name="width" />, and <paramref name="height" /> parameters is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="db630-3112">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3112">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3113">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3113">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3114">사각형 클립 영역을 만들고 사용 하 여 폼의 그래픽 개체에 대 한 클리핑 영역으로 설정 <xref:System.Drawing.Drawing2D.CombineMode.Replace>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3114">Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <xref:System.Drawing.Drawing2D.CombineMode.Replace>.</span></span>  
  
-   <span data-ttu-id="db630-3115">위치 및 두 개의 사각형의 크기, 하나는 클리핑 영역 및 외부 하나 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3115">Creates the location and size of two rectangles, one inside the clipping region and one outside.</span></span>  
  
-   <span data-ttu-id="db630-3116">각각의 표시 여부를 테스트 하 고 표시 하는 것만을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3116">Tests each of the rectangles for visibility and draws only the visible one.</span></span>  
  
 <span data-ttu-id="db630-3117">결과 하나의 작은 빨간색 사각형이 클립 영역 내에 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3117">The result is one small red rectangle, which is within the clip region.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#134](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#134)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#134](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#134)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#134](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#134)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisibleClipEmpty">
      <MemberSignature Language="C#" Value="public bool IsVisibleClipEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVisibleClipEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.IsVisibleClipEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsVisibleClipEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVisibleClipEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsVisibleClipEmpty : bool" Usage="System.Drawing.Graphics.IsVisibleClipEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db630-3118">이 <see cref="T:System.Drawing.Graphics" />의 표시된 클립 영역이 비어 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3118">Gets a value indicating whether the visible clipping region of this <see cref="T:System.Drawing.Graphics" /> is empty.</span></span></summary>
        <value><span data-ttu-id="db630-3119">이 <see cref="T:System.Drawing.Graphics" /> 클립 영역의 표시된 부분이 비어 있으면 <see langword="true" />이고, 비어 있지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3119"><see langword="true" /> if the visible portion of the clipping region of this <see cref="T:System.Drawing.Graphics" /> is empty; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-3120">표시 된 클립 영역이이의 클립 영역의 교집합입니다 `Graphics` 및 창의 클리핑 영역입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3120">The visible clipping region is the intersection of the clipping region of this `Graphics` and the clipping region of the window.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureCharacterRanges">
      <MemberSignature Language="C#" Value="public System.Drawing.Region[] MeasureCharacterRanges (string text, System.Drawing.Font font, System.Drawing.RectangleF layoutRect, System.Drawing.StringFormat stringFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Region[] MeasureCharacterRanges(string text, class System.Drawing.Font font, valuetype System.Drawing.RectangleF layoutRect, class System.Drawing.StringFormat stringFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Drawing::Region ^&gt; ^ MeasureCharacterRanges(System::String ^ text, System::Drawing::Font ^ font, System::Drawing::RectangleF layoutRect, System::Drawing::StringFormat ^ stringFormat);" />
      <MemberSignature Language="F#" Value="member this.MeasureCharacterRanges : string * System.Drawing.Font * System.Drawing.RectangleF * System.Drawing.StringFormat -&gt; System.Drawing.Region[]" Usage="graphics.MeasureCharacterRanges (text, font, layoutRect, stringFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Region[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="layoutRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="stringFormat" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="db630-3121">측정할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3121">String to measure.</span></span></param>
        <param name="font"><span data-ttu-id="db630-3122">문자열의 텍스트 서식을 정의하는 <see cref="T:System.Drawing.Font" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3122"><see cref="T:System.Drawing.Font" /> that defines the text format of the string.</span></span></param>
        <param name="layoutRect"><span data-ttu-id="db630-3123">문자열에 대한 레이아웃 사각형을 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3123"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the layout rectangle for the string.</span></span></param>
        <param name="stringFormat"><span data-ttu-id="db630-3124">줄 간격과 같은 문자열에 대한 서식 지정 정보를 나타내는 <see cref="T:System.Drawing.StringFormat" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3124"><see cref="T:System.Drawing.StringFormat" /> that represents formatting information, such as line spacing, for the string.</span></span></param>
        <summary><span data-ttu-id="db630-3125">지정된 문자열 내에서 문자 위치 범위의 경계를 각각 설정하는 <see cref="T:System.Drawing.Region" /> 개체의 배열을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3125">Gets an array of <see cref="T:System.Drawing.Region" /> objects, each of which bounds a range of character positions within the specified string.</span></span></summary>
        <returns><span data-ttu-id="db630-3126">이 메서드는 지정된 문자열 내에서 문자 위치 범위의 경계를 각각 설정하는 <see cref="T:System.Drawing.Region" /> 개체의 배열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3126">This method returns an array of <see cref="T:System.Drawing.Region" /> objects, each of which bounds a range of character positions within the specified string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-3127">이 메서드에서 반환 된 지역 해상도 의해 좌우 되므로 있을 수 있습니다 정확도 약간 손실 문자열 하나 해상도 메타 파일에 기록 되며 나중에 다른 해상도로 다시 재생 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="db630-3127">The regions returned by this method are resolution-dependent, so there might be a slight loss of accuracy if strings are recorded in a metafile at one resolution and later played back at a different resolution.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-3128">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3128">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3129">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3129">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3130">"첫 번째 및 두 번째 범위" 문자열을 설정 하 고 문자열 ("Times New Roman", 16 포인트)를 표시 하기 위한 글꼴입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3130">Sets a string "First and Second ranges" and a font for display of the string ("Times New Roman", 16 point).</span></span>  
  
-   <span data-ttu-id="db630-3131">집합 두 자로 된 범위 내의 문자열 ("First" 및 "두 번째" 단어에 해당).</span><span class="sxs-lookup"><span data-stu-id="db630-3131">Sets two character ranges within the string (which correspond to the words "First" and "Second").</span></span>  
  
-   <span data-ttu-id="db630-3132">문자열을 표시 하는 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3132">Creates a rectangle in which to display the string.</span></span>  
  
-   <span data-ttu-id="db630-3133">문자열 두 문자 범위를 포함 하 여 ¾의 서식을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3133">Sets the formatting of the string ¾ including the two character ranges.</span></span>  
  
-   <span data-ttu-id="db630-3134">화면에 문자열을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3134">Draws the string to the screen.</span></span>  
  
-   <span data-ttu-id="db630-3135">문자 범위를 측정, 바인딩된 두 개의 지정된 범위는 사각형을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3135">Measures the character ranges, determines rectangles that bound the two specified ranges.</span></span>  
  
-   <span data-ttu-id="db630-3136">화면에 두 개의 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3136">Draws the two rectangles to the screen.</span></span>  
  
 <span data-ttu-id="db630-3137">결과 빨간색 직사각형으로 제한 ("First") 첫 번째 범위와 두 번째 범위 ("두 번째") 파란색 사각형에 의해 경계가 지정 된 문자열을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3137">The result is the displayed string with the first range ("First") bounded by a red rectangle and the second range ("Second") bounded by a blue rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#135](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#135)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#135](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#135)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#135](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#135)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)" />
        <altmember cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="MeasureString">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db630-3138">지정된 <see cref="T:System.Drawing.Font" />를 사용하여 그릴 때 지정된 문자열을 측정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3138">Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MeasureString">
      <MemberSignature Language="C#" Value="public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.SizeF MeasureString(string text, class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::SizeF MeasureString(System::String ^ text, System::Drawing::Font ^ font);" />
      <MemberSignature Language="F#" Value="member this.MeasureString : string * System.Drawing.Font -&gt; System.Drawing.SizeF" Usage="graphics.MeasureString (text, font)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="db630-3139">측정할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3139">String to measure.</span></span></param>
        <param name="font"><span data-ttu-id="db630-3140">문자열의 텍스트 서식을 정의하는 <see cref="T:System.Drawing.Font" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3140"><see cref="T:System.Drawing.Font" /> that defines the text format of the string.</span></span></param>
        <summary><span data-ttu-id="db630-3141">지정된 <see cref="T:System.Drawing.Font" />를 사용하여 그릴 때 지정된 문자열을 측정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3141">Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" />.</span></span></summary>
        <returns><span data-ttu-id="db630-3142">이 메서드는 <paramref name="font" /> 매개 변수를 사용하여 그린 대로 <paramref name="text" /> 매개 변수에 지정된 문자열의 크기(<see cref="P:System.Drawing.Graphics.PageUnit" /> 속성에 지정된 단위)를 나타내는 <see cref="T:System.Drawing.SizeF" /> 구조체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3142">This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size, in the units specified by the <see cref="P:System.Drawing.Graphics.PageUnit" /> property, of the string specified by the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-3143"><xref:System.Drawing.Graphics.MeasureString%2A> 메서드는 개별 사용 하 여 문자열 및 문자 모양 있어 걸친 수 있도록 문자열 앞뒤 약간의 추가 공백 포함을 위해 설계 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3143">The <xref:System.Drawing.Graphics.MeasureString%2A> method is designed for use with individual strings and includes a small amount of extra space before and after the string to allow for overhanging glyphs.</span></span> <span data-ttu-id="db630-3144">또한 합니다 <xref:System.Drawing.Graphics.DrawString%2A> 메서드는 디스플레이 품질을 최적화 하기 위해 문자 모양 요소를 조정 하 고 보고 보다 좁은 문자열로 표시 될 수 있습니다 <xref:System.Drawing.Graphics.MeasureString%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3144">Also, the <xref:System.Drawing.Graphics.DrawString%2A> method adjusts glyph points to optimize display quality and might display a string narrower than reported by <xref:System.Drawing.Graphics.MeasureString%2A>.</span></span> <span data-ttu-id="db630-3145">메트릭 (예: 서식 있는 텍스트를 구현 하는 경우) 레이아웃에서 인접 문자열에 대 한 적합 한을 가져오려면를 <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> 메서드 또는 중 하나는 <xref:System.Drawing.Graphics.MeasureString%2A> 사용 하는 메서드를 <xref:System.Drawing.StringFormat>, 전달 및 <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</span><span class="sxs-lookup"><span data-stu-id="db630-3145">To obtain metrics suitable for adjacent strings in layout (for example, when implementing formatted text), use the <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> method or one of the <xref:System.Drawing.Graphics.MeasureString%2A> methods that takes a <xref:System.Drawing.StringFormat>, and pass <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</span></span> <span data-ttu-id="db630-3146">또한 확인 합니다 <xref:System.Drawing.Graphics.TextRenderingHint%2A> 에 대 한 합니다 <xref:System.Drawing.Graphics> 는 <xref:System.Drawing.Text.TextRenderingHint.AntiAlias>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3146">Also, ensure the <xref:System.Drawing.Graphics.TextRenderingHint%2A> for the <xref:System.Drawing.Graphics> is <xref:System.Drawing.Text.TextRenderingHint.AntiAlias>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-3147">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3147">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3148">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3148">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3149">측정할 문자열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3149">Creates a string to measure.</span></span>  
  
-   <span data-ttu-id="db630-3150">글꼴 개체를 만들고 Arial (16 포인트)로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3150">Creates a font object and sets it to Arial (16 point).</span></span>  
  
-   <span data-ttu-id="db630-3151">크기 개체를 만들고 문자열의 크기를 측정 하 고 글꼴 개체를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3151">Creates a size object and uses it and the font object to measure the size of the string.</span></span>  
  
-   <span data-ttu-id="db630-3152">문자열의 측정 된 크기를 사용 하 여 빨간색 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3152">Draws a red rectangle using the measured size of the string.</span></span>  
  
-   <span data-ttu-id="db630-3153">그려지는 사각형 내에 있는 문자열을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3153">Draws the string within the drawn rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#136](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#136)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#136](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#136)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#136](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#136)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="db630-3154"><paramref name="font" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-3154"><paramref name="font" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
        <altmember cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
        <related type="Article" href="~/docs/framework/winforms/advanced/using-fonts-and-text.md"><span data-ttu-id="db630-3155">글꼴 및 텍스트 사용</span><span class="sxs-lookup"><span data-stu-id="db630-3155">Using Fonts and Text</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MeasureString">
      <MemberSignature Language="C#" Value="public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, System.Drawing.SizeF layoutArea);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.SizeF MeasureString(string text, class System.Drawing.Font font, valuetype System.Drawing.SizeF layoutArea) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::SizeF MeasureString(System::String ^ text, System::Drawing::Font ^ font, System::Drawing::SizeF layoutArea);" />
      <MemberSignature Language="F#" Value="member this.MeasureString : string * System.Drawing.Font * System.Drawing.SizeF -&gt; System.Drawing.SizeF" Usage="graphics.MeasureString (text, font, layoutArea)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="layoutArea" Type="System.Drawing.SizeF" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="db630-3156">측정할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3156">String to measure.</span></span></param>
        <param name="font"><span data-ttu-id="db630-3157">문자열의 텍스트 형식을 정의하는 <see cref="T:System.Drawing.Font" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3157"><see cref="T:System.Drawing.Font" /> defines the text format of the string.</span></span></param>
        <param name="layoutArea"><span data-ttu-id="db630-3158">텍스트에 대한 최대 레이아웃 영역을 지정하는 <see cref="T:System.Drawing.SizeF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3158"><see cref="T:System.Drawing.SizeF" /> structure that specifies the maximum layout area for the text.</span></span></param>
        <summary><span data-ttu-id="db630-3159">지정된 레이아웃 영역 안에서 지정된 <see cref="T:System.Drawing.Font" />를 사용하여 그릴 때 지정된 문자열을 측정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3159">Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" /> within the specified layout area.</span></span></summary>
        <returns><span data-ttu-id="db630-3160">이 메서드는 <paramref name="font" /> 매개 변수를 사용하여 그린 대로 <paramref name="text" /> 매개 변수에 지정된 문자열의 크기(<see cref="P:System.Drawing.Graphics.PageUnit" /> 속성에 지정된 단위)를 나타내는 <see cref="T:System.Drawing.SizeF" /> 구조체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3160">This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size, in the units specified by the <see cref="P:System.Drawing.Graphics.PageUnit" /> property, of the string specified by the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-3161"><xref:System.Drawing.Graphics.MeasureString%2A> 메서드는 개별 사용 하 여 문자열 및 문자 모양 있어 걸친 수 있도록 문자열 앞뒤 약간의 추가 공백 포함을 위해 설계 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3161">The <xref:System.Drawing.Graphics.MeasureString%2A> method is designed for use with individual strings and includes a small amount of extra space before and after the string to allow for overhanging glyphs.</span></span> <span data-ttu-id="db630-3162">또한 합니다 <xref:System.Drawing.Graphics.DrawString%2A> 메서드는 디스플레이 품질을 최적화 하기 위해 문자 모양 요소를 조정 하 고 보고 보다 좁은 문자열로 표시 될 수 있습니다 <xref:System.Drawing.Graphics.MeasureString%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3162">Also, the <xref:System.Drawing.Graphics.DrawString%2A> method adjusts glyph points to optimize display quality and might display a string narrower than reported by <xref:System.Drawing.Graphics.MeasureString%2A>.</span></span> <span data-ttu-id="db630-3163">메트릭 (예: 서식 있는 텍스트를 구현 하는 경우) 레이아웃에서 인접 문자열에 대 한 적합 한을 가져오려면를 <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> 메서드 또는 중 하나는 <xref:System.Drawing.Graphics.MeasureString%2A> 사용 하는 메서드를 <xref:System.Drawing.StringFormat>, 전달 및 <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</span><span class="sxs-lookup"><span data-stu-id="db630-3163">To obtain metrics suitable for adjacent strings in layout (for example, when implementing formatted text), use the <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> method or one of the <xref:System.Drawing.Graphics.MeasureString%2A> methods that takes a <xref:System.Drawing.StringFormat>, and pass <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</span></span> <span data-ttu-id="db630-3164">또한 확인 합니다 <xref:System.Drawing.Graphics.TextRenderingHint%2A> 에 대 한 합니다 <xref:System.Drawing.Graphics> 는 <xref:System.Drawing.Text.TextRenderingHint.AntiAlias>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3164">Also, ensure the <xref:System.Drawing.Graphics.TextRenderingHint%2A> for the <xref:System.Drawing.Graphics> is <xref:System.Drawing.Text.TextRenderingHint.AntiAlias>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-3165">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3165">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3166">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3166">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3167">측정할 문자열을 Arial (16 포인트)로 설정 글꼴 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3167">Creates a string to measure and a font object set to Arial (16 point).</span></span>  
  
-   <span data-ttu-id="db630-3168">문자열의 최대 레이아웃 크기를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3168">Sets the maximum layout size of the string.</span></span>  
  
-   <span data-ttu-id="db630-3169">Size 개체를 만들고, 글꼴 개체 및 레이아웃을 최대 크기를 사용 하 여 문자열의 크기를 측정 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3169">Creates a size object and uses it, the font object, and the maximum layout size to measure the size of the string.</span></span>  
  
-   <span data-ttu-id="db630-3170">문자열의 측정 된 크기를 사용 하 여 빨간색 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3170">Draws a red rectangle using the measured size of the string.</span></span>  
  
-   <span data-ttu-id="db630-3171">그려지는 사각형 내에 있는 문자열을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3171">Draws the string within the drawn rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#138](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#138)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#138](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#138)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#138](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#138)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="db630-3172"><paramref name="font" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-3172"><paramref name="font" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
        <altmember cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
        <related type="Article" href="~/docs/framework/winforms/advanced/using-fonts-and-text.md"><span data-ttu-id="db630-3173">글꼴 및 텍스트 사용</span><span class="sxs-lookup"><span data-stu-id="db630-3173">Using Fonts and Text</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MeasureString">
      <MemberSignature Language="C#" Value="public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, int width);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.SizeF MeasureString(string text, class System.Drawing.Font font, int32 width) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::SizeF MeasureString(System::String ^ text, System::Drawing::Font ^ font, int width);" />
      <MemberSignature Language="F#" Value="member this.MeasureString : string * System.Drawing.Font * int -&gt; System.Drawing.SizeF" Usage="graphics.MeasureString (text, font, width)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="width" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="db630-3174">측정할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3174">String to measure.</span></span></param>
        <param name="font"><span data-ttu-id="db630-3175">문자열의 형식을 정의하는 <see cref="T:System.Drawing.Font" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3175"><see cref="T:System.Drawing.Font" /> that defines the format of the string.</span></span></param>
        <param name="width"><span data-ttu-id="db630-3176">최대 문자열 너비(픽셀)입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3176">Maximum width of the string in pixels.</span></span></param>
        <summary><span data-ttu-id="db630-3177">지정된 <see cref="T:System.Drawing.Font" />를 사용하여 그릴 때 지정된 문자열을 측정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3177">Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" />.</span></span></summary>
        <returns><span data-ttu-id="db630-3178">이 메서드는 <paramref name="font" /> 매개 변수를 사용하여 그린 대로 <paramref name="text" /> 매개 변수에 지정된 문자열의 크기(<see cref="P:System.Drawing.Graphics.PageUnit" /> 속성에 지정된 단위)를 나타내는 <see cref="T:System.Drawing.SizeF" /> 구조체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3178">This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size, in the units specified by the <see cref="P:System.Drawing.Graphics.PageUnit" /> property, of the string specified in the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-3179">합니다 `width` 반환 된 너비 요소의 최대값을 지정 하는 매개 변수 <xref:System.Drawing.SizeF> 구조 (<xref:System.Drawing.SizeF.Width%2A>).</span><span class="sxs-lookup"><span data-stu-id="db630-3179">The `width` parameter specifies the maximum value of the width component of the returned <xref:System.Drawing.SizeF> structure (<xref:System.Drawing.SizeF.Width%2A>).</span></span> <span data-ttu-id="db630-3180">경우는 `width` 매개 변수를 사용 하면 반환된 된 문자열의 실제 너비 보다 작으면 <xref:System.Drawing.SizeF.Width%2A> 구성 요소는 지정된 된 너비에 맞춰 문자의 최대 수를 나타내는 값으로 잘립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3180">If the `width` parameter is less than the actual width of the string, the returned <xref:System.Drawing.SizeF.Width%2A> component is truncated to a value representing the maximum number of characters that will fit within the specified width.</span></span> <span data-ttu-id="db630-3181">반환된 된 전체 문자열에 맞게 <xref:System.Drawing.SizeF.Height%2A> 구성 요소는 줄 바꿈 문자를 사용 하 여 문자열을 표시할 수 있는 값으로 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3181">To accommodate the entire string, the returned <xref:System.Drawing.SizeF.Height%2A> component is adjusted to a value that allows displaying the string with character wrap.</span></span>  
  
 <span data-ttu-id="db630-3182"><xref:System.Drawing.Graphics.MeasureString%2A> 메서드는 개별 사용 하 여 문자열 및 문자 모양 있어 걸친 수 있도록 문자열 앞뒤 약간의 추가 공백 포함을 위해 설계 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3182">The <xref:System.Drawing.Graphics.MeasureString%2A> method is designed for use with individual strings and includes a small amount of extra space before and after the string to allow for overhanging glyphs.</span></span> <span data-ttu-id="db630-3183">또한 합니다 <xref:System.Drawing.Graphics.DrawString%2A> 메서드는 디스플레이 품질을 최적화 하기 위해 문자 모양 요소를 조정 하 고 보고 보다 좁은 문자열로 표시 될 수 있습니다 <xref:System.Drawing.Graphics.MeasureString%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3183">Also, the <xref:System.Drawing.Graphics.DrawString%2A> method adjusts glyph points to optimize display quality and might display a string narrower than reported by <xref:System.Drawing.Graphics.MeasureString%2A>.</span></span> <span data-ttu-id="db630-3184">메트릭 (예: 서식 있는 텍스트를 구현 하는 경우) 레이아웃에서 인접 문자열에 대 한 적합 한을 가져오려면를 <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> 메서드 또는 중 하나는 <xref:System.Drawing.Graphics.MeasureString%2A> 사용 하는 메서드를 <xref:System.Drawing.StringFormat>, 전달 및 <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</span><span class="sxs-lookup"><span data-stu-id="db630-3184">To obtain metrics suitable for adjacent strings in layout (for example, when implementing formatted text), use the <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> method or one of the <xref:System.Drawing.Graphics.MeasureString%2A> methods that takes a <xref:System.Drawing.StringFormat>, and pass <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</span></span> <span data-ttu-id="db630-3185">또한 확인 합니다 <xref:System.Drawing.Graphics.TextRenderingHint%2A> 에 대 한 합니다 <xref:System.Drawing.Graphics> 는 <xref:System.Drawing.Text.TextRenderingHint.AntiAlias>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3185">Also, ensure the <xref:System.Drawing.Graphics.TextRenderingHint%2A> for the <xref:System.Drawing.Graphics> is <xref:System.Drawing.Text.TextRenderingHint.AntiAlias>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-3186">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3186">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3187">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3187">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3188">측정할 문자열을 Arial (16 포인트)로 설정 글꼴 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3188">Creates a string to measure and a font object set to Arial (16 point).</span></span>  
  
-   <span data-ttu-id="db630-3189">문자열의 최대 너비를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3189">Sets the maximum width of the string.</span></span>  
  
-   <span data-ttu-id="db630-3190">Size 개체를 만들고 글꼴 개체와 최대 문자열 너비를 사용 하 여 문자열의 크기를 측정 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3190">Creates a size object and uses it, the font object, and the maximum string width to measure the size of the string.</span></span>  
  
-   <span data-ttu-id="db630-3191">문자열의 측정 된 크기를 사용 하 여 빨간색 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3191">Draws a red rectangle using the measured size of the string.</span></span>  
  
-   <span data-ttu-id="db630-3192">그려지는 사각형 내에 있는 문자열을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3192">Draws the string within the drawn rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#141](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#141)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#141](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#141)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#141](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#141)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="db630-3193"><paramref name="font" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-3193"><paramref name="font" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
        <altmember cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
        <related type="Article" href="~/docs/framework/winforms/advanced/using-fonts-and-text.md"><span data-ttu-id="db630-3194">글꼴 및 텍스트 사용</span><span class="sxs-lookup"><span data-stu-id="db630-3194">Using Fonts and Text</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MeasureString">
      <MemberSignature Language="C#" Value="public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, System.Drawing.PointF origin, System.Drawing.StringFormat stringFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.SizeF MeasureString(string text, class System.Drawing.Font font, valuetype System.Drawing.PointF origin, class System.Drawing.StringFormat stringFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::SizeF MeasureString(System::String ^ text, System::Drawing::Font ^ font, System::Drawing::PointF origin, System::Drawing::StringFormat ^ stringFormat);" />
      <MemberSignature Language="F#" Value="member this.MeasureString : string * System.Drawing.Font * System.Drawing.PointF * System.Drawing.StringFormat -&gt; System.Drawing.SizeF" Usage="graphics.MeasureString (text, font, origin, stringFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="origin" Type="System.Drawing.PointF" />
        <Parameter Name="stringFormat" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="db630-3195">측정할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3195">String to measure.</span></span></param>
        <param name="font"><span data-ttu-id="db630-3196">문자열의 텍스트 형식을 정의하는 <see cref="T:System.Drawing.Font" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3196"><see cref="T:System.Drawing.Font" /> defines the text format of the string.</span></span></param>
        <param name="origin"><span data-ttu-id="db630-3197">문자열의 왼쪽 위 모퉁이를 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3197"><see cref="T:System.Drawing.PointF" /> structure that represents the upper-left corner of the string.</span></span></param>
        <param name="stringFormat"><span data-ttu-id="db630-3198">줄 간격과 같은 문자열에 대한 서식 지정 정보를 나타내는 <see cref="T:System.Drawing.StringFormat" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3198"><see cref="T:System.Drawing.StringFormat" /> that represents formatting information, such as line spacing, for the string.</span></span></param>
        <summary><span data-ttu-id="db630-3199">지정된 <see cref="T:System.Drawing.Font" />로 그리고, 지정된 <see cref="T:System.Drawing.StringFormat" />으로 서식을 지정할 때 지정된 문자열을 측정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3199">Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" /> and formatted with the specified <see cref="T:System.Drawing.StringFormat" />.</span></span></summary>
        <returns><span data-ttu-id="db630-3200">이 메서드는 <paramref name="font" /> 매개 변수와 <paramref name="stringFormat" /> 매개 변수를 사용하여 그린 대로 <paramref name="text" /> 매개 변수에 지정된 문자열의 크기(<see cref="P:System.Drawing.Graphics.PageUnit" /> 속성에 지정된 단위)를 나타내는 <see cref="T:System.Drawing.SizeF" /> 구조체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3200">This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size, in the units specified by the <see cref="P:System.Drawing.Graphics.PageUnit" /> property, of the string specified by the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter and the <paramref name="stringFormat" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-3201"><xref:System.Drawing.Graphics.MeasureString%2A> 메서드는 개별 사용 하 여 문자열 및 문자 모양 있어 걸친 수 있도록 문자열 앞뒤 약간의 추가 공백 포함을 위해 설계 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3201">The <xref:System.Drawing.Graphics.MeasureString%2A> method is designed for use with individual strings and includes a small amount of extra space before and after the string to allow for overhanging glyphs.</span></span> <span data-ttu-id="db630-3202">또한 합니다 <xref:System.Drawing.Graphics.DrawString%2A> 메서드는 디스플레이 품질을 최적화 하기 위해 문자 모양 요소를 조정 하 고 보고 보다 좁은 문자열로 표시 될 수 있습니다 <xref:System.Drawing.Graphics.MeasureString%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3202">Also, the <xref:System.Drawing.Graphics.DrawString%2A> method adjusts glyph points to optimize display quality and might display a string narrower than reported by <xref:System.Drawing.Graphics.MeasureString%2A>.</span></span> <span data-ttu-id="db630-3203">메트릭 (예: 서식 있는 텍스트를 구현 하는 경우) 레이아웃에서 인접 문자열에 대 한 적합 한을 가져오려면를 <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> 메서드 또는 중 하나는 <xref:System.Drawing.Graphics.MeasureString%2A> 사용 하는 메서드를 <xref:System.Drawing.StringFormat>, 전달 및 <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</span><span class="sxs-lookup"><span data-stu-id="db630-3203">To obtain metrics suitable for adjacent strings in layout (for example, when implementing formatted text), use the <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> method or one of the <xref:System.Drawing.Graphics.MeasureString%2A> methods that takes a <xref:System.Drawing.StringFormat>, and pass <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</span></span> <span data-ttu-id="db630-3204">또한 확인 합니다 <xref:System.Drawing.Graphics.TextRenderingHint%2A> 에 대 한 합니다 <xref:System.Drawing.Graphics> 는 <xref:System.Drawing.Text.TextRenderingHint.AntiAlias>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3204">Also, ensure the <xref:System.Drawing.Graphics.TextRenderingHint%2A> for the <xref:System.Drawing.Graphics> is <xref:System.Drawing.Text.TextRenderingHint.AntiAlias>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-3205">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3205">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3206">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3206">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3207">측정할 문자열을 만들고 Arial (16 포인트)로 설정 하는 글꼴 개체</span><span class="sxs-lookup"><span data-stu-id="db630-3207">Creates a string to measure and a font object set to Arial (16 point)</span></span>  
  
-   <span data-ttu-id="db630-3208">문자열의 왼쪽 위 모퉁이 찾으려고 지점을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3208">Creates a point to locate the upper-left corner of the string.</span></span>  
  
-   <span data-ttu-id="db630-3209">문자열 형식 개체를 만들고 그 형식 플래그 설정 하는 <xref:System.Drawing.StringFormatFlags.DirectionVertical>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3209">Creates a string format object and sets its format flags to <xref:System.Drawing.StringFormatFlags.DirectionVertical>.</span></span>  
  
-   <span data-ttu-id="db630-3210">문자열을 크기 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3210">Creates a size object to measure the string.</span></span>  
  
-   <span data-ttu-id="db630-3211">문자열, 글꼴 개체, 위치 지정 점 및 문자열 형식을 사용 하 여 문자열의 크기를 측정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3211">Measures the size of the string, using the string, the font object, the locating point, and the string format.</span></span>  
  
-   <span data-ttu-id="db630-3212">찾기 지점과 문자열의 측정된 크기를 사용 하 여 빨간색 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3212">Draws a red rectangle using the locating point and the measured size of the string.</span></span>  
  
-   <span data-ttu-id="db630-3213">그려지는 사각형 내에 있는 문자열을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3213">Draws the string within the drawn rectangle.</span></span>  
  
 <span data-ttu-id="db630-3214">결과 세로 문자열을 둘러싸는 세로 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3214">The result is a vertical rectangle enclosing a vertical string.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#137](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#137)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#137](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#137)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#137](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#137)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="db630-3215"><paramref name="font" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-3215"><paramref name="font" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
        <altmember cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
        <related type="Article" href="~/docs/framework/winforms/advanced/using-fonts-and-text.md"><span data-ttu-id="db630-3216">글꼴 및 텍스트 사용</span><span class="sxs-lookup"><span data-stu-id="db630-3216">Using Fonts and Text</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MeasureString">
      <MemberSignature Language="C#" Value="public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, System.Drawing.SizeF layoutArea, System.Drawing.StringFormat stringFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.SizeF MeasureString(string text, class System.Drawing.Font font, valuetype System.Drawing.SizeF layoutArea, class System.Drawing.StringFormat stringFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::SizeF MeasureString(System::String ^ text, System::Drawing::Font ^ font, System::Drawing::SizeF layoutArea, System::Drawing::StringFormat ^ stringFormat);" />
      <MemberSignature Language="F#" Value="member this.MeasureString : string * System.Drawing.Font * System.Drawing.SizeF * System.Drawing.StringFormat -&gt; System.Drawing.SizeF" Usage="graphics.MeasureString (text, font, layoutArea, stringFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="layoutArea" Type="System.Drawing.SizeF" />
        <Parameter Name="stringFormat" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="db630-3217">측정할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3217">String to measure.</span></span></param>
        <param name="font"><span data-ttu-id="db630-3218">문자열의 텍스트 형식을 정의하는 <see cref="T:System.Drawing.Font" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3218"><see cref="T:System.Drawing.Font" /> defines the text format of the string.</span></span></param>
        <param name="layoutArea"><span data-ttu-id="db630-3219">텍스트에 대한 최대 레이아웃 영역을 지정하는 <see cref="T:System.Drawing.SizeF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3219"><see cref="T:System.Drawing.SizeF" /> structure that specifies the maximum layout area for the text.</span></span></param>
        <param name="stringFormat"><span data-ttu-id="db630-3220">줄 간격과 같은 문자열에 대한 서식 지정 정보를 나타내는 <see cref="T:System.Drawing.StringFormat" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3220"><see cref="T:System.Drawing.StringFormat" /> that represents formatting information, such as line spacing, for the string.</span></span></param>
        <summary><span data-ttu-id="db630-3221">지정된 <see cref="T:System.Drawing.Font" />로 그리고, 지정된 <see cref="T:System.Drawing.StringFormat" />으로 서식을 지정할 때 지정된 문자열을 측정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3221">Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" /> and formatted with the specified <see cref="T:System.Drawing.StringFormat" />.</span></span></summary>
        <returns><span data-ttu-id="db630-3222">이 메서드는 <paramref name="font" /> 매개 변수와 <paramref name="stringFormat" /> 매개 변수를 사용하여 그린 대로 <paramref name="text" /> 매개 변수에 지정된 문자열의 크기(<see cref="P:System.Drawing.Graphics.PageUnit" /> 속성에 지정된 단위)를 나타내는 <see cref="T:System.Drawing.SizeF" /> 구조체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3222">This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size, in the units specified by the <see cref="P:System.Drawing.Graphics.PageUnit" /> property, of the string specified in the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter and the <paramref name="stringFormat" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-3223"><xref:System.Drawing.Graphics.MeasureString%2A> 메서드는 개별 사용 하 여 문자열 및 문자 모양 있어 걸친 수 있도록 문자열 앞뒤 약간의 추가 공백 포함을 위해 설계 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3223">The <xref:System.Drawing.Graphics.MeasureString%2A> method is designed for use with individual strings and includes a small amount of extra space before and after the string to allow for overhanging glyphs.</span></span> <span data-ttu-id="db630-3224">또한 합니다 <xref:System.Drawing.Graphics.DrawString%2A> 메서드는 디스플레이 품질을 최적화 하기 위해 문자 모양 요소를 조정 하 고 보고 보다 좁은 문자열로 표시 될 수 있습니다 <xref:System.Drawing.Graphics.MeasureString%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3224">Also, the <xref:System.Drawing.Graphics.DrawString%2A> method adjusts glyph points to optimize display quality and might display a string narrower than reported by <xref:System.Drawing.Graphics.MeasureString%2A>.</span></span> <span data-ttu-id="db630-3225">메트릭 (예: 서식 있는 텍스트를 구현 하는 경우) 레이아웃에서 인접 문자열에 대 한 적합 한을 가져오려면를 <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> 메서드 또는 중 하나는 <xref:System.Drawing.Graphics.MeasureString%2A> 사용 하는 메서드를 <xref:System.Drawing.StringFormat>, 전달 및 <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</span><span class="sxs-lookup"><span data-stu-id="db630-3225">To obtain metrics suitable for adjacent strings in layout (for example, when implementing formatted text), use the <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> method or one of the <xref:System.Drawing.Graphics.MeasureString%2A> methods that takes a <xref:System.Drawing.StringFormat>, and pass <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</span></span> <span data-ttu-id="db630-3226">또한 확인 합니다 <xref:System.Drawing.Graphics.TextRenderingHint%2A> 에 대 한 합니다 <xref:System.Drawing.Graphics> 는 <xref:System.Drawing.Text.TextRenderingHint.AntiAlias>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3226">Also, ensure the <xref:System.Drawing.Graphics.TextRenderingHint%2A> for the <xref:System.Drawing.Graphics> is <xref:System.Drawing.Text.TextRenderingHint.AntiAlias>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-3227">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3227">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3228">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3228">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3229">측정할 문자열을 Arial (16 포인트)로 설정 글꼴 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3229">Creates a string to measure and a font object set to Arial (16 point).</span></span>  
  
-   <span data-ttu-id="db630-3230">문자열을 크기 개체를 만들고 문자열의 최대 레이아웃 크기를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3230">Sets the maximum layout size of the string, creating a size object to measure the string.</span></span>  
  
-   <span data-ttu-id="db630-3231">문자열 형식 개체를 만들고 그 형식 플래그 설정 하는 <xref:System.Drawing.StringFormatFlags.DirectionVertical>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3231">Creates a string format object and sets its format flags to <xref:System.Drawing.StringFormatFlags.DirectionVertical>.</span></span>  
  
-   <span data-ttu-id="db630-3232">문자열 및 글꼴 개체, 최대 레이아웃 크기 문자열 형식을 사용 하 여 문자열의 크기를 측정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3232">Measures the size of the string, using the string, the font object, the maximum layout size, and the string format.</span></span>  
  
-   <span data-ttu-id="db630-3233">문자열의 측정 된 크기를 사용 하 여 빨간색 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3233">Draws a red rectangle using the measured size of the string.</span></span>  
  
-   <span data-ttu-id="db630-3234">그려지는 사각형 내에 있는 문자열을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3234">Draws the string within the drawn rectangle.</span></span>  
  
 <span data-ttu-id="db630-3235">결과 세로 문자열을 둘러싸는 세로 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3235">The result is a vertical rectangle enclosing a vertical string.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#139](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#139)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#139](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#139)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#139](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#139)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="db630-3236"><paramref name="font" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-3236"><paramref name="font" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
        <altmember cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
        <related type="Article" href="~/docs/framework/winforms/advanced/using-fonts-and-text.md"><span data-ttu-id="db630-3237">글꼴 및 텍스트 사용</span><span class="sxs-lookup"><span data-stu-id="db630-3237">Using Fonts and Text</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MeasureString">
      <MemberSignature Language="C#" Value="public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, int width, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.SizeF MeasureString(string text, class System.Drawing.Font font, int32 width, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::SizeF MeasureString(System::String ^ text, System::Drawing::Font ^ font, int width, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.MeasureString : string * System.Drawing.Font * int * System.Drawing.StringFormat -&gt; System.Drawing.SizeF" Usage="graphics.MeasureString (text, font, width, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="db630-3238">측정할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3238">String to measure.</span></span></param>
        <param name="font"><span data-ttu-id="db630-3239">문자열의 텍스트 서식을 정의하는 <see cref="T:System.Drawing.Font" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3239"><see cref="T:System.Drawing.Font" /> that defines the text format of the string.</span></span></param>
        <param name="width"><span data-ttu-id="db630-3240">문자열의 최대 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3240">Maximum width of the string.</span></span></param>
        <param name="format"><span data-ttu-id="db630-3241">줄 간격과 같은 문자열에 대한 서식 지정 정보를 나타내는 <see cref="T:System.Drawing.StringFormat" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3241"><see cref="T:System.Drawing.StringFormat" /> that represents formatting information, such as line spacing, for the string.</span></span></param>
        <summary><span data-ttu-id="db630-3242">지정된 <see cref="T:System.Drawing.Font" />로 그리고, 지정된 <see cref="T:System.Drawing.StringFormat" />으로 서식을 지정할 때 지정된 문자열을 측정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3242">Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" /> and formatted with the specified <see cref="T:System.Drawing.StringFormat" />.</span></span></summary>
        <returns><span data-ttu-id="db630-3243">이 메서드는 <paramref name="font" /> 매개 변수와 <paramref name="stringFormat" /> 매개 변수를 사용하여 그린 대로 <paramref name="text" /> 매개 변수에 지정된 문자열의 크기(<see cref="P:System.Drawing.Graphics.PageUnit" /> 속성에 지정된 단위)를 나타내는 <see cref="T:System.Drawing.SizeF" /> 구조체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3243">This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size, in the units specified by the <see cref="P:System.Drawing.Graphics.PageUnit" /> property, of the string specified in the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter and the <paramref name="stringFormat" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-3244"><xref:System.Drawing.Graphics.MeasureString%2A> 메서드는 개별 사용 하 여 문자열 및 문자 모양 있어 걸친 수 있도록 문자열 앞뒤 약간의 추가 공백 포함을 위해 설계 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3244">The <xref:System.Drawing.Graphics.MeasureString%2A> method is designed for use with individual strings and includes a small amount of extra space before and after the string to allow for overhanging glyphs.</span></span> <span data-ttu-id="db630-3245">또한 합니다 <xref:System.Drawing.Graphics.DrawString%2A> 메서드는 디스플레이 품질을 최적화 하기 위해 문자 모양 요소를 조정 하 고 보고 보다 좁은 문자열로 표시 될 수 있습니다 <xref:System.Drawing.Graphics.MeasureString%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3245">Also, the <xref:System.Drawing.Graphics.DrawString%2A> method adjusts glyph points to optimize display quality and might display a string narrower than reported by <xref:System.Drawing.Graphics.MeasureString%2A>.</span></span> <span data-ttu-id="db630-3246">메트릭 (예: 서식 있는 텍스트를 구현 하는 경우) 레이아웃에서 인접 문자열에 대 한 적합 한을 가져오려면를 <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> 메서드 또는 중 하나는 <xref:System.Drawing.Graphics.MeasureString%2A> 사용 하는 메서드를 <xref:System.Drawing.StringFormat>, 전달 및 <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</span><span class="sxs-lookup"><span data-stu-id="db630-3246">To obtain metrics suitable for adjacent strings in layout (for example, when implementing formatted text), use the <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> method or one of the <xref:System.Drawing.Graphics.MeasureString%2A> methods that takes a <xref:System.Drawing.StringFormat>, and pass <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</span></span> <span data-ttu-id="db630-3247">또한 확인 합니다 <xref:System.Drawing.Graphics.TextRenderingHint%2A> 에 대 한 합니다 <xref:System.Drawing.Graphics> 는 <xref:System.Drawing.Text.TextRenderingHint.AntiAlias>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3247">Also, ensure the <xref:System.Drawing.Graphics.TextRenderingHint%2A> for the <xref:System.Drawing.Graphics> is <xref:System.Drawing.Text.TextRenderingHint.AntiAlias>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-3248">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3248">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3249">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3249">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3250">측정값 및 글꼴을 문자열로 만듭니다 개체 Arial (16 포인트)로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3250">Creates a string to measure and a font object set it to Arial (16 point).</span></span>  
  
-   <span data-ttu-id="db630-3251">문자열의 최대 너비를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3251">Sets the maximum width of the string.</span></span>  
  
-   <span data-ttu-id="db630-3252">문자열 형식 개체를 만들고 그 형식 플래그 설정 하는 <xref:System.Drawing.StringFormatFlags.DirectionVertical>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3252">Creates a string format object and sets its format flags to <xref:System.Drawing.StringFormatFlags.DirectionVertical>.</span></span>  
  
-   <span data-ttu-id="db630-3253">문자열을 크기 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3253">Creates a size object to measure the string.</span></span>  
  
-   <span data-ttu-id="db630-3254">문자열, font 개체, 최대 너비와 문자열 형식으로 사용 하 여 문자열의 크기를 측정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3254">Measures the size of the string, using the string, the font object, the maximum width, and the string format.</span></span>  
  
-   <span data-ttu-id="db630-3255">문자열의 측정 된 크기를 사용 하 여 빨간색 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3255">Draws a red rectangle using the measured size of the string.</span></span>  
  
-   <span data-ttu-id="db630-3256">그려지는 사각형 내에 있는 문자열을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3256">Draws the string within the drawn rectangle.</span></span>  
  
 <span data-ttu-id="db630-3257">결과 세로 문자열을 둘러싸는 세로 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3257">The result is a vertical rectangle enclosing a vertical string.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#142](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#142)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#142](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#142)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#142](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#142)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="db630-3258"><paramref name="font" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-3258"><paramref name="font" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
        <altmember cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
        <related type="Article" href="~/docs/framework/winforms/advanced/using-fonts-and-text.md"><span data-ttu-id="db630-3259">글꼴 및 텍스트 사용</span><span class="sxs-lookup"><span data-stu-id="db630-3259">Using Fonts and Text</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MeasureString">
      <MemberSignature Language="C#" Value="public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, System.Drawing.SizeF layoutArea, System.Drawing.StringFormat stringFormat, out int charactersFitted, out int linesFilled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.SizeF MeasureString(string text, class System.Drawing.Font font, valuetype System.Drawing.SizeF layoutArea, class System.Drawing.StringFormat stringFormat, [out] int32&amp; charactersFitted, [out] int32&amp; linesFilled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::SizeF MeasureString(System::String ^ text, System::Drawing::Font ^ font, System::Drawing::SizeF layoutArea, System::Drawing::StringFormat ^ stringFormat, [Runtime::InteropServices::Out] int % charactersFitted, [Runtime::InteropServices::Out] int % linesFilled);" />
      <MemberSignature Language="F#" Value="member this.MeasureString : string * System.Drawing.Font * System.Drawing.SizeF * System.Drawing.StringFormat *  *  -&gt; System.Drawing.SizeF" Usage="graphics.MeasureString (text, font, layoutArea, stringFormat, charactersFitted, linesFilled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="layoutArea" Type="System.Drawing.SizeF" />
        <Parameter Name="stringFormat" Type="System.Drawing.StringFormat" />
        <Parameter Name="charactersFitted" Type="System.Int32" RefType="out" />
        <Parameter Name="linesFilled" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="db630-3260">측정할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3260">String to measure.</span></span></param>
        <param name="font"><span data-ttu-id="db630-3261">문자열의 텍스트 서식을 정의하는 <see cref="T:System.Drawing.Font" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3261"><see cref="T:System.Drawing.Font" /> that defines the text format of the string.</span></span></param>
        <param name="layoutArea"><span data-ttu-id="db630-3262">텍스트에 대한 최대 레이아웃 영역을 지정하는 <see cref="T:System.Drawing.SizeF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3262"><see cref="T:System.Drawing.SizeF" /> structure that specifies the maximum layout area for the text.</span></span></param>
        <param name="stringFormat"><span data-ttu-id="db630-3263">줄 간격과 같은 문자열에 대한 서식 지정 정보를 나타내는 <see cref="T:System.Drawing.StringFormat" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3263"><see cref="T:System.Drawing.StringFormat" /> that represents formatting information, such as line spacing, for the string.</span></span></param>
        <param name="charactersFitted"><span data-ttu-id="db630-3264">문자열에 있는 문자의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3264">Number of characters in the string.</span></span></param>
        <param name="linesFilled"><span data-ttu-id="db630-3265">문자열에 있는 텍스트 줄의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3265">Number of text lines in the string.</span></span></param>
        <summary><span data-ttu-id="db630-3266">지정된 <see cref="T:System.Drawing.Font" />로 그리고, 지정된 <see cref="T:System.Drawing.StringFormat" />으로 서식을 지정할 때 지정된 문자열을 측정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3266">Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" /> and formatted with the specified <see cref="T:System.Drawing.StringFormat" />.</span></span></summary>
        <returns><span data-ttu-id="db630-3267">이 메서드는 <paramref name="font" /> 매개 변수와 <paramref name="stringFormat" /> 매개 변수를 사용하여 그린 대로 <paramref name="text" /> 매개 변수의 문자열 크기(<see cref="P:System.Drawing.Graphics.PageUnit" /> 속성에 지정된 단위)를 나타내는 <see cref="T:System.Drawing.SizeF" /> 구조체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3267">This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size of the string, in the units specified by the <see cref="P:System.Drawing.Graphics.PageUnit" /> property, of the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter and the <paramref name="stringFormat" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-3268"><xref:System.Drawing.Graphics.MeasureString%2A> 메서드는 개별 사용 하 여 문자열 및 문자 모양 있어 걸친 수 있도록 문자열 앞뒤 약간의 추가 공백 포함을 위해 설계 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3268">The <xref:System.Drawing.Graphics.MeasureString%2A> method is designed for use with individual strings and includes a small amount of extra space before and after the string to allow for overhanging glyphs.</span></span> <span data-ttu-id="db630-3269">또한 합니다 <xref:System.Drawing.Graphics.DrawString%2A> 메서드는 디스플레이 품질을 최적화 하기 위해 문자 모양 요소를 조정 하 고 보고 보다 좁은 문자열로 표시 될 수 있습니다 <xref:System.Drawing.Graphics.MeasureString%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3269">Also, the <xref:System.Drawing.Graphics.DrawString%2A> method adjusts glyph points to optimize display quality and might display a string narrower than reported by <xref:System.Drawing.Graphics.MeasureString%2A>.</span></span> <span data-ttu-id="db630-3270">인접 문자열 레이아웃 (예: 서식 있는 텍스트를 구현 하는 경우)에 대해 적합 한 메트릭을 가져오려면를 <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> 메서드 또는 중 하나는 <xref:System.Drawing.Graphics.MeasureString%2A> 사용 하는 메서드를 <xref:System.Drawing.StringFormat> 전달 <xref:System.Drawing.StringFormat.GenericTypographic%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3270">To obtain metrics suitable for adjacent strings in layout (for example, when implementing formatted text), use the <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> method or one of the <xref:System.Drawing.Graphics.MeasureString%2A> methods that takes a <xref:System.Drawing.StringFormat> and pass <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</span></span> <span data-ttu-id="db630-3271">또한 확인 합니다 <xref:System.Drawing.Graphics.TextRenderingHint%2A> 에 대 한는 <xref:System.Drawing.Graphics> 는 <xref:System.Drawing.Text.TextRenderingHint.AntiAlias>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3271">Also ensure the <xref:System.Drawing.Graphics.TextRenderingHint%2A> for the <xref:System.Drawing.Graphics> is <xref:System.Drawing.Text.TextRenderingHint.AntiAlias>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-3272">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3272">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3273">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3273">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3274">측정할 문자열을 만들고 Arial (16 포인트)로 설정 하는 글꼴 개체</span><span class="sxs-lookup"><span data-stu-id="db630-3274">Creates a string to measure and a font object set to Arial (16 point)</span></span>  
  
-   <span data-ttu-id="db630-3275">문자열의 최대 레이아웃 크기를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3275">Sets the maximum layout size of the string.</span></span>  
  
-   <span data-ttu-id="db630-3276">문자열 형식 개체를 만들고 그 형식 플래그 설정 하는 <xref:System.Drawing.StringFormatFlags.DirectionVertical>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3276">Creates a string format object and sets its format flags to <xref:System.Drawing.StringFormatFlags.DirectionVertical>.</span></span>  
  
-   <span data-ttu-id="db630-3277">정수 변수를 만듭니다 `charactersFitted` 고 `linesFilled` 및 크기 개체를 문자열을 측정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3277">Creates the integer variables `charactersFitted` and `linesFilled` and a size object to measure the string.</span></span>  
  
-   <span data-ttu-id="db630-3278">문자열의 크기를 측정 하 고 맞추는 문자 및 문자열, font 개체, 최대 레이아웃 크기 및 문자열 형식을 사용 하 여 채워진 줄의 수를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3278">Measures the size of the string and determines the number of characters fitted and lines filled, using the string, the font object, the maximum layout size, and the string format.</span></span>  
  
-   <span data-ttu-id="db630-3279">문자열의 측정 된 크기를 사용 하 여 빨간색 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3279">Draws a red rectangle using the measured size of the string.</span></span>  
  
-   <span data-ttu-id="db630-3280">그려지는 사각형 내에 있는 문자열을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3280">Draws the string within the drawn rectangle.</span></span>  
  
-   <span data-ttu-id="db630-3281">맞추는 문자와 채워진 줄 번호의 값을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3281">Draws the values of the number of characters fitted and lines filled.</span></span>  
  
 <span data-ttu-id="db630-3282">결과 세로 문자열을 둘러싸는 세로 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3282">The result is a vertical rectangle enclosing a vertical string.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#140](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#140)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#140](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#140)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#140](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#140)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="db630-3283"><paramref name="font" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="db630-3283"><paramref name="font" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
        <altmember cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
        <related type="Article" href="~/docs/framework/winforms/advanced/using-fonts-and-text.md"><span data-ttu-id="db630-3284">글꼴 및 텍스트 사용</span><span class="sxs-lookup"><span data-stu-id="db630-3284">Using Fonts and Text</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="MultiplyTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db630-3285">이 <see cref="T:System.Drawing.Graphics" />의 월드 변형과 지정된 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 곱합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3285">Multiplies the world transformation of this <see cref="T:System.Drawing.Graphics" /> and specified the <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MultiplyTransform">
      <MemberSignature Language="C#" Value="public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MultiplyTransform(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MultiplyTransform(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.MultiplyTransform : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphics.MultiplyTransform matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="db630-3286">월드 변형을 곱하는 4x4 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3286">4x4 <see cref="T:System.Drawing.Drawing2D.Matrix" /> that multiplies the world transformation.</span></span></param>
        <summary><span data-ttu-id="db630-3287">이 <see cref="T:System.Drawing.Graphics" />의 월드 변형과 지정된 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 곱합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3287">Multiplies the world transformation of this <see cref="T:System.Drawing.Graphics" /> and specified the <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-3288">이 메서드 앞에서 지정 된 매트릭스를 추가 합니다 `matrix` 매개 변수를 결과 되도록 `matrix` 월드 변형을 x입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3288">This method prepends the matrix specified by the `matrix` parameter, so that the result is `matrix` x world transformation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-3289">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3289">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3290">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3290">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3291">만듭니다는 `transformMatrix` 행렬 (두 두 항등 매트릭스와 0 변환 벡터)입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3291">Creates a `transformMatrix` matrix (a two by two identity matrix plus a zero-translation vector).</span></span>  
  
-   <span data-ttu-id="db630-3292">변환 매트릭스 벡터 (200, 100)로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3292">Translates the transform matrix by a vector (200, 100).</span></span>  
  
-   <span data-ttu-id="db630-3293">Windows Form의 월드 변형 매트릭스 30도 만큼 회전, 폼의 변형 매트릭스를 30도 회전 행렬을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3293">Rotates the world transformation matrix of the Windows Form by 30 degrees, prepends the rotation matrix for 30 degrees to the form's transformation matrix.</span></span>  
  
-   <span data-ttu-id="db630-3294">변환 된으로 회전된 월드 변형 매트릭스를 곱합니다 `transformMatrix`를 앞에 추가 하 고는 `transformMatrix` 월드 변형 매트릭스를 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3294">Multiplies the rotated world transformation matrix by the translated `transformMatrix`, and prepends the `transformMatrix` to the world transformation matrix.</span></span>  
  
-   <span data-ttu-id="db630-3295">회전 되 고 번역 된 타원을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3295">Draws a rotated, translated ellipse.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#143](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#143)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#143](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#143)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#143](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#143)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/0659fe00-9e0c-41c4-9118-016f2404c905"><span data-ttu-id="db630-3296">매트릭스에 의한 변형 표시</span><span class="sxs-lookup"><span data-stu-id="db630-3296">Matrix Representation of Transformations</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MultiplyTransform">
      <MemberSignature Language="C#" Value="public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MultiplyTransform(class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MultiplyTransform(System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.MultiplyTransform : System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="graphics.MultiplyTransform (matrix, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="db630-3297">월드 변형을 곱하는 4x4 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3297">4x4 <see cref="T:System.Drawing.Drawing2D.Matrix" /> that multiplies the world transformation.</span></span></param>
        <param name="order"><span data-ttu-id="db630-3298">곱하기의 순서를 결정하는 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3298">Member of the <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that determines the order of the multiplication.</span></span></param>
        <summary><span data-ttu-id="db630-3299">이 <see cref="T:System.Drawing.Graphics" />의 월드 변형과 지정된 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 지정된 순서로 곱합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3299">Multiplies the world transformation of this <see cref="T:System.Drawing.Graphics" /> and specified the <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-3300">값이 <xref:System.Drawing.Drawing2D.MatrixOrder.Prepend> 에 대 한는 `order` 곱하기의 순서는 매개 변수 지정 `matrix` 월드 변형을 x입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3300">A value of <xref:System.Drawing.Drawing2D.MatrixOrder.Prepend> for the `order` parameter specifies that the order of the multiplication is `matrix` x world transformation.</span></span> <span data-ttu-id="db630-3301">값이 <xref:System.Drawing.Drawing2D.MatrixOrder.Append> 에 대 한 `order` 곱하기의 순서는 월드 변형을 x 지정 `matrix`합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3301">A value of <xref:System.Drawing.Drawing2D.MatrixOrder.Append> for `order` specifies that the order of the multiplication is world transformation x `matrix`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-3302">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3302">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3303">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3303">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3304">만듭니다는 `transformMatrix` 행렬 (두 두 항등 매트릭스와 0 변환 벡터)입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3304">Creates a `transformMatrix` matrix (a two by two identity matrix plus a zero-translation vector).</span></span>  
  
-   <span data-ttu-id="db630-3305">변환 매트릭스 벡터 (200, 100)로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3305">Translates the transform matrix by a vector (200, 100).</span></span>  
  
-   <span data-ttu-id="db630-3306">폼의 변형 매트릭스를 30도 회전 매트릭스를 앞으로 30도, Windows Form의 월드 변형 매트릭스를 회전 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3306">Rotates the world transformation matrix of the Windows Form by 30 degrees, prepending the rotation matrix for 30 degrees to the form's transformation matrix.</span></span>  
  
-   <span data-ttu-id="db630-3307">으로 변환 된 회전된 월드 변형 매트릭스를 곱합니다 `transformMatrix`, 추가 된 `transformMatrix` 월드 변형 매트릭스를 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3307">Multiplies the rotated world transformation matrix by the translated `transformMatrix`, appending the `transformMatrix` to the world transformation matrix.</span></span>  
  
-   <span data-ttu-id="db630-3308">회전 되 고 번역 된 타원을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3308">Draws a rotated, translated ellipse.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#144](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#144)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#144](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#144)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#144](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#144)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/0659fe00-9e0c-41c4-9118-016f2404c905"><span data-ttu-id="db630-3309">매트릭스에 의한 변형 표시</span><span class="sxs-lookup"><span data-stu-id="db630-3309">Matrix Representation of Transformations</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PageScale">
      <MemberSignature Language="C#" Value="public float PageScale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 PageScale" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.PageScale" />
      <MemberSignature Language="VB.NET" Value="Public Property PageScale As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float PageScale { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.PageScale : single with get, set" Usage="System.Drawing.Graphics.PageScale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db630-3310">이 <see cref="T:System.Drawing.Graphics" />의 전체 단위와 페이지 단위 사이의 크기 조정을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3310">Gets or sets the scaling between world units and page units for this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <value><span data-ttu-id="db630-3311">이 속성은 이 <see cref="T:System.Drawing.Graphics" />에 대한 전체 단위와 페이지 단위 사이의 크기 조정 값을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3311">This property specifies a value for the scaling between world units and page units for this <see cref="T:System.Drawing.Graphics" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="db630-3312">다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Drawing.Graphics.PageScale%2A> 및 <xref:System.Drawing.Graphics.TranslateTransform%2A> 사각형을 그릴 때 크기와 원점을 변경 하는 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3312">The following code example demonstrates how to use the <xref:System.Drawing.Graphics.PageScale%2A> and <xref:System.Drawing.Graphics.TranslateTransform%2A> members to change the scale and origin when you draw a rectangle.</span></span>  
  
 <span data-ttu-id="db630-3313">이 예제에서는 Windows Forms를 사용 하 여 사용 하도록 설계 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3313">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="db630-3314">양식과 호출 코드를 붙여 합니다 `ChangePageScaleAndTranslateTransform` 폼을 처리 하는 경우 메서드 <xref:System.Windows.Forms.Control.Paint> 이벤트를 전달 `e` 으로 <xref:System.Windows.Forms.PaintEventArgs>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3314">Paste the code into a form and call the `ChangePageScaleAndTranslateTransform` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.GraphicsProperties#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.GraphicsProperties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CS/form1.cs#2)]
 [!code-vb[System.Drawing.GraphicsProperties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/c61ff50a-eb1d-4e6c-83cd-f7e9764cfa9f"><span data-ttu-id="db630-3315">좌표계 형식</span><span class="sxs-lookup"><span data-stu-id="db630-3315">Types of Coordinate Systems</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PageUnit">
      <MemberSignature Language="C#" Value="public System.Drawing.GraphicsUnit PageUnit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.GraphicsUnit PageUnit" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.PageUnit" />
      <MemberSignature Language="VB.NET" Value="Public Property PageUnit As GraphicsUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::GraphicsUnit PageUnit { System::Drawing::GraphicsUnit get(); void set(System::Drawing::GraphicsUnit value); };" />
      <MemberSignature Language="F#" Value="member this.PageUnit : System.Drawing.GraphicsUnit with get, set" Usage="System.Drawing.Graphics.PageUnit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.GraphicsUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db630-3316">이 <see cref="T:System.Drawing.Graphics" />의 페이지 좌표에 사용되는 측정 단위를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3316">Gets or sets the unit of measure used for page coordinates in this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <value><span data-ttu-id="db630-3317"><see cref="F:System.Drawing.GraphicsUnit.World" />를 제외한 <see cref="T:System.Drawing.GraphicsUnit" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3317">One of the <see cref="T:System.Drawing.GraphicsUnit" /> values other than <see cref="F:System.Drawing.GraphicsUnit.World" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-3318">그래픽 장치는이 페이지 좌표에 사용 되는 측정 단위 <xref:System.Drawing.Graphics>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3318">The graphics unit is the unit of measure used for page coordinates in this <xref:System.Drawing.Graphics>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-3319">다음 코드 예제에서는 변경의 효과 보여 줍니다.는 <xref:System.Drawing.Graphics.PageUnit%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3319">The following code example demonstrates the effect of changing the <xref:System.Drawing.Graphics.PageUnit%2A> property.</span></span>  
  
 <span data-ttu-id="db630-3320">이 예제에서는 Windows Forms를 사용 하 여 사용 하도록 설계 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3320">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="db630-3321">양식과 호출 코드를 붙여 합니다 `ChangePageUnit` 폼을 처리 하는 경우 메서드 <xref:System.Windows.Forms.Control.Paint> 이벤트를 전달 `e` 으로 <xref:System.Windows.Forms.PaintEventArgs>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3321">Paste the code into a form and call the `ChangePageUnit` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.GraphicsProperties#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.GraphicsProperties#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CS/form1.cs#3)]
 [!code-vb[System.Drawing.GraphicsProperties#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="db630-3322"><see cref="P:System.Drawing.Graphics.PageUnit" />는 물리적 단위가 아닌 <see cref="F:System.Drawing.GraphicsUnit.World" />로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3322"><see cref="P:System.Drawing.Graphics.PageUnit" /> is set to <see cref="F:System.Drawing.GraphicsUnit.World" />, which is not a physical unit.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/c61ff50a-eb1d-4e6c-83cd-f7e9764cfa9f"><span data-ttu-id="db630-3323">좌표계 형식</span><span class="sxs-lookup"><span data-stu-id="db630-3323">Types of Coordinate Systems</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PixelOffsetMode">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.PixelOffsetMode PixelOffsetMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.PixelOffsetMode PixelOffsetMode" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.PixelOffsetMode" />
      <MemberSignature Language="VB.NET" Value="Public Property PixelOffsetMode As PixelOffsetMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::PixelOffsetMode PixelOffsetMode { System::Drawing::Drawing2D::PixelOffsetMode get(); void set(System::Drawing::Drawing2D::PixelOffsetMode value); };" />
      <MemberSignature Language="F#" Value="member this.PixelOffsetMode : System.Drawing.Drawing2D.PixelOffsetMode with get, set" Usage="System.Drawing.Graphics.PixelOffsetMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.PixelOffsetMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db630-3324">이 <see cref="T:System.Drawing.Graphics" />를 렌더링할 때 픽셀을 오프셋하는 방법을 지정하는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3324">Gets or sets a value specifying how pixels are offset during rendering of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <value><span data-ttu-id="db630-3325">이 속성은 <see cref="T:System.Drawing.Drawing2D.PixelOffsetMode" /> 열거형의 멤버를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3325">This property specifies a member of the <see cref="T:System.Drawing.Drawing2D.PixelOffsetMode" /> enumeration</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-3326">이 속성을 사용 하거나 더 높은 품질, 느린 렌더링 또는 낮은 품질의 렌더링 속도의 내용 지정 <xref:System.Drawing.Graphics> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3326">Use this property to specify either higher quality, slower rendering, or lower quality, faster rendering of the contents of this <xref:System.Drawing.Graphics> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReleaseHdc">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db630-3327">이 <see cref="T:System.Drawing.Graphics" />의 <see cref="M:System.Drawing.Graphics.GetHdc" /> 메서드에 대한 이전 호출에서 얻은 디바이스 컨텍스트 핸들을 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3327">Releases a device context handle obtained by a previous call to the <see cref="M:System.Drawing.Graphics.GetHdc" /> method of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReleaseHdc">
      <MemberSignature Language="C#" Value="public void ReleaseHdc ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseHdc() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.ReleaseHdc" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseHdc ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseHdc();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseHdc : unit -&gt; unit&#xA;override this.ReleaseHdc : unit -&gt; unit" Usage="graphics.ReleaseHdc " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Drawing.IDeviceContext.ReleaseHdc</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="db630-3328">이 <see cref="T:System.Drawing.Graphics" />의 <see cref="M:System.Drawing.Graphics.GetHdc" /> 메서드에 대한 이전 호출에서 얻은 디바이스 컨텍스트 핸들을 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3328">Releases a device context handle obtained by a previous call to the <see cref="M:System.Drawing.Graphics.GetHdc" /> method of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-3329"><xref:System.Drawing.Graphics.GetHdc%2A> 및 <xref:System.Drawing.Graphics.ReleaseHdc%2A> 가져오고 Windows 디바이스에 대 한 핸들을 해제할 수 있도록 하는 두 가지가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3329"><xref:System.Drawing.Graphics.GetHdc%2A> and <xref:System.Drawing.Graphics.ReleaseHdc%2A> are two methods that allow you to get and release the handle for a Windows device.</span></span> <span data-ttu-id="db630-3330">에 대 한 호출을 항상 따라야 <xref:System.Drawing.Graphics.GetHdc%2A> 에 대 한 호출을 사용 하 여 <xref:System.Drawing.Graphics.ReleaseHdc%2A> Windows 핸들을 사용 하 여 완료 될 때입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3330">You should always follow a call to <xref:System.Drawing.Graphics.GetHdc%2A> with a call to <xref:System.Drawing.Graphics.ReleaseHdc%2A> when you are finished with the Windows handle.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="db630-3331">비관리 코드에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3331">for access to unmanaged code.</span></span> <span data-ttu-id="db630-3332">열거형 관련: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3332">Related enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
        <altmember cref="T:System.Drawing.IDeviceContext" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseHdc">
      <MemberSignature Language="C#" Value="public void ReleaseHdc (IntPtr hdc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseHdc(native int hdc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.ReleaseHdc(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseHdc (hdc As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseHdc(IntPtr hdc);" />
      <MemberSignature Language="F#" Value="member this.ReleaseHdc : nativeint -&gt; unit" Usage="graphics.ReleaseHdc hdc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hdc" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hdc"><span data-ttu-id="db630-3333">이 <see cref="T:System.Drawing.Graphics" />의 <see cref="M:System.Drawing.Graphics.GetHdc" /> 메서드에 대한 이전 호출에서 얻은 디바이스 컨텍스트에 대한 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3333">Handle to a device context obtained by a previous call to the <see cref="M:System.Drawing.Graphics.GetHdc" /> method of this <see cref="T:System.Drawing.Graphics" />.</span></span></param>
        <summary><span data-ttu-id="db630-3334">이 <see cref="T:System.Drawing.Graphics" />의 <see cref="M:System.Drawing.Graphics.GetHdc" /> 메서드에 대한 이전 호출에서 얻은 디바이스 컨텍스트 핸들을 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3334">Releases a device context handle obtained by a previous call to the <see cref="M:System.Drawing.Graphics.GetHdc" /> method of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-3335">디바이스 컨텍스트는 기준으로 Windows 구조를 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] 출력에 영향을 주는 그래픽 모드 뿐만 아니라 그래픽 개체 및 해당 관련된 특성의 집합을 정의 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3335">The device context is a Windows structure based on [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] that defines a set of graphical objects and their associated attributes, as well as the graphical modes that affect output.</span></span>  
  
 <span data-ttu-id="db630-3336">에 대 한 호출을 <xref:System.Drawing.Graphics.GetHdc%2A> 및 <xref:System.Drawing.Graphics.ReleaseHdc%2A> 메서드 쌍으로 나타나야 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3336">Calls to the <xref:System.Drawing.Graphics.GetHdc%2A> and <xref:System.Drawing.Graphics.ReleaseHdc%2A> methods must appear in pairs.</span></span> <span data-ttu-id="db630-3337">범위에 있는 동안을 <xref:System.Drawing.Graphics.GetHdc%2A> 하 고 <xref:System.Drawing.Graphics.ReleaseHdc%2A> 메서드 쌍을 일반적으로 수행한 호출에만 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3337">During the scope of a <xref:System.Drawing.Graphics.GetHdc%2A> and <xref:System.Drawing.Graphics.ReleaseHdc%2A> method pair, you usually make calls only to [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] functions.</span></span> <span data-ttu-id="db630-3338">호출에 대 한 범위에 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] 의 메서드를 <xref:System.Drawing.Graphics> 시킨를 `hdc` 매개 변수 실패는 `ObjectBusy` 오류.</span><span class="sxs-lookup"><span data-stu-id="db630-3338">Calls in that scope made to [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] methods of the <xref:System.Drawing.Graphics> that produced the `hdc` parameter fail with an `ObjectBusy` error.</span></span> <span data-ttu-id="db630-3339">또한 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] 상태 변경 내용이 무시 합니다 <xref:System.Drawing.Graphics> 의 `hdc` 후속 작업에서 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3339">Also, [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] ignores any state changes made to the <xref:System.Drawing.Graphics> of the `hdc` parameter in subsequent operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-3340">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3340">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3341">예제는 Windows를 호출 하는 방법을 보여 줍니다 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] 와 동일한 작업을 수행 하는 함수를 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] <xref:System.Drawing.Graphics> 메서드.</span><span class="sxs-lookup"><span data-stu-id="db630-3341">The example illustrates calling a Windows [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] function to perform the same task as a [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] <xref:System.Drawing.Graphics> method.</span></span> <span data-ttu-id="db630-3342">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3342">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3343">상호 운용성 정의 <xref:System.Runtime.InteropServices.DllImportAttribute> Windows DLL 파일 gdi32.dll에 대 한 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3343">Defines the interoperability <xref:System.Runtime.InteropServices.DllImportAttribute> attribute for the Windows DLL file gdi32.dll.</span></span> <span data-ttu-id="db630-3344">이 DLL에 원하는 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] 기능을 정의 합니다 <xref:System.Drawing.Rectangle> 외부와 해당 DLL에는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3344">This DLL contains the desired [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] function, and it defines the <xref:System.Drawing.Rectangle> function in that DLL as external.</span></span>  
  
-   <span data-ttu-id="db630-3345">빨간색 펜을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3345">Creates a red pen.</span></span>  
  
-   <span data-ttu-id="db630-3346">펜으로 사각형을 사용 하 여 화면을 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] <xref:System.Drawing.Graphics.DrawRectangle%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="db630-3346">With the pen, draws a rectangle to the screen using the [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] <xref:System.Drawing.Graphics.DrawRectangle%2A> method.</span></span>  
  
-   <span data-ttu-id="db630-3347">내부 포인터 형식 변수를 정의 `hdc` 형식의 디바이스 컨텍스트에 대 한 핸들을 해당 값을 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3347">Defines an internal pointer type variable `hdc` and sets its value to the handle to the device context of the form.</span></span>  
  
-   <span data-ttu-id="db630-3348">사각형을 사용 하 여 화면을 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] <xref:System.Drawing.Rectangle> 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3348">Draws a rectangle to the screen using the [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] <xref:System.Drawing.Rectangle> function.</span></span>  
  
-   <span data-ttu-id="db630-3349">나타내는 디바이스 컨텍스트를 해제 합니다 `hdc` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3349">Releases the device context represented by the `hdc` parameter.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#145](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#145)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#145](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#145)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#145](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#145)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="db630-3350">비관리 코드에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3350">for access to unmanaged code.</span></span> <span data-ttu-id="db630-3351">열거형 관련: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3351">Related enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ReleaseHdcInternal">
      <MemberSignature Language="C#" Value="public void ReleaseHdcInternal (IntPtr hdc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseHdcInternal(native int hdc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.ReleaseHdcInternal(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseHdcInternal (hdc As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseHdcInternal(IntPtr hdc);" />
      <MemberSignature Language="F#" Value="member this.ReleaseHdcInternal : nativeint -&gt; unit" Usage="graphics.ReleaseHdcInternal hdc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hdc" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hdc"><span data-ttu-id="db630-3352">디바이스 컨텍스트에 대한 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3352">Handle to a device context.</span></span></param>
        <summary><span data-ttu-id="db630-3353">디바이스 컨텍스트에 대한 핸들을 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3353">Releases a handle to a device context.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="db630-3354">비관리 코드에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3354">for access to unmanaged code.</span></span> <span data-ttu-id="db630-3355">열거형 관련: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3355">Related enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="RenderingOrigin">
      <MemberSignature Language="C#" Value="public System.Drawing.Point RenderingOrigin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point RenderingOrigin" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.RenderingOrigin" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderingOrigin As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point RenderingOrigin { System::Drawing::Point get(); void set(System::Drawing::Point value); };" />
      <MemberSignature Language="F#" Value="member this.RenderingOrigin : System.Drawing.Point with get, set" Usage="System.Drawing.Graphics.RenderingOrigin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db630-3356">디더링 및 빗금 브러시에 대한 이 <see cref="T:System.Drawing.Graphics" />의 렌더링 원점을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3356">Gets or sets the rendering origin of this <see cref="T:System.Drawing.Graphics" /> for dithering and for hatch brushes.</span></span></summary>
        <value><span data-ttu-id="db630-3357">픽셀 당 8비트 및 픽셀 당 16비트 디더링의 디더링 원점을 나타내고 빗금 브러시의 원점을 설정하는 데도 사용되는 <see cref="T:System.Drawing.Point" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3357">A <see cref="T:System.Drawing.Point" /> structure that represents the dither origin for 8-bits-per-pixel and 16-bits-per-pixel dithering and is also used to set the origin for hatch brushes.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetClip">
      <MemberSignature Language="C#" Value="public void ResetClip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetClip() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.ResetClip" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetClip ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetClip();" />
      <MemberSignature Language="F#" Value="member this.ResetClip : unit -&gt; unit" Usage="graphics.ResetClip " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="db630-3358">이 <see cref="T:System.Drawing.Graphics" />의 클립 영역을 무한 영역으로 다시 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3358">Resets the clip region of this <see cref="T:System.Drawing.Graphics" /> to an infinite region.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-3359">때의 클립 영역을 <xref:System.Drawing.Graphics> 은 무한대,이 항목 <xref:System.Drawing.Graphics> 그립니다는 클리핑되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3359">When the clipping region of a <xref:System.Drawing.Graphics> is infinite, items that this <xref:System.Drawing.Graphics> draws are not clipped.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-3360">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3360">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3361">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3361">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3362">왼쪽 위 모퉁이 사용 하 여 사각형을 만듭니다 (0, 0)이이 사각형에 클리핑 영역을 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3362">Creates a rectangle with upper-left corner at (0, 0) and sets the clipping region to this rectangle.</span></span>  
  
-   <span data-ttu-id="db630-3363">왼쪽 위 모퉁이 사용 하 여 두 번째 사각형을 만듭니다 (100, 100)이 사각형과 현재 클립 영역 (첫 번째 사각형)의 교차점으로 클리핑 영역을 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3363">Creates a second rectangle with upper-left corner at (100, 100) and sets the clipping region to the intersection of this rectangle and the current clipping region (the first rectangle).</span></span>  
  
-   <span data-ttu-id="db630-3364">파란색 단색 브러시를 사용 하 여 이전 사각형을 모두 포함 하는 큰 사각형을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3364">Fills a large rectangle that includes both previous rectangles with a solid blue brush.</span></span>  
  
-   <span data-ttu-id="db630-3365">클리핑 영역을 무한대로 다시 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3365">Resets the clipping region to infinite.</span></span>  
  
-   <span data-ttu-id="db630-3366">두 클리핑 영역; 주위에 사각형을 그립니다. 클리핑 사각형을 첫 번째 및 두 번째 클리핑 영역에 대 한 빨간색 펜에 대 한 검정 펜을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3366">Draws rectangles around the two clipping regions; it uses a black pen for the first clipping rectangle and a red pen for the second clipping region.</span></span>  
  
 <span data-ttu-id="db630-3367">결과 두 개의 사각형의 교차 부분만 파란색 채워집니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3367">The result is that only the intersection of the two rectangles is filled with blue.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#146](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#146)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#146](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#146)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#146](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#146)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetTransform">
      <MemberSignature Language="C#" Value="public void ResetTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetTransform() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.ResetTransform" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetTransform ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetTransform();" />
      <MemberSignature Language="F#" Value="member this.ResetTransform : unit -&gt; unit" Usage="graphics.ResetTransform " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="db630-3368">이 <see cref="T:System.Drawing.Graphics" />의 월드 변형 매트릭스를 항등 매트릭스로 다시 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3368">Resets the world transformation matrix of this <see cref="T:System.Drawing.Graphics" /> to the identity matrix.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-3369">항등 매트릭스에 없는 크기 조정, 회전 또는 변환 변환을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3369">The identity matrix represents a transformation with no scaling, rotation, or translation.</span></span> <span data-ttu-id="db630-3370">이 월드 변형을 재설정 <xref:System.Drawing.Graphics> 의미를 항등 매트릭스로 해당 월드 변형을 변환 된 항목의 기 하 도형 변경 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3370">Resetting the world transformation of this <xref:System.Drawing.Graphics> to the identity matrix means that its world transformation does not change the geometry of transformed items.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-3371">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3371">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3372">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3372">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3373">Windows 폼의 세계 변환을 벡터 (100, 0)로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3373">Translates the world transform of the Windows Form by a vector (100, 0).</span></span>  
  
-   <span data-ttu-id="db630-3374">폼의 그래픽 상태를 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3374">Saves the graphics state of the form.</span></span>  
  
-   <span data-ttu-id="db630-3375">폼의 세계 변환을 항등으로 다시 설정 하 고 빨간색 단색 브러시를 사용 하 여 사각형을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3375">Resets the world transform of the form to an identity and fills a rectangle with a solid red brush.</span></span>  
  
-   <span data-ttu-id="db630-3376">변환된 된 그래픽 상태를 복원 하 고 사각형 파랑 브러시를 단색으로 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3376">Restores the translated graphics state and fills a rectangle with a solid blue brush.</span></span>  
  
 <span data-ttu-id="db630-3377">결과 변환 되지 않음된 빨강으로 채워진 사각형 및 번역 된 파란색으로 채워진 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3377">The result is an untranslated red-filled rectangle and a translated blue-filled rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#147](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#147)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#147](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#147)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#147](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#147)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Restore">
      <MemberSignature Language="C#" Value="public void Restore (System.Drawing.Drawing2D.GraphicsState gstate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Restore(class System.Drawing.Drawing2D.GraphicsState gstate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Restore (gstate As GraphicsState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Restore(System::Drawing::Drawing2D::GraphicsState ^ gstate);" />
      <MemberSignature Language="F#" Value="member this.Restore : System.Drawing.Drawing2D.GraphicsState -&gt; unit" Usage="graphics.Restore gstate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gstate" Type="System.Drawing.Drawing2D.GraphicsState" />
      </Parameters>
      <Docs>
        <param name="gstate"><span data-ttu-id="db630-3378">이 <see cref="T:System.Drawing.Drawing2D.GraphicsState" />가 복원될 상태를 나타내는 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3378"><see cref="T:System.Drawing.Drawing2D.GraphicsState" /> that represents the state to which to restore this <see cref="T:System.Drawing.Graphics" />.</span></span></param>
        <summary><span data-ttu-id="db630-3379">이 <see cref="T:System.Drawing.Graphics" />의 상태를 <see cref="T:System.Drawing.Drawing2D.GraphicsState" />가 나타내는 상태로 복원합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3379">Restores the state of this <see cref="T:System.Drawing.Graphics" /> to the state represented by a <see cref="T:System.Drawing.Drawing2D.GraphicsState" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-3380">호출 하는 경우는 <xref:System.Drawing.Graphics.Save%2A> 메서드를 <xref:System.Drawing.Graphics>, 상태를 포함 하는 정보 블록이 <xref:System.Drawing.Graphics> 스택에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3380">When you call the <xref:System.Drawing.Graphics.Save%2A> method of a <xref:System.Drawing.Graphics>, an information block that holds the state of the <xref:System.Drawing.Graphics> is put on a stack.</span></span> <span data-ttu-id="db630-3381">합니다 <xref:System.Drawing.Graphics.Save%2A> 메서드가 반환 되는 <xref:System.Drawing.Drawing2D.GraphicsState> 정보 블록을 식별 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3381">The <xref:System.Drawing.Graphics.Save%2A> method returns a <xref:System.Drawing.Drawing2D.GraphicsState> that identifies that information block.</span></span> <span data-ttu-id="db630-3382">전달 하는 경우를 식별 <xref:System.Drawing.Drawing2D.GraphicsState> 에 <xref:System.Drawing.Graphics.Restore%2A> 메서드 정보 블록 스택에서 제거 되 고 복원 하는 데 사용 되는 <xref:System.Drawing.Graphics> 당시 시점의 상태로 <xref:System.Drawing.Graphics.Save%2A> 메서드 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3382">When you pass the identifying <xref:System.Drawing.Drawing2D.GraphicsState> to the <xref:System.Drawing.Graphics.Restore%2A> method, the information block is removed from the stack and is used to restore the <xref:System.Drawing.Graphics> to the state it was in at the time of the <xref:System.Drawing.Graphics.Save%2A> method call.</span></span> <span data-ttu-id="db630-3383"><xref:System.Drawing.Drawing2D.GraphicsState> 에 지정된 된 호출에서 반환 되는 <xref:System.Drawing.Graphics.Save%2A> 메서드를 한 번만 전달할 수 있습니다는 `Restore` 메서드.</span><span class="sxs-lookup"><span data-stu-id="db630-3383">Note that the <xref:System.Drawing.Drawing2D.GraphicsState> returned by a given call to the <xref:System.Drawing.Graphics.Save%2A> method can be passed only once to the `Restore` method.</span></span>  
  
 <span data-ttu-id="db630-3384">에 대 한 호출을 <xref:System.Drawing.Graphics.Save%2A> 메서드를 중첩 될 수 있습니다; 그리고 즉, 호출할 수 있습니다는 <xref:System.Drawing.Graphics.Save%2A> 메서드를 호출 하기 전에 여러 번을 <xref:System.Drawing.Graphics.Restore%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="db630-3384">Calls to the <xref:System.Drawing.Graphics.Save%2A> method can be nested; that is, you can call the <xref:System.Drawing.Graphics.Save%2A> method several times before you call the <xref:System.Drawing.Graphics.Restore%2A> method.</span></span> <span data-ttu-id="db630-3385">호출할 때마다 합니다 <xref:System.Drawing.Graphics.Save%2A> 메서드 정보 블록을 스택에 배치 되 고 수신 하는 <xref:System.Drawing.Drawing2D.GraphicsState> 정보 블록에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3385">Each time you call the <xref:System.Drawing.Graphics.Save%2A> method, an information block is put on the stack, and you receive a <xref:System.Drawing.Drawing2D.GraphicsState> for the information block.</span></span> <span data-ttu-id="db630-3386">해당 개체를 하나 전달 하는 경우는 <xref:System.Drawing.Graphics.Restore%2A> 메서드를를 <xref:System.Drawing.Graphics> 당시 시점의 상태로 반환 됩니다 합니다 <xref:System.Drawing.Graphics.Save%2A> 는 특정 반환 하는 메서드 호출 <xref:System.Drawing.Drawing2D.GraphicsState>.</span><span class="sxs-lookup"><span data-stu-id="db630-3386">When you pass one of those objects to the <xref:System.Drawing.Graphics.Restore%2A> method, the <xref:System.Drawing.Graphics> is returned to the state it was in at the time of the <xref:System.Drawing.Graphics.Save%2A> method call that returned that particular <xref:System.Drawing.Drawing2D.GraphicsState>.</span></span> <span data-ttu-id="db630-3387">정보 블록에서 스택에 배치 <xref:System.Drawing.Graphics.Save%2A> 메서드 호출 스택에서 제거 되 고 그 후 해당 스택에 배치 하는 모든 정보 블록 <xref:System.Drawing.Graphics.Save%2A> 메서드 호출도 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3387">The information block placed on the stack by that <xref:System.Drawing.Graphics.Save%2A> method call is removed from the stack, and all information blocks placed on that stack after that <xref:System.Drawing.Graphics.Save%2A> method call are also removed.</span></span>  
  
 <span data-ttu-id="db630-3388">에 대 한 호출을 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드 호출 스택의 동일 위치 정보 블록을 <xref:System.Drawing.Graphics.Save%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="db630-3388">Calls to the <xref:System.Drawing.Graphics.BeginContainer%2A> method place information blocks on the same stack as calls to the <xref:System.Drawing.Graphics.Save%2A> method.</span></span> <span data-ttu-id="db630-3389">처럼를 <xref:System.Drawing.Graphics.Restore%2A> 호출을 이룹니다를 <xref:System.Drawing.Graphics.Save%2A> 호출을 <xref:System.Drawing.Graphics.EndContainer%2A> 메서드 호출을 이룹니다를 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3389">Just as a <xref:System.Drawing.Graphics.Restore%2A> call is paired with a <xref:System.Drawing.Graphics.Save%2A> call, a <xref:System.Drawing.Graphics.EndContainer%2A> method call is paired with a <xref:System.Drawing.Graphics.BeginContainer%2A> method call.</span></span>  
  
 <span data-ttu-id="db630-3390">호출 하는 경우는 <xref:System.Drawing.Graphics.Restore%2A> 메서드를 스택에 배치 된 모든 정보 블록 (여는 <xref:System.Drawing.Graphics.Save%2A> 메서드 또는 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드) 해당 호출 후는 <xref:System.Drawing.Graphics.Save%2A> 메서드 스택에서 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3390">When you call the <xref:System.Drawing.Graphics.Restore%2A> method, all information blocks placed on the stack (by the <xref:System.Drawing.Graphics.Save%2A> method or by the <xref:System.Drawing.Graphics.BeginContainer%2A> method) after the corresponding call to the <xref:System.Drawing.Graphics.Save%2A> method are removed from the stack.</span></span> <span data-ttu-id="db630-3391">마찬가지로 호출 하는 경우는 <xref:System.Drawing.Graphics.EndContainer%2A> 메서드를 스택에 배치 된 모든 정보 블록 (여는 <xref:System.Drawing.Graphics.Save%2A> 메서드 또는 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드) 해당 호출 후는 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드 스택에서 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3391">Likewise, when you call the <xref:System.Drawing.Graphics.EndContainer%2A> method, all information blocks placed on the stack (by the <xref:System.Drawing.Graphics.Save%2A> method or by the <xref:System.Drawing.Graphics.BeginContainer%2A> method) after the corresponding call to the <xref:System.Drawing.Graphics.BeginContainer%2A> method are removed from the stack.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-3392">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3392">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3393">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3393">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3394">Windows 폼의 세계 변환을 벡터 (100, 0)로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3394">Translates the world transform of the Windows Form by a vector (100, 0).</span></span>  
  
-   <span data-ttu-id="db630-3395">폼의 그래픽 상태를 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3395">Saves the graphics state of the form.</span></span>  
  
-   <span data-ttu-id="db630-3396">폼의 세계 변환을 항등으로 다시 설정 하 고 빨간색 단색 브러시를 사용 하 여 사각형을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3396">Resets the world transform of the form to an identity and fills a rectangle with a solid red brush.</span></span>  
  
-   <span data-ttu-id="db630-3397">변환된 된 그래픽 상태를 복원 하 고 두 번째 사각형 파랑 브러시를 단색으로 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3397">Restores the translated graphics state and fills a second rectangle with a solid blue brush.</span></span>  
  
 <span data-ttu-id="db630-3398">결과 변환 되지 않음된 빨강으로 채워진 사각형 및 번역 된 파란색으로 채워진 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3398">The result is an untranslated red-filled rectangle and a translated blue-filled rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#148](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#148)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#148](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#148)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#148](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#148)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RotateTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db630-3399">이 <see cref="T:System.Drawing.Graphics" />의 변형 매트릭스에 지정된 회전을 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3399">Applies the specified rotation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RotateTransform">
      <MemberSignature Language="C#" Value="public void RotateTransform (float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateTransform(float32 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.RotateTransform(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateTransform (angle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateTransform(float angle);" />
      <MemberSignature Language="F#" Value="member this.RotateTransform : single -&gt; unit" Usage="graphics.RotateTransform angle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="db630-3400">회전 각도(단위: 도)입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3400">Angle of rotation in degrees.</span></span></param>
        <summary><span data-ttu-id="db630-3401">이 <see cref="T:System.Drawing.Graphics" />의 변형 매트릭스에 지정된 회전을 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3401">Applies the specified rotation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-3402">회전 작업 구성 요소에서 파생 된 행렬의 변환 매트릭스를 `angle` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3402">The rotation operation consists of multiplying the transformation matrix by a matrix whose elements are derived from the `angle` parameter.</span></span> <span data-ttu-id="db630-3403">이 메서드는 변형 매트릭스에 추가 하 여 회전을 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3403">This method applies the rotation by prepending it to the transformation matrix.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-3404">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3404">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3405">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3405">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3406">Windows Form의 월드 변형 매트릭스 벡터 (0, 100)로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3406">Translates the world transformation matrix of the Windows Form by the vector (100, 0).</span></span>  
  
-   <span data-ttu-id="db630-3407">회전 매트릭스를 월드 변형 매트릭스 앞에 추가 30도 각도로 월드 변형을 회전 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3407">Rotates the world transformation by an angle of 30 degrees, prepending the rotation matrix to the world transformation matrix.</span></span>  
  
-   <span data-ttu-id="db630-3408">파란색 펜으로 회전 되 고 번역 된 타원을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3408">Draws a rotated, translated ellipse with a blue pen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#149](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#149)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#149](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#149)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#149](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#149)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateTransform">
      <MemberSignature Language="C#" Value="public void RotateTransform (float angle, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateTransform(float32 angle, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateTransform (angle As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateTransform(float angle, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.RotateTransform : single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="graphics.RotateTransform (angle, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="db630-3409">회전 각도(단위: 도)입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3409">Angle of rotation in degrees.</span></span></param>
        <param name="order"><span data-ttu-id="db630-3410">회전이 매트릭스 변형 뒤에 추가되는지 앞에 추가되는지를 지정하는 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3410">Member of the <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies whether the rotation is appended or prepended to the matrix transformation.</span></span></param>
        <summary><span data-ttu-id="db630-3411">이 <see cref="T:System.Drawing.Graphics" />의 변형 매트릭스에 지정된 회전을 지정된 순서로 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3411">Applies the specified rotation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" /> in the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-3412">회전 작업 구성 요소에서 파생 된 행렬의 변환 매트릭스를 `angle` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3412">The rotation operation consists of multiplying the transformation matrix by a matrix whose elements are derived from the `angle` parameter.</span></span> <span data-ttu-id="db630-3413">이 메서드 앞에 추가 하거나의 변형 매트릭스를 추가 합니다 <xref:System.Drawing.Graphics> 에 따라 회전 매트릭스를 `order` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="db630-3413">This method prepends or appends the transformation matrix of the <xref:System.Drawing.Graphics> by the rotation matrix according to the `order` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-3414">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3414">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3415">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3415">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3416">Windows Form의 월드 변형 매트릭스 벡터 (0, 100)로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3416">Translates the world transformation matrix of the Windows Form by the vector (100, 0).</span></span>  
  
-   <span data-ttu-id="db630-3417">전 세계 변환을 사용 하 여 월드 변형 매트릭스를 회전 행렬을 추가 30도 각도로 회전 <xref:System.Drawing.Drawing2D.MatrixOrder.Append>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3417">Rotates the world transform by an angle of 30 degrees, appending the rotation matrix to the world transformation matrix with <xref:System.Drawing.Drawing2D.MatrixOrder.Append>.</span></span>  
  
-   <span data-ttu-id="db630-3418">파란색 펜을 사용 하 여 변환, 회전 타원을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3418">Draws a translated, rotated ellipse with a blue pen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#150](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#150)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#150](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#150)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#150](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#150)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.GraphicsState Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Drawing2D.GraphicsState Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.Save" />
      <MemberSignature Language="VB.NET" Value="Public Function Save () As GraphicsState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Drawing2D::GraphicsState ^ Save();" />
      <MemberSignature Language="F#" Value="member this.Save : unit -&gt; System.Drawing.Drawing2D.GraphicsState" Usage="graphics.Save " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.GraphicsState</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="db630-3419">이 <see cref="T:System.Drawing.Graphics" />의 현재 상태를 저장하고 <see cref="T:System.Drawing.Drawing2D.GraphicsState" />로 저장된 상태를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3419">Saves the current state of this <see cref="T:System.Drawing.Graphics" /> and identifies the saved state with a <see cref="T:System.Drawing.Drawing2D.GraphicsState" />.</span></span></summary>
        <returns><span data-ttu-id="db630-3420">이 메서드는 이 <see cref="T:System.Drawing.Graphics" />의 저장된 상태를 나타내는 <see cref="T:System.Drawing.Drawing2D.GraphicsState" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3420">This method returns a <see cref="T:System.Drawing.Drawing2D.GraphicsState" /> that represents the saved state of this <see cref="T:System.Drawing.Graphics" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-3421">호출 하는 경우는 <xref:System.Drawing.Graphics.Save%2A> 메서드를 <xref:System.Drawing.Graphics>, 상태를 포함 하는 정보 블록이 <xref:System.Drawing.Graphics> 스택에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3421">When you call the <xref:System.Drawing.Graphics.Save%2A> method of a <xref:System.Drawing.Graphics>, an information block that holds the state of the <xref:System.Drawing.Graphics> is put on a stack.</span></span> <span data-ttu-id="db630-3422">합니다 <xref:System.Drawing.Graphics.Save%2A> 메서드가 반환 되는 <xref:System.Drawing.Drawing2D.GraphicsState> 정보 블록을 식별 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3422">The <xref:System.Drawing.Graphics.Save%2A> method returns a <xref:System.Drawing.Drawing2D.GraphicsState> that identifies that information block.</span></span> <span data-ttu-id="db630-3423">전달 하는 경우를 식별 <xref:System.Drawing.Drawing2D.GraphicsState> 에 <xref:System.Drawing.Graphics.Restore%2A> 메서드 정보 블록 스택에서 제거 되 고 복원 하는 데 사용 되는 <xref:System.Drawing.Graphics> 당시 시점의 상태로 <xref:System.Drawing.Graphics.Save%2A> 메서드 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3423">When you pass the identifying <xref:System.Drawing.Drawing2D.GraphicsState> to the <xref:System.Drawing.Graphics.Restore%2A> method, the information block is removed from the stack and is used to restore the <xref:System.Drawing.Graphics> to the state it was in at the time of the <xref:System.Drawing.Graphics.Save%2A> method call.</span></span> <span data-ttu-id="db630-3424"><xref:System.Drawing.Drawing2D.GraphicsState> 에 지정된 된 호출에서 반환 되는 <xref:System.Drawing.Graphics.Save%2A> 메서드를 한 번만 전달할 수 있습니다는 <xref:System.Drawing.Graphics.Restore%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="db630-3424">Note that the <xref:System.Drawing.Drawing2D.GraphicsState> returned by a given call to the <xref:System.Drawing.Graphics.Save%2A> method can be passed only once to the <xref:System.Drawing.Graphics.Restore%2A> method.</span></span>  
  
 <span data-ttu-id="db630-3425">에 대 한 호출을 <xref:System.Drawing.Graphics.Save%2A> 메서드를 중첩 될 수 있습니다; 그리고 즉, 호출할 수 있습니다는 <xref:System.Drawing.Graphics.Save%2A> 메서드를 호출 하기 전에 여러 번을 <xref:System.Drawing.Graphics.Restore%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="db630-3425">Calls to the <xref:System.Drawing.Graphics.Save%2A> method can be nested; that is, you can call the <xref:System.Drawing.Graphics.Save%2A> method several times before you call the <xref:System.Drawing.Graphics.Restore%2A> method.</span></span> <span data-ttu-id="db630-3426">호출할 때마다 합니다 <xref:System.Drawing.Graphics.Save%2A> 메서드 정보 블록을 스택에 배치 되 고 수신 하는 <xref:System.Drawing.Drawing2D.GraphicsState> 정보 블록에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3426">Each time you call the <xref:System.Drawing.Graphics.Save%2A> method, an information block is put on the stack, and you receive a <xref:System.Drawing.Drawing2D.GraphicsState> for the information block.</span></span> <span data-ttu-id="db630-3427">해당 개체를 하나 전달 하는 경우는 <xref:System.Drawing.Graphics.Restore%2A> 메서드를를 <xref:System.Drawing.Graphics> 당시 시점의 상태로 반환 됩니다 합니다 <xref:System.Drawing.Graphics.Save%2A> 는 특정 반환 하는 메서드 호출 <xref:System.Drawing.Drawing2D.GraphicsState>.</span><span class="sxs-lookup"><span data-stu-id="db630-3427">When you pass one of those objects to the <xref:System.Drawing.Graphics.Restore%2A> method, the <xref:System.Drawing.Graphics> is returned to the state it was in at the time of the <xref:System.Drawing.Graphics.Save%2A> method call that returned that particular <xref:System.Drawing.Drawing2D.GraphicsState>.</span></span> <span data-ttu-id="db630-3428">정보 블록에서 스택에 배치 <xref:System.Drawing.Graphics.Save%2A> 메서드 호출 스택에서 제거 되 고 그 후 해당 스택에 배치 하는 모든 정보 블록 <xref:System.Drawing.Graphics.Save%2A> 메서드 호출도 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3428">The information block placed on the stack by that <xref:System.Drawing.Graphics.Save%2A> method call is removed from the stack, and all information blocks placed on that stack after that <xref:System.Drawing.Graphics.Save%2A> method call are also removed.</span></span>  
  
 <span data-ttu-id="db630-3429">에 대 한 호출을 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드 호출 스택의 동일 위치 정보 블록을 <xref:System.Drawing.Graphics.Save%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="db630-3429">Calls to the <xref:System.Drawing.Graphics.BeginContainer%2A> method place information blocks on the same stack as calls to the <xref:System.Drawing.Graphics.Save%2A> method.</span></span> <span data-ttu-id="db630-3430">처럼를 <xref:System.Drawing.Graphics.Restore%2A> 호출을 이룹니다를 <xref:System.Drawing.Graphics.Save%2A> 호출을 <xref:System.Drawing.Graphics.EndContainer%2A> 메서드 호출을 이룹니다를 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3430">Just as a <xref:System.Drawing.Graphics.Restore%2A> call is paired with a <xref:System.Drawing.Graphics.Save%2A> call, a <xref:System.Drawing.Graphics.EndContainer%2A> method call is paired with a <xref:System.Drawing.Graphics.BeginContainer%2A> method call.</span></span>  
  
 <span data-ttu-id="db630-3431">호출 하는 경우는 <xref:System.Drawing.Graphics.Restore%2A> 메서드를 스택에 배치 된 모든 정보 블록 (여는 <xref:System.Drawing.Graphics.Save%2A> 메서드 또는 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드) 해당 호출 후는 <xref:System.Drawing.Graphics.Save%2A> 메서드 스택에서 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3431">When you call the <xref:System.Drawing.Graphics.Restore%2A> method, all information blocks placed on the stack (by the <xref:System.Drawing.Graphics.Save%2A> method or by the <xref:System.Drawing.Graphics.BeginContainer%2A> method) after the corresponding call to the <xref:System.Drawing.Graphics.Save%2A> method are removed from the stack.</span></span> <span data-ttu-id="db630-3432">마찬가지로 호출 하는 경우는 <xref:System.Drawing.Graphics.EndContainer%2A> 메서드를 스택에 배치 된 모든 정보 블록 (여는 <xref:System.Drawing.Graphics.Save%2A> 메서드 또는 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드) 해당 호출 후는 <xref:System.Drawing.Graphics.BeginContainer%2A> 메서드 스택에서 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3432">Likewise, When you call the <xref:System.Drawing.Graphics.EndContainer%2A> method, all information blocks placed on the stack (by the <xref:System.Drawing.Graphics.Save%2A> method or by the <xref:System.Drawing.Graphics.BeginContainer%2A> method) after the corresponding call to the <xref:System.Drawing.Graphics.BeginContainer%2A> method are removed from the stack.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-3433">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3433">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3434">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3434">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3435">Windows 폼의 세계 변환을 벡터 (100, 0)로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3435">Translates the world transform of the Windows Form by a vector (100, 0).</span></span>  
  
-   <span data-ttu-id="db630-3436">폼의 그래픽 상태를 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3436">Saves the graphics state of the form.</span></span>  
  
-   <span data-ttu-id="db630-3437">Id (항등 매트릭스를 2x2 + 0 벡터 변환)를 폼의 세계 변환을 다시 설정 하 고 빨간색 단색 브러시를 사용 하 여 사각형을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3437">Resets the world transform of the form to an identity (2x2 identity matrix plus a zero-vector translation) and fills a rectangle with a solid red brush.</span></span>  
  
-   <span data-ttu-id="db630-3438">변환된 된 그래픽 상태를 복원 하 고 사각형 파랑 브러시를 단색으로 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3438">Restores the translated graphics state and fills a rectangle with a solid blue brush.</span></span>  
  
 <span data-ttu-id="db630-3439">결과 왼쪽에는 번역 되지 않은 빨강으로 채워진 사각형 및 폼의 오른쪽에 번역 된 파란색으로 채워진 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3439">The result is an untranslated red-filled rectangle on the left and a translated blue-filled rectangle on the right of the form.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#151](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#151)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#151](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#151)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#151](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#151)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ScaleTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db630-3440">변형 매트릭스를 개체의 변형 매트릭스 앞에 추가하여 지정된 크기 조정 작업을 이 <see cref="T:System.Drawing.Graphics" />의 변형 매트릭스에 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3440">Applies the specified scaling operation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" /> by prepending it to the object's transformation matrix.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ScaleTransform">
      <MemberSignature Language="C#" Value="public void ScaleTransform (float sx, float sy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleTransform(float32 sx, float32 sy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleTransform (sx As Single, sy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleTransform(float sx, float sy);" />
      <MemberSignature Language="F#" Value="member this.ScaleTransform : single * single -&gt; unit" Usage="graphics.ScaleTransform (sx, sy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sx" Type="System.Single" />
        <Parameter Name="sy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="sx"><span data-ttu-id="db630-3441">x 방향으로 인수의 크기를 조정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3441">Scale factor in the x direction.</span></span></param>
        <param name="sy"><span data-ttu-id="db630-3442">y 방향으로 인수의 크기를 조정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3442">Scale factor in the y direction.</span></span></param>
        <summary><span data-ttu-id="db630-3443">변형 매트릭스를 개체의 변형 매트릭스 앞에 추가하여 지정된 크기 조정 작업을 이 <see cref="T:System.Drawing.Graphics" />의 변형 매트릭스에 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3443">Applies the specified scaling operation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" /> by prepending it to the object's transformation matrix.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-3444">크기 조정 작업 구성 요소가 들어 있는 대각선 행렬의 변환 매트릭스의 (`sx`, `sy`, 1).</span><span class="sxs-lookup"><span data-stu-id="db630-3444">The scaling operation consists of multiplying the transformation matrix by a diagonal matrix whose elements are (`sx`, `sy`, 1).</span></span> <span data-ttu-id="db630-3445">이 메서드 앞의 변형 매트릭스를 <xref:System.Drawing.Graphics> 크기 조정 매트릭스입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3445">This method prepends the transformation matrix of the <xref:System.Drawing.Graphics> by the scaling matrix.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-3446">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3446">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3447">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3447">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3448">Windows Form의 월드 변형 매트릭스를 30도 회전 시킵니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3448">Rotates the world transformation matrix of the Windows Form by 30 degrees.</span></span>  
  
-   <span data-ttu-id="db630-3449">크기 조정 변환을 추가 하 여 3 x 방향의 비율과 y 방향의 1의 비율을 여는 행렬을 조정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3449">Scales that matrix by a factor of 3 in the x direction and a factor of 1 in the y direction by prepending the scaling transformation.</span></span>  
  
-   <span data-ttu-id="db630-3450">파란색 펜을 사용 하 여 크기가 조정 되 고 회전 된 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3450">Draws a scaled, rotated rectangle with a blue pen.</span></span>  
  
 <span data-ttu-id="db630-3451">결과 여전히 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3451">The result is still a rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#152](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#152)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#152](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#152)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#152](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#152)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleTransform">
      <MemberSignature Language="C#" Value="public void ScaleTransform (float sx, float sy, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleTransform(float32 sx, float32 sy, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleTransform (sx As Single, sy As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleTransform(float sx, float sy, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.ScaleTransform : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="graphics.ScaleTransform (sx, sy, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sx" Type="System.Single" />
        <Parameter Name="sy" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="sx"><span data-ttu-id="db630-3452">x 방향으로 인수의 크기를 조정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3452">Scale factor in the x direction.</span></span></param>
        <param name="sy"><span data-ttu-id="db630-3453">y 방향으로 인수의 크기를 조정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3453">Scale factor in the y direction.</span></span></param>
        <param name="order"><span data-ttu-id="db630-3454">크기 조정 작업이 변형 매트릭스 앞에 추가되는지 뒤에 추가되는지를 지정하는 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3454">Member of the <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies whether the scaling operation is prepended or appended to the transformation matrix.</span></span></param>
        <summary><span data-ttu-id="db630-3455">지정된 크기 조정 작업을 지정된 순서로 이 <see cref="T:System.Drawing.Graphics" />의 변형 매트릭스에 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3455">Applies the specified scaling operation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" /> in the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-3456">크기 조정 작업 구성 요소가 들어 있는 대각선 행렬의 변환 매트릭스의 (`sx`, `sy`, 1).</span><span class="sxs-lookup"><span data-stu-id="db630-3456">The scaling operation consists of multiplying the transformation matrix by a diagonal matrix whose elements are (`sx`, `sy`, 1).</span></span> <span data-ttu-id="db630-3457">이 메서드 앞에 추가 하거나의 변형 매트릭스를 추가 합니다 <xref:System.Drawing.Graphics> 에 따라 크기 조정 매트릭스를 `order` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="db630-3457">This method prepends or appends the transformation matrix of the <xref:System.Drawing.Graphics> by the scaling matrix according to the `order` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-3458">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3458">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3459">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3459">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3460">Windows Form의 월드 변형 매트릭스를 30도 회전 시킵니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3460">Rotates the world transformation matrix of the Windows Form by 30 degrees.</span></span>  
  
-   <span data-ttu-id="db630-3461">사용 하 여 크기 조정 변환을 추가 하 여 해당 행렬 x 방향으로 3 배 인수 1 y 방향에서으로 확장을 <xref:System.Drawing.Drawing2D.MatrixOrder.Append> 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3461">Scales that matrix by a factor of 3 in the x direction and a factor of 1 in the y direction by appending the scaling transformation with the <xref:System.Drawing.Drawing2D.MatrixOrder.Append> member.</span></span>  
  
-   <span data-ttu-id="db630-3462">파란색 펜을 사용 하 여 회전, 크기 조정 된 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3462">Draws a rotated, scaled rectangle with a blue pen.</span></span>  
  
 <span data-ttu-id="db630-3463">결과 평행 사변형입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3463">The result is a parallelogram.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#153](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#153)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#153](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#153)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#153](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#153)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetClip">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db630-3464">이 <see cref="T:System.Drawing.Graphics" />의 클립 영역을 지정된 <see cref="T:System.Drawing.Graphics" />의 <see langword="Clip" /> 속성으로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3464">Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the <see langword="Clip" /> property of the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetClip">
      <MemberSignature Language="C#" Value="public void SetClip (System.Drawing.Drawing2D.GraphicsPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetClip(class System.Drawing.Drawing2D.GraphicsPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetClip (path As GraphicsPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClip(System::Drawing::Drawing2D::GraphicsPath ^ path);" />
      <MemberSignature Language="F#" Value="member this.SetClip : System.Drawing.Drawing2D.GraphicsPath -&gt; unit" Usage="graphics.SetClip path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="db630-3465">새 클립 영역을 나타내는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3465"><see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> that represents the new clip region.</span></span></param>
        <summary><span data-ttu-id="db630-3466">이 <see cref="T:System.Drawing.Graphics" />의 클립 영역을 지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3466">Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-3467">표시 되는 그래픽 경로 `path` 매개 변수 닫혀 있지 않으며, 추가 세그먼트가에 추가 됩니다 마지막 지점에서 첫 번째 요소 경로를 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3467">If the graphics path represented by the `path` parameter is not closed, an additional segment is added from the last point to the first point to close the path.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-3468">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3468">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3469">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3469">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3470">그래픽 경로 만들고 타원을 경로에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3470">Creates a graphics path and adds an ellipse to the path.</span></span>  
  
-   <span data-ttu-id="db630-3471">타원형 경로로 클립 영역을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3471">Sets the clipping region to the elliptical path.</span></span>  
  
-   <span data-ttu-id="db630-3472">검은색 단색 브러시를 사용 하 여 큰 사각형을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3472">Fills a large rectangle with a solid black brush.</span></span>  
  
 <span data-ttu-id="db630-3473">결과 검은색, 채워진 타원을 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3473">The result is a filled, black ellipse.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#154](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#154)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#154](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#154)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#154](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#154)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClip">
      <MemberSignature Language="C#" Value="public void SetClip (System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetClip(class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetClip (g As Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClip(System::Drawing::Graphics ^ g);" />
      <MemberSignature Language="F#" Value="member this.SetClip : System.Drawing.Graphics -&gt; unit" Usage="graphics.SetClip g" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="g"><span data-ttu-id="db630-3474">새 클립 영역을 가져오는 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3474"><see cref="T:System.Drawing.Graphics" /> from which to take the new clip region.</span></span></param>
        <summary><span data-ttu-id="db630-3475">이 <see cref="T:System.Drawing.Graphics" />의 클립 영역을 지정된 <see cref="T:System.Drawing.Graphics" />의 <see langword="Clip" /> 속성으로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3475">Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the <see langword="Clip" /> property of the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="db630-3476">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수인를 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기 뿐만 `thisForm`, <xref:System.Windows.Forms.Form> 예입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3476">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler, as well as `thisForm`, the <xref:System.Windows.Forms.Form> for the example.</span></span> <span data-ttu-id="db630-3477">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3477">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3478">임시 만듭니다 <xref:System.Drawing.Graphics> 에서 합니다 `thisForm` <xref:System.Windows.Forms.Form> 예제입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3478">Creates a temporary <xref:System.Drawing.Graphics> from the `thisForm`<xref:System.Windows.Forms.Form> of the example.</span></span>  
  
-   <span data-ttu-id="db630-3479">임시의 클립 영역을 설정 <xref:System.Drawing.Graphics> 작은 사각형으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3479">Sets the clipping region of the temporary <xref:System.Drawing.Graphics> to a small square.</span></span>  
  
-   <span data-ttu-id="db630-3480">폼의 그래픽 개체의 클립 영역을 임시 업데이트 <xref:System.Drawing.Graphics>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3480">Updates the clipping region of the form's graphic object to that of the temporary <xref:System.Drawing.Graphics>.</span></span>  
  
-   <span data-ttu-id="db630-3481">검은색 단색 브러시를 사용 하 여 큰 사각형을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3481">Fills a large rectangle with a solid black brush.</span></span>  
  
 <span data-ttu-id="db630-3482">결과는 소규모, 채워진, 검은색 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3482">The result is a small, filled, black square.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#156](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#156)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#156](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#156)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#156](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#156)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClip">
      <MemberSignature Language="C#" Value="public void SetClip (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetClip(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.SetClip(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetClip (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClip(System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.SetClip : System.Drawing.Rectangle -&gt; unit" Usage="graphics.SetClip rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="db630-3483">새 클립 영역을 나타내는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3483"><see cref="T:System.Drawing.Rectangle" /> structure that represents the new clip region.</span></span></param>
        <summary><span data-ttu-id="db630-3484">이 <see cref="T:System.Drawing.Graphics" />의 클립 영역을 <see cref="T:System.Drawing.Rectangle" /> 구조체에 의해 지정된 사각형으로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3484">Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the rectangle specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="db630-3485">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3485">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3486">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3486">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3487">클리핑 영역에 대 한 작은 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3487">Creates a small rectangle for the clipping region.</span></span>  
  
-   <span data-ttu-id="db630-3488">사각형에 클립 영역을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3488">Sets the clipping region to the rectangle.</span></span>  
  
-   <span data-ttu-id="db630-3489">검은색 단색 브러시를 사용 하 여 큰 사각형을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3489">Fills a large rectangle with a solid black brush.</span></span>  
  
 <span data-ttu-id="db630-3490">결과는 소규모, 채워진, 검은색 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3490">The result is a small, filled, black rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#158](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#158)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#158](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#158)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#158](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#158)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClip">
      <MemberSignature Language="C#" Value="public void SetClip (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetClip(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.SetClip(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetClip (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClip(System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.SetClip : System.Drawing.RectangleF -&gt; unit" Usage="graphics.SetClip rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="db630-3491">새 클립 영역을 나타내는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3491"><see cref="T:System.Drawing.RectangleF" /> structure that represents the new clip region.</span></span></param>
        <summary><span data-ttu-id="db630-3492">이 <see cref="T:System.Drawing.Graphics" />의 클립 영역을 <see cref="T:System.Drawing.RectangleF" /> 구조체에 의해 지정된 사각형으로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3492">Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the rectangle specified by a <see cref="T:System.Drawing.RectangleF" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="db630-3493">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3493">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3494">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3494">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3495">클리핑 영역에 대 한 작은 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3495">Creates a small rectangle for the clipping region.</span></span>  
  
-   <span data-ttu-id="db630-3496">사각형에 클립 영역을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3496">Sets the clipping region to the rectangle.</span></span>  
  
-   <span data-ttu-id="db630-3497">검은색 단색 브러시를 사용 하 여 큰 사각형을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3497">Fills a large rectangle with a solid black brush.</span></span>  
  
 <span data-ttu-id="db630-3498">결과는 소규모, 채워진, 검은색 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3498">The result is a small, filled, black rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#160](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#160)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#160](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#160)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#160](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#160)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClip">
      <MemberSignature Language="C#" Value="public void SetClip (System.Drawing.Drawing2D.GraphicsPath path, System.Drawing.Drawing2D.CombineMode combineMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetClip(class System.Drawing.Drawing2D.GraphicsPath path, valuetype System.Drawing.Drawing2D.CombineMode combineMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClip(System::Drawing::Drawing2D::GraphicsPath ^ path, System::Drawing::Drawing2D::CombineMode combineMode);" />
      <MemberSignature Language="F#" Value="member this.SetClip : System.Drawing.Drawing2D.GraphicsPath * System.Drawing.Drawing2D.CombineMode -&gt; unit" Usage="graphics.SetClip (path, combineMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="combineMode" Type="System.Drawing.Drawing2D.CombineMode" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="db630-3499">결합할 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3499"><see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to combine.</span></span></param>
        <param name="combineMode"><span data-ttu-id="db630-3500">사용할 결합 작업을 지정하는 <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3500">Member of the <see cref="T:System.Drawing.Drawing2D.CombineMode" /> enumeration that specifies the combining operation to use.</span></span></param>
        <summary><span data-ttu-id="db630-3501">현재 클립 영역과 지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />를 결합하는 지정된 작업의 결과로 이 <see cref="T:System.Drawing.Graphics" />의 클립 영역을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3501">Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the result of the specified operation combining the current clip region and the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-3502">표시 되는 그래픽 경로 `path` 매개 변수 닫혀 있지 않으며, 추가 세그먼트가에 추가 됩니다 마지막 지점에서 첫 번째 요소 경로를 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3502">If the graphics path represented by the `path` parameter is not closed, an additional segment is added from the last point to the first point to close the path.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-3503">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3503">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3504">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3504">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3505">그래픽 경로 만들고 타원을 경로에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3505">Creates a graphics path and adds an ellipse to the path.</span></span>  
  
-   <span data-ttu-id="db630-3506">클리핑 영역을 사용 하 여 타원형 경로로 설정 된 <xref:System.Drawing.Drawing2D.CombineMode.Replace> 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3506">Sets the clipping region to the elliptical path with the <xref:System.Drawing.Drawing2D.CombineMode.Replace> member.</span></span>  
  
-   <span data-ttu-id="db630-3507">검은색 단색 브러시를 사용 하 여 큰 사각형을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3507">Fills a large rectangle with a solid black brush.</span></span>  
  
 <span data-ttu-id="db630-3508">결과 검은색, 채워진 타원을 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3508">The result is a filled, black ellipse.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#155](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#155)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#155](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#155)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#155](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#155)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClip">
      <MemberSignature Language="C#" Value="public void SetClip (System.Drawing.Graphics g, System.Drawing.Drawing2D.CombineMode combineMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetClip(class System.Drawing.Graphics g, valuetype System.Drawing.Drawing2D.CombineMode combineMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics,System.Drawing.Drawing2D.CombineMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClip(System::Drawing::Graphics ^ g, System::Drawing::Drawing2D::CombineMode combineMode);" />
      <MemberSignature Language="F#" Value="member this.SetClip : System.Drawing.Graphics * System.Drawing.Drawing2D.CombineMode -&gt; unit" Usage="graphics.SetClip (g, combineMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="combineMode" Type="System.Drawing.Drawing2D.CombineMode" />
      </Parameters>
      <Docs>
        <param name="g"><span data-ttu-id="db630-3509">결합할 클립 영역을 지정하는 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3509"><see cref="T:System.Drawing.Graphics" /> that specifies the clip region to combine.</span></span></param>
        <param name="combineMode"><span data-ttu-id="db630-3510">사용할 결합 작업을 지정하는 <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3510">Member of the <see cref="T:System.Drawing.Drawing2D.CombineMode" /> enumeration that specifies the combining operation to use.</span></span></param>
        <summary><span data-ttu-id="db630-3511">현재 클립 영역과 지정된 <see cref="T:System.Drawing.Graphics" />의 <see cref="P:System.Drawing.Graphics.Clip" /> 속성에 대한 지정된 결합 작업의 결과로 이 <see cref="T:System.Drawing.Graphics" />의 클립 영역을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3511">Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the result of the specified combining operation of the current clip region and the <see cref="P:System.Drawing.Graphics.Clip" /> property of the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="db630-3512">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수인를 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기 뿐만 `thisForm`, <xref:System.Windows.Forms.Form> 예입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3512">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler, as well as `thisForm`, the <xref:System.Windows.Forms.Form> for the example.</span></span> <span data-ttu-id="db630-3513">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3513">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3514">임시 만듭니다 <xref:System.Drawing.Graphics> 에서 합니다 `thisForm` <xref:System.Windows.Forms.Form> 예제입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3514">Creates a temporary <xref:System.Drawing.Graphics> from the `thisForm`<xref:System.Windows.Forms.Form> of the example.</span></span>  
  
-   <span data-ttu-id="db630-3515">임시의 클립 영역을 설정 <xref:System.Drawing.Graphics> 작은 사각형으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3515">Sets the clipping region of the temporary <xref:System.Drawing.Graphics> to a small square.</span></span>  
  
-   <span data-ttu-id="db630-3516">폼의 그래픽 개체의 클립 영역을 새 업데이트 <xref:System.Drawing.Graphics> 사용 하 여는 <xref:System.Drawing.Drawing2D.CombineMode.Replace> 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3516">Updates the clipping region of the form's graphic object to that of the new <xref:System.Drawing.Graphics> with the <xref:System.Drawing.Drawing2D.CombineMode.Replace> member.</span></span>  
  
-   <span data-ttu-id="db630-3517">검은색 단색 브러시를 사용 하 여 큰 사각형을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3517">Fills a large rectangle with a solid black brush.</span></span>  
  
 <span data-ttu-id="db630-3518">결과는 소규모, 채워진, 검은색 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3518">The result is a small, filled, black square.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#157](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#157)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#157](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#157)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#157](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#157)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClip">
      <MemberSignature Language="C#" Value="public void SetClip (System.Drawing.Rectangle rect, System.Drawing.Drawing2D.CombineMode combineMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetClip(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Drawing2D.CombineMode combineMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.SetClip(System.Drawing.Rectangle,System.Drawing.Drawing2D.CombineMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClip(System::Drawing::Rectangle rect, System::Drawing::Drawing2D::CombineMode combineMode);" />
      <MemberSignature Language="F#" Value="member this.SetClip : System.Drawing.Rectangle * System.Drawing.Drawing2D.CombineMode -&gt; unit" Usage="graphics.SetClip (rect, combineMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="combineMode" Type="System.Drawing.Drawing2D.CombineMode" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="db630-3519">결합할 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3519"><see cref="T:System.Drawing.Rectangle" /> structure to combine.</span></span></param>
        <param name="combineMode"><span data-ttu-id="db630-3520">사용할 결합 작업을 지정하는 <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3520">Member of the <see cref="T:System.Drawing.Drawing2D.CombineMode" /> enumeration that specifies the combining operation to use.</span></span></param>
        <summary><span data-ttu-id="db630-3521">현재 클립 영역과 <see cref="T:System.Drawing.Rectangle" /> 구조체에 의해 지정된 사각형을 결합하는 지정된 작업의 결과로 이 <see cref="T:System.Drawing.Graphics" />의 클립 영역을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3521">Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the result of the specified operation combining the current clip region and the rectangle specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="db630-3522">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3522">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3523">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3523">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3524">클리핑 영역에 대 한 작은 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3524">Creates a small rectangle for the clipping region.</span></span>  
  
-   <span data-ttu-id="db630-3525">클리핑 영역을 사각형으로 설정 된 <xref:System.Drawing.Drawing2D.CombineMode.Replace> 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3525">Sets the clipping region to the rectangle with the <xref:System.Drawing.Drawing2D.CombineMode.Replace> member.</span></span>  
  
-   <span data-ttu-id="db630-3526">검은색 단색 브러시를 사용 하 여 큰 사각형을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3526">Fills a large rectangle with a solid black brush.</span></span>  
  
 <span data-ttu-id="db630-3527">결과는 소규모, 채워진, 검은색 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3527">The result is a small, filled, black rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#159](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#159)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#159](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#159)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#159](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#159)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClip">
      <MemberSignature Language="C#" Value="public void SetClip (System.Drawing.RectangleF rect, System.Drawing.Drawing2D.CombineMode combineMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetClip(valuetype System.Drawing.RectangleF rect, valuetype System.Drawing.Drawing2D.CombineMode combineMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.SetClip(System.Drawing.RectangleF,System.Drawing.Drawing2D.CombineMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClip(System::Drawing::RectangleF rect, System::Drawing::Drawing2D::CombineMode combineMode);" />
      <MemberSignature Language="F#" Value="member this.SetClip : System.Drawing.RectangleF * System.Drawing.Drawing2D.CombineMode -&gt; unit" Usage="graphics.SetClip (rect, combineMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="combineMode" Type="System.Drawing.Drawing2D.CombineMode" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="db630-3528">결합할 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3528"><see cref="T:System.Drawing.RectangleF" /> structure to combine.</span></span></param>
        <param name="combineMode"><span data-ttu-id="db630-3529">사용할 결합 작업을 지정하는 <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3529">Member of the <see cref="T:System.Drawing.Drawing2D.CombineMode" /> enumeration that specifies the combining operation to use.</span></span></param>
        <summary><span data-ttu-id="db630-3530">현재 클립 영역과 <see cref="T:System.Drawing.RectangleF" /> 구조체에 의해 지정된 사각형을 결합하는 지정된 작업의 결과로 이 <see cref="T:System.Drawing.Graphics" />의 클립 영역을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3530">Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the result of the specified operation combining the current clip region and the rectangle specified by a <see cref="T:System.Drawing.RectangleF" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="db630-3531">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3531">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3532">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3532">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3533">클리핑 영역에 대 한 작은 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3533">Creates a small rectangle for the clipping region.</span></span>  
  
-   <span data-ttu-id="db630-3534">클리핑 영역을 사각형으로 설정 된 <xref:System.Drawing.Drawing2D.CombineMode.Replace> 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3534">Sets the clipping region to the rectangle with the <xref:System.Drawing.Drawing2D.CombineMode.Replace> member.</span></span>  
  
-   <span data-ttu-id="db630-3535">검은색 단색 브러시를 사용 하 여 큰 사각형을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3535">Fills a large rectangle with a solid black brush.</span></span>  
  
 <span data-ttu-id="db630-3536">결과는 소규모, 채워진, 검은색 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3536">The result is a small, filled, black rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#161](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#161)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#161](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#161)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#161](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#161)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClip">
      <MemberSignature Language="C#" Value="public void SetClip (System.Drawing.Region region, System.Drawing.Drawing2D.CombineMode combineMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetClip(class System.Drawing.Region region, valuetype System.Drawing.Drawing2D.CombineMode combineMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.SetClip(System.Drawing.Region,System.Drawing.Drawing2D.CombineMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClip(System::Drawing::Region ^ region, System::Drawing::Drawing2D::CombineMode combineMode);" />
      <MemberSignature Language="F#" Value="member this.SetClip : System.Drawing.Region * System.Drawing.Drawing2D.CombineMode -&gt; unit" Usage="graphics.SetClip (region, combineMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Drawing.Region" />
        <Parameter Name="combineMode" Type="System.Drawing.Drawing2D.CombineMode" />
      </Parameters>
      <Docs>
        <param name="region"><span data-ttu-id="db630-3537">결합할 <see cref="T:System.Drawing.Region" />입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3537"><see cref="T:System.Drawing.Region" /> to combine.</span></span></param>
        <param name="combineMode"><span data-ttu-id="db630-3538">사용할 결합 작업을 지정하는 <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3538">Member from the <see cref="T:System.Drawing.Drawing2D.CombineMode" /> enumeration that specifies the combining operation to use.</span></span></param>
        <summary><span data-ttu-id="db630-3539">현재 클립 영역과 지정된 <see cref="T:System.Drawing.Region" />를 결합하는 지정된 작업의 결과로 이 <see cref="T:System.Drawing.Graphics" />의 클립 영역을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3539">Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the result of the specified operation combining the current clip region and the specified <see cref="T:System.Drawing.Region" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="db630-3540">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3540">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3541">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3541">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3542">클리핑 영역에 대 한 작은 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3542">Creates a small rectangle for the clipping region.</span></span>  
  
-   <span data-ttu-id="db630-3543">클리핑 영역을 사각형으로 설정 된 <xref:System.Drawing.Drawing2D.CombineMode.Replace> 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3543">Sets the clipping region to the rectangle with the <xref:System.Drawing.Drawing2D.CombineMode.Replace> member.</span></span>  
  
-   <span data-ttu-id="db630-3544">검은색 단색 브러시를 사용 하 여 큰 사각형을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3544">Fills a large rectangle with a solid black brush.</span></span>  
  
 <span data-ttu-id="db630-3545">결과는 소규모, 채워진, 검은색 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3545">The result is a small, filled, black rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#162](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#162)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#162](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#162)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#162](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#162)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmoothingMode">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.SmoothingMode SmoothingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.SmoothingMode SmoothingMode" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.SmoothingMode" />
      <MemberSignature Language="VB.NET" Value="Public Property SmoothingMode As SmoothingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::SmoothingMode SmoothingMode { System::Drawing::Drawing2D::SmoothingMode get(); void set(System::Drawing::Drawing2D::SmoothingMode value); };" />
      <MemberSignature Language="F#" Value="member this.SmoothingMode : System.Drawing.Drawing2D.SmoothingMode with get, set" Usage="System.Drawing.Graphics.SmoothingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.SmoothingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db630-3546">이 <see cref="T:System.Drawing.Graphics" />의 렌더링 품질을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3546">Gets or sets the rendering quality for this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <value><span data-ttu-id="db630-3547"><see cref="T:System.Drawing.Drawing2D.SmoothingMode" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3547">One of the <see cref="T:System.Drawing.Drawing2D.SmoothingMode" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-3548">다듬기 모드 선, 곡선 및 채워진 영역의 가장자리 사용할 다듬기 (앤티앨리어싱) 여부를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3548">The smoothing mode specifies whether lines, curves, and the edges of filled areas use smoothing (also called antialiasing).</span></span> <span data-ttu-id="db630-3549">한 가지 예외는 경로 그라데이션 브러시 다듬기 모드를 따르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3549">One exception is that path gradient brushes do not obey the smoothing mode.</span></span> <span data-ttu-id="db630-3550">영역을 사용 하 여 입력을 <xref:System.Drawing.Drawing2D.PathGradientBrush> 동일한 방식으로 (별칭이 지정 됨)에 관계 없이 렌더링 됩니다는 <xref:System.Drawing.Graphics.SmoothingMode%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3550">Areas filled using a <xref:System.Drawing.Drawing2D.PathGradientBrush> are rendered the same way (aliased) regardless of the <xref:System.Drawing.Graphics.SmoothingMode%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-3551">다음 메서드 설정의 효과 보여 줍니다.는 <xref:System.Drawing.Pen.DashCap%2A>, <xref:System.Drawing.Pen.DashPattern%2A>, 및 <xref:System.Drawing.Graphics.SmoothingMode%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3551">The following method demonstrates the effects of setting the <xref:System.Drawing.Pen.DashCap%2A>, <xref:System.Drawing.Pen.DashPattern%2A>, and <xref:System.Drawing.Graphics.SmoothingMode%2A> properties.</span></span> <span data-ttu-id="db630-3552">예제의 출력은 다음 그림에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3552">The output of the example is shown in the following illustration.</span></span>  
  
 <span data-ttu-id="db630-3553">![다듬기가 적용 하지 않고 사용 하 여 줄입니다. ] (~/add/media/gdi-smoothingmode.png "다듬기가 적용 하지 않고 사용 하 여 줄.")</span><span class="sxs-lookup"><span data-stu-id="db630-3553">![Lines with and without smoothing applied.](~/add/media/gdi-smoothingmode.png "Lines with and without smoothing applied.")</span></span>  
  
 <span data-ttu-id="db630-3554">이 예제에서는 Windows Forms를 사용 하 여 사용 하도록 설계 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3554">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="db630-3555">양식과 호출 코드를 붙여 합니다 `ShowPensAndSmoothingMode` 폼을 처리 하는 경우 메서드 <xref:System.Windows.Forms.Control.Paint> 이벤트를 전달 `e` 으로 <xref:System.Windows.Forms.PaintEventArgs>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3555">Paste the code into a form and call the `ShowPensAndSmoothingMode` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.PensExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#3)]
 [!code-vb[System.Drawing.PensExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextContrast">
      <MemberSignature Language="C#" Value="public int TextContrast { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TextContrast" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.TextContrast" />
      <MemberSignature Language="VB.NET" Value="Public Property TextContrast As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TextContrast { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TextContrast : int with get, set" Usage="System.Drawing.Graphics.TextContrast" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db630-3556">렌더링 텍스트의 감마 보정 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3556">Gets or sets the gamma correction value for rendering text.</span></span></summary>
        <value><span data-ttu-id="db630-3557">앤티 앨리어싱된 ClearType 텍스트의 렌더링에 사용되는 감마 보정 값입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3557">The gamma correction value used for rendering antialiased and ClearType text.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-3558">감마 보정 값은 0에서 12 사이 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3558">The gamma correction value must be between 0 and 12.</span></span> <span data-ttu-id="db630-3559">기본값은 4입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3559">The default value is 4.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-3560">다음 코드 예제에서는 합니다 <xref:System.Drawing.Graphics.TextRenderingHint%2A> 고 <xref:System.Drawing.Graphics.TextContrast%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3560">The following code example demonstrates the use of the <xref:System.Drawing.Graphics.TextRenderingHint%2A> and <xref:System.Drawing.Graphics.TextContrast%2A> properties.</span></span>  
  
 <span data-ttu-id="db630-3561">이 예제에서는 Windows Forms를 사용 하 여 사용 하도록 설계 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3561">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="db630-3562">양식과 호출 코드를 붙여 합니다 `ChangeTextRenderingHintAndTextContrast` 폼을 처리 하는 경우 메서드 <xref:System.Windows.Forms.Control.Paint> 이벤트를 전달 `e` 으로 <xref:System.Windows.Forms.PaintEventArgs>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3562">Paste the code into a form and call the `ChangeTextRenderingHintAndTextContrast` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.GraphicsProperties#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.GraphicsProperties#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CS/form1.cs#5)]
 [!code-vb[System.Drawing.GraphicsProperties#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextRenderingHint">
      <MemberSignature Language="C#" Value="public System.Drawing.Text.TextRenderingHint TextRenderingHint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Text.TextRenderingHint TextRenderingHint" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.TextRenderingHint" />
      <MemberSignature Language="VB.NET" Value="Public Property TextRenderingHint As TextRenderingHint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Text::TextRenderingHint TextRenderingHint { System::Drawing::Text::TextRenderingHint get(); void set(System::Drawing::Text::TextRenderingHint value); };" />
      <MemberSignature Language="F#" Value="member this.TextRenderingHint : System.Drawing.Text.TextRenderingHint with get, set" Usage="System.Drawing.Graphics.TextRenderingHint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Text.TextRenderingHint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db630-3563">이 <see cref="T:System.Drawing.Graphics" />와 관련된 텍스트의 렌더링 모드를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3563">Gets or sets the rendering mode for text associated with this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <value><span data-ttu-id="db630-3564"><see cref="T:System.Drawing.Text.TextRenderingHint" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3564">One of the <see cref="T:System.Drawing.Text.TextRenderingHint" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-3565">텍스트 렌더링 힌트 텍스트 앤티앨리어싱으로 렌더링 하는지 여부를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3565">The text rendering hint specifies whether text renders with antialiasing.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="db630-3566">사용 하지 않아야를 <xref:System.Drawing.Graphics.CompositingMode%2A> 속성 값 <xref:System.Drawing.Drawing2D.CompositingMode.SourceCopy> 경우는 <xref:System.Drawing.Graphics.TextRenderingHint%2A> 속성이 <xref:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3566">You should not use a <xref:System.Drawing.Graphics.CompositingMode%2A> property value of <xref:System.Drawing.Drawing2D.CompositingMode.SourceCopy> when the <xref:System.Drawing.Graphics.TextRenderingHint%2A> property is set to <xref:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit>.</span></span> <span data-ttu-id="db630-3567">예외가 발생할 수 있습니다 하거나 이미지가 제대로 렌더링 되지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3567">An exception could occur or the image may not render correctly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-3568">다음 코드 예제에서는 합니다 <xref:System.Drawing.Graphics.TextRenderingHint%2A> 고 <xref:System.Drawing.Graphics.TextContrast%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3568">The following code example demonstrates the use of the <xref:System.Drawing.Graphics.TextRenderingHint%2A> and <xref:System.Drawing.Graphics.TextContrast%2A> properties.</span></span>  
  
 <span data-ttu-id="db630-3569">이 예제에서는 Windows Forms를 사용 하 여 사용 하도록 설계 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3569">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="db630-3570">양식과 호출 코드를 붙여 합니다 `ChangeTextRenderingHintAndTextContrast` 폼을 처리 하는 경우 메서드 <xref:System.Windows.Forms.Control.Paint> 이벤트를 전달 `e` 으로 <xref:System.Windows.Forms.PaintEventArgs>합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3570">Paste the code into a form and call the `ChangeTextRenderingHintAndTextContrast` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.GraphicsProperties#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.GraphicsProperties#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CS/form1.cs#5)]
 [!code-vb[System.Drawing.GraphicsProperties#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.Matrix Transform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.Matrix Transform" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.Transform" />
      <MemberSignature Language="VB.NET" Value="Public Property Transform As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::Matrix ^ Transform { System::Drawing::Drawing2D::Matrix ^ get(); void set(System::Drawing::Drawing2D::Matrix ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Drawing.Drawing2D.Matrix with get, set" Usage="System.Drawing.Graphics.Transform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db630-3571">이 <see cref="T:System.Drawing.Graphics" />에 대한 기하학적 월드 변형의 복사본을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3571">Gets or sets a copy of the geometric world transformation for this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <value><span data-ttu-id="db630-3572">이 <see cref="T:System.Drawing.Graphics" />에 대한 기하학적 월드 변환을 나타내는 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 복사본입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3572">A copy of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the geometric world transformation for this <see cref="T:System.Drawing.Graphics" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-3573">GDI +-세 가지 좌표 공간을 사용 하는 중: 전역, 페이지 및 디바이스입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3573">GDI+ uses three coordinate spaces: world, page, and device.</span></span> <span data-ttu-id="db630-3574">세계 좌표 좌표 특정 그래픽 월드를 모델링 하는 데 사용 되며.NET Framework의 메서드에 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3574">World coordinates are the coordinates used to model a particular graphic world and are the coordinates you pass to methods in the .NET Framework.</span></span> <span data-ttu-id="db630-3575">페이지 좌표 폼 또는 컨트롤 같은 그리기 화면을 사용 하는 좌표계를 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3575">Page coordinates refer to the coordinate system used by a drawing surface, such as a form or a control.</span></span> <span data-ttu-id="db630-3576">디바이스 좌표는 화면 또는 프린터와 같은 항목이 그려지는 실제 디바이스에서 사용 된 좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3576">Device coordinates are the coordinates used by the physical device being drawn on, such as a screen or a printer.</span></span> <span data-ttu-id="db630-3577"><xref:System.Drawing.Graphics.Transform%2A> 속성 세계 좌표 페이지 좌표를 매핑하는 월드 변형을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3577">The <xref:System.Drawing.Graphics.Transform%2A> property represents the world transformation, which maps world coordinates to page coordinates.</span></span>  
  
 <span data-ttu-id="db630-3578">행렬을 반환 하 고는 <xref:System.Drawing.Graphics.Transform%2A> 기하학적 변형의 복사본 속성이 더 이상 필요할 때 행렬의 삭제 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3578">Because the matrix returned and by the <xref:System.Drawing.Graphics.Transform%2A> property is a copy of the geometric transform, you should dispose of the matrix when you no longer need it.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/c61ff50a-eb1d-4e6c-83cd-f7e9764cfa9f"><span data-ttu-id="db630-3579">좌표계 형식</span><span class="sxs-lookup"><span data-stu-id="db630-3579">Types of Coordinate Systems</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TransformPoints">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db630-3580">이 <see cref="T:System.Drawing.Graphics" />의 현재 월드 및 페이지 변형을 사용하여 점의 배열을 하나의 좌표 공간에서 다른 좌표 공간으로 변형합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3580">Transforms an array of points from one coordinate space to another using the current world and page transformations of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TransformPoints">
      <MemberSignature Language="C#" Value="public void TransformPoints (System.Drawing.Drawing2D.CoordinateSpace destSpace, System.Drawing.Drawing2D.CoordinateSpace srcSpace, System.Drawing.Point[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformPoints(valuetype System.Drawing.Drawing2D.CoordinateSpace destSpace, valuetype System.Drawing.Drawing2D.CoordinateSpace srcSpace, valuetype System.Drawing.Point[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransformPoints (destSpace As CoordinateSpace, srcSpace As CoordinateSpace, pts As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransformPoints(System::Drawing::Drawing2D::CoordinateSpace destSpace, System::Drawing::Drawing2D::CoordinateSpace srcSpace, cli::array &lt;System::Drawing::Point&gt; ^ pts);" />
      <MemberSignature Language="F#" Value="member this.TransformPoints : System.Drawing.Drawing2D.CoordinateSpace * System.Drawing.Drawing2D.CoordinateSpace * System.Drawing.Point[] -&gt; unit" Usage="graphics.TransformPoints (destSpace, srcSpace, pts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destSpace" Type="System.Drawing.Drawing2D.CoordinateSpace" />
        <Parameter Name="srcSpace" Type="System.Drawing.Drawing2D.CoordinateSpace" />
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="destSpace"><span data-ttu-id="db630-3581">대상 좌표 공간을 지정하는 <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3581">Member of the <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> enumeration that specifies the destination coordinate space.</span></span></param>
        <param name="srcSpace"><span data-ttu-id="db630-3582">원본 좌표 공간을 지정하는 <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3582">Member of the <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> enumeration that specifies the source coordinate space.</span></span></param>
        <param name="pts"><span data-ttu-id="db630-3583">변형할 점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3583">Array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transformation.</span></span></param>
        <summary><span data-ttu-id="db630-3584">이 <see cref="T:System.Drawing.Graphics" />의 현재 월드 및 페이지 변형을 사용하여 점의 배열을 하나의 좌표 공간에서 다른 좌표 공간으로 변형합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3584">Transforms an array of points from one coordinate space to another using the current world and page transformations of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="db630-3585">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3585">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3586">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3586">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3587">두 개의 점을 만들고 해당 사이 파란색 선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3587">Creates two points and draws a blue line between them.</span></span>  
  
-   <span data-ttu-id="db630-3588">X 방향 및 y 방향의 30 40 양만큼 변환할 world 변환을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3588">Sets the world transform to translate by amounts 40 in the x direction and 30 in the y direction.</span></span>  
  
-   <span data-ttu-id="db630-3589">세계 좌표에서 요소를 변환 (<xref:System.Drawing.Drawing2D.CoordinateSpace.World>)를 페이지 좌표로 (<xref:System.Drawing.Drawing2D.CoordinateSpace.Page>).</span><span class="sxs-lookup"><span data-stu-id="db630-3589">Transforms the points from world coordinates (<xref:System.Drawing.Drawing2D.CoordinateSpace.World>) to page coordinates (<xref:System.Drawing.Drawing2D.CoordinateSpace.Page>).</span></span>  
  
-   <span data-ttu-id="db630-3590">월드 id로 다시 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3590">Resets the world transformation to the identity.</span></span>  
  
-   <span data-ttu-id="db630-3591">변환 된 점 사이의 빨강 선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3591">Draws a red line between the transformed points.</span></span>  
  
 <span data-ttu-id="db630-3592">결과 파란색 선 및 번역 된 빨간색 줄 아래입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3592">The result is a blue line and a translated red line below it.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#163](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#163)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#163](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#163)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#163](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#163)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformPoints">
      <MemberSignature Language="C#" Value="public void TransformPoints (System.Drawing.Drawing2D.CoordinateSpace destSpace, System.Drawing.Drawing2D.CoordinateSpace srcSpace, System.Drawing.PointF[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformPoints(valuetype System.Drawing.Drawing2D.CoordinateSpace destSpace, valuetype System.Drawing.Drawing2D.CoordinateSpace srcSpace, valuetype System.Drawing.PointF[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransformPoints (destSpace As CoordinateSpace, srcSpace As CoordinateSpace, pts As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransformPoints(System::Drawing::Drawing2D::CoordinateSpace destSpace, System::Drawing::Drawing2D::CoordinateSpace srcSpace, cli::array &lt;System::Drawing::PointF&gt; ^ pts);" />
      <MemberSignature Language="F#" Value="member this.TransformPoints : System.Drawing.Drawing2D.CoordinateSpace * System.Drawing.Drawing2D.CoordinateSpace * System.Drawing.PointF[] -&gt; unit" Usage="graphics.TransformPoints (destSpace, srcSpace, pts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destSpace" Type="System.Drawing.Drawing2D.CoordinateSpace" />
        <Parameter Name="srcSpace" Type="System.Drawing.Drawing2D.CoordinateSpace" />
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="destSpace"><span data-ttu-id="db630-3593">대상 좌표 공간을 지정하는 <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3593">Member of the <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> enumeration that specifies the destination coordinate space.</span></span></param>
        <param name="srcSpace"><span data-ttu-id="db630-3594">원본 좌표 공간을 지정하는 <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3594">Member of the <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> enumeration that specifies the source coordinate space.</span></span></param>
        <param name="pts"><span data-ttu-id="db630-3595">변형할 점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3595">Array of <see cref="T:System.Drawing.PointF" /> structures that represent the points to transform.</span></span></param>
        <summary><span data-ttu-id="db630-3596">이 <see cref="T:System.Drawing.Graphics" />의 현재 월드 및 페이지 변형을 사용하여 점의 배열을 하나의 좌표 공간에서 다른 좌표 공간으로 변형합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3596">Transforms an array of points from one coordinate space to another using the current world and page transformations of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="db630-3597">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3597">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3598">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3598">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3599">두 개의 점을 만들고 해당 사이 파란색 선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3599">Creates two points and draws a blue line between them.</span></span>  
  
-   <span data-ttu-id="db630-3600">X 방향 및 y 방향의 30 40 양만큼 변환할 world 변환을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3600">Sets the world transform to translate by amounts 40 in the x direction and 30 in the y direction.</span></span>  
  
-   <span data-ttu-id="db630-3601">세계 좌표에서 요소를 변환 (<xref:System.Drawing.Drawing2D.CoordinateSpace.World>)를 페이지 좌표로 (<xref:System.Drawing.Drawing2D.CoordinateSpace.Page>).</span><span class="sxs-lookup"><span data-stu-id="db630-3601">Transforms the points from world coordinates (<xref:System.Drawing.Drawing2D.CoordinateSpace.World>) to page coordinates (<xref:System.Drawing.Drawing2D.CoordinateSpace.Page>).</span></span>  
  
-   <span data-ttu-id="db630-3602">월드 id로 다시 설정 하 고 변환된 된 점 사이 빨간색 선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3602">Resets the world transformation to the identity and draws a red line between the transformed points.</span></span>  
  
 <span data-ttu-id="db630-3603">결과 파란색 선 및 번역 된 빨간색 줄 아래입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3603">The result is a blue line and a translated red line below it.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#164](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#164)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#164](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#164)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#164](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#164)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TranslateClip">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db630-3604">수평 및 수직 방향으로 지정된 크기만큼 이 <see cref="T:System.Drawing.Graphics" />의 클립 영역을 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3604">Translates the clipping region of this <see cref="T:System.Drawing.Graphics" /> by specified amounts in the horizontal and vertical directions.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TranslateClip">
      <MemberSignature Language="C#" Value="public void TranslateClip (int dx, int dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateClip(int32 dx, int32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.TranslateClip(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslateClip (dx As Integer, dy As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslateClip(int dx, int dy);" />
      <MemberSignature Language="F#" Value="member this.TranslateClip : int * int -&gt; unit" Usage="graphics.TranslateClip (dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Int32" />
        <Parameter Name="dy" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dx"><span data-ttu-id="db630-3605">이동의 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3605">The x-coordinate of the translation.</span></span></param>
        <param name="dy"><span data-ttu-id="db630-3606">이동의 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3606">The y-coordinate of the translation.</span></span></param>
        <summary><span data-ttu-id="db630-3607">수평 및 수직 방향으로 지정된 크기만큼 이 <see cref="T:System.Drawing.Graphics" />의 클립 영역을 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3607">Translates the clipping region of this <see cref="T:System.Drawing.Graphics" /> by specified amounts in the horizontal and vertical directions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="db630-3608">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3608">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3609">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3609">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3610">클리핑 영역에 대 한 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3610">Creates a rectangle for the clipping region.</span></span>  
  
-   <span data-ttu-id="db630-3611">사각형에 클립 영역을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3611">Sets the clipping region to the rectangle.</span></span>  
  
-   <span data-ttu-id="db630-3612">클리핑 영역을 벡터 (50, 50)로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3612">Translates the clipping region by a vector (50, 50).</span></span>  
  
-   <span data-ttu-id="db630-3613">검은색 단색 브러시를 사용 하 여 큰 사각형을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3613">Fills a large rectangle with a solid black brush.</span></span>  
  
 <span data-ttu-id="db630-3614">결과 변환, 작은 검은색 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3614">The result is a translated, small, black rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#165](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#165)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#165](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#165)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#165](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#165)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslateClip">
      <MemberSignature Language="C#" Value="public void TranslateClip (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateClip(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.TranslateClip(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslateClip (dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslateClip(float dx, float dy);" />
      <MemberSignature Language="F#" Value="member this.TranslateClip : single * single -&gt; unit" Usage="graphics.TranslateClip (dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx"><span data-ttu-id="db630-3615">이동의 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3615">The x-coordinate of the translation.</span></span></param>
        <param name="dy"><span data-ttu-id="db630-3616">이동의 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3616">The y-coordinate of the translation.</span></span></param>
        <summary><span data-ttu-id="db630-3617">수평 및 수직 방향으로 지정된 크기만큼 이 <see cref="T:System.Drawing.Graphics" />의 클립 영역을 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3617">Translates the clipping region of this <see cref="T:System.Drawing.Graphics" /> by specified amounts in the horizontal and vertical directions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="db630-3618">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3618">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3619">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3619">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3620">클리핑 영역에 대 한 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3620">Creates a rectangle for the clipping region.</span></span>  
  
-   <span data-ttu-id="db630-3621">사각형에 클립 영역을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3621">Sets the clipping region to the rectangle.</span></span>  
  
-   <span data-ttu-id="db630-3622">클리핑 영역을 벡터 (50.0 f, 50.0 f)로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3622">Translates the clipping region by a vector (50.0F, 50.0F).</span></span>  
  
-   <span data-ttu-id="db630-3623">검은색 단색 브러시를 사용 하 여 큰 사각형을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3623">Fills a large rectangle with a solid black brush.</span></span>  
  
 <span data-ttu-id="db630-3624">결과 변환, 작은 검은색 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3624">The result is a translated, small, black rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#166](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#166)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#166](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#166)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#166](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#166)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TranslateTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db630-3625">이 <see cref="T:System.Drawing.Graphics" />의 변형 매트릭스 앞에 지정된 이동을 추가하여 좌표계의 원점을 변경합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3625">Changes the origin of the coordinate system by prepending the specified translation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TranslateTransform">
      <MemberSignature Language="C#" Value="public void TranslateTransform (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateTransform(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslateTransform (dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslateTransform(float dx, float dy);" />
      <MemberSignature Language="F#" Value="member this.TranslateTransform : single * single -&gt; unit" Usage="graphics.TranslateTransform (dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx"><span data-ttu-id="db630-3626">이동의 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3626">The x-coordinate of the translation.</span></span></param>
        <param name="dy"><span data-ttu-id="db630-3627">이동의 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3627">The y-coordinate of the translation.</span></span></param>
        <summary><span data-ttu-id="db630-3628">이 <see cref="T:System.Drawing.Graphics" />의 변형 매트릭스 앞에 지정된 이동을 추가하여 좌표계의 원점을 변경합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3628">Changes the origin of the coordinate system by prepending the specified translation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-3629">출처는 일반적으로 그리기 화면의 왼쪽 위 모퉁이.</span><span class="sxs-lookup"><span data-stu-id="db630-3629">The origin is typically the upper-left-hand corner of the drawing surface.</span></span>  <span data-ttu-id="db630-3630">이동 된 행렬으로 변환 매트릭스 변환 작업으로 구성 합니다 `dx` 및 `dy` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3630">The translation operation consists of multiplying the transformation matrix by a matrix whose translation part is the `dx` and `dy` parameters.</span></span> <span data-ttu-id="db630-3631">이 메서드를 변환 매트릭스 변환 행렬을 추가 하 여 변환 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3631">This method applies the translation by prepending the translation matrix to the transformation matrix.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-3632">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3632">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3633">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3633">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3634">Windows Form의 월드 변형 매트릭스를 30.0F도 회전 시킵니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3634">Rotates the world transformation matrix of the Windows Form by 30.0F degrees.</span></span>  
  
-   <span data-ttu-id="db630-3635">Graphics 개체의 출처를 호출 하 여 이동 <xref:System.Drawing.Graphics.TranslateTransform%2A>를 번역에 변형 매트릭스 앞에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3635">Moves the origin of the graphics object by calling <xref:System.Drawing.Graphics.TranslateTransform%2A>, prepending the translation to the transformation matrix.</span></span>  
  
-   <span data-ttu-id="db630-3636">파란색 펜을 사용 하 여 변환, 회전 타원을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3636">Draws a translated, rotated ellipse with a blue pen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#167](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#167)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#167](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#167)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#167](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#167)]  
  
 <span data-ttu-id="db630-3637">다음 그림에서는 이전 코드 예제를 실행 하는 출력을 보여줍니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3637">The following illustration shows the output of running the previous code example.</span></span>  
  
 <span data-ttu-id="db630-3638">![번역 및 변형 된 타원](~/add/media/ndp-tranlatetransform.png "번역 및 변형 된 타원")</span><span class="sxs-lookup"><span data-stu-id="db630-3638">![Translated and transformed ellipse](~/add/media/ndp-tranlatetransform.png "Translated and transformed ellipse")</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9fef7451-bddf-4c68-9350-400d1f1f25a3"><span data-ttu-id="db630-3639">좌표계 및 변형</span><span class="sxs-lookup"><span data-stu-id="db630-3639">Coordinate Systems and Transformations</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f8e18d3-d2f5-460e-a8e3-2da891c301de"><span data-ttu-id="db630-3640">관리 GDI+에서 변형 사용</span><span class="sxs-lookup"><span data-stu-id="db630-3640">Using Transformations in Managed GDI+</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TranslateTransform">
      <MemberSignature Language="C#" Value="public void TranslateTransform (float dx, float dy, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateTransform(float32 dx, float32 dy, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslateTransform (dx As Single, dy As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslateTransform(float dx, float dy, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.TranslateTransform : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="graphics.TranslateTransform (dx, dy, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="dx"><span data-ttu-id="db630-3641">이동의 x-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3641">The x-coordinate of the translation.</span></span></param>
        <param name="dy"><span data-ttu-id="db630-3642">이동의 y-좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3642">The y-coordinate of the translation.</span></span></param>
        <param name="order"><span data-ttu-id="db630-3643">해당 이동이 변형 매트릭스의 앞에 추가되는지 뒤에 추가되는지를 지정하는 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3643">Member of the <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies whether the translation is prepended or appended to the transformation matrix.</span></span></param>
        <summary><span data-ttu-id="db630-3644">지정된 순서로 이 <see cref="T:System.Drawing.Graphics" />의 변형 매트릭스에 지정된 이동을 적용하여 좌표계의 원점을 변경합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3644">Changes the origin of the coordinate system by applying the specified translation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" /> in the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-3645">이동 된 행렬으로 변환 매트릭스 변환 작업으로 구성 합니다 `dx` 및 `dy` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3645">The translation operation consists of multiplying the transformation matrix by a matrix whose translation part is the `dx` and `dy` parameters.</span></span> <span data-ttu-id="db630-3646">이 메서드 앞에 추가 하거나의 변형 매트릭스를 추가 합니다 <xref:System.Drawing.Graphics> 에 따라 변환 매트릭스를 `order` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3646">This method prepends or appends the transformation matrix of the <xref:System.Drawing.Graphics> by the translation matrix according to the `order` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db630-3647">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3647">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="db630-3648">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3648">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="db630-3649">Windows Form의 월드 변형 매트릭스를 30.0F도 회전 시킵니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3649">Rotates the world transformation matrix of the Windows Form by 30.0F degrees.</span></span>  
  
-   <span data-ttu-id="db630-3650">그래픽 개체의 원본 호출 하 여 이동 <xref:System.Drawing.Graphics.TranslateTransform%2A>, 월드 변형 매트릭스에 번역을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3650">Moves the graphics object's origin by calling <xref:System.Drawing.Graphics.TranslateTransform%2A>, appending the translation to the world transformation matrix.</span></span>  
  
-   <span data-ttu-id="db630-3651">파란색 펜으로 회전 되 고 번역 된 타원을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3651">Draws a rotated, translated ellipse with a blue pen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#168](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#168)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#168](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#168)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#168](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#168)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9fef7451-bddf-4c68-9350-400d1f1f25a3"><span data-ttu-id="db630-3652">좌표계 및 변형</span><span class="sxs-lookup"><span data-stu-id="db630-3652">Coordinate Systems and Transformations</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f8e18d3-d2f5-460e-a8e3-2da891c301de"><span data-ttu-id="db630-3653">관리 GDI+에서 변형 사용</span><span class="sxs-lookup"><span data-stu-id="db630-3653">Using Transformations in Managed GDI+</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="VisibleClipBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF VisibleClipBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.RectangleF VisibleClipBounds" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.VisibleClipBounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VisibleClipBounds As RectangleF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::RectangleF VisibleClipBounds { System::Drawing::RectangleF get(); };" />
      <MemberSignature Language="F#" Value="member this.VisibleClipBounds : System.Drawing.RectangleF" Usage="System.Drawing.Graphics.VisibleClipBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db630-3654">이 <see cref="T:System.Drawing.Graphics" />의 표시되는 클립 영역에 대한 경계 사각형을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3654">Gets the bounding rectangle of the visible clipping region of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <value><span data-ttu-id="db630-3655">이 <see cref="T:System.Drawing.Graphics" />의 표시되는 클립 영역에 대한 경계 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3655">A <see cref="T:System.Drawing.RectangleF" /> structure that represents a bounding rectangle for the visible clipping region of this <see cref="T:System.Drawing.Graphics" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db630-3656">지정 하는 결과 사각형의 단위는 <xref:System.Drawing.Graphics.PageUnit%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3656">The unit for resulting rectangle is designated by the <xref:System.Drawing.Graphics.PageUnit%2A> property.</span></span> <span data-ttu-id="db630-3657">기본 단위는 픽셀입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3657">The default unit is pixels.</span></span> <span data-ttu-id="db630-3658"><xref:System.Drawing.Graphics> 일반적으로 컨트롤과 연결 된 해당 컨트롤의 클라이언트 영역을 기준으로 사각형의 시작 됩니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3658">A <xref:System.Drawing.Graphics> is typically associated with a control and the origin of the rectangle will be relative to the client area of that control.</span></span>  
  
 <span data-ttu-id="db630-3659">표시 된 클립 영역이이의 클립 영역의 교집합입니다 <xref:System.Drawing.Graphics> 및 창의 클리핑 영역입니다.</span><span class="sxs-lookup"><span data-stu-id="db630-3659">The visible clipping region is the intersection of the clipping region of this <xref:System.Drawing.Graphics> and the clipping region of the window.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>