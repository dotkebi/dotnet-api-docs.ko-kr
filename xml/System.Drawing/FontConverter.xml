<Type Name="FontConverter" FullName="System.Drawing.FontConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2edb94a75e8b73483e68b4b879bcf5b8e36bea0a" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56374867" /></Metadata><TypeSignature Language="C#" Value="public class FontConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FontConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.FontConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class FontConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class FontConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type FontConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7b7f5-101">한 데이터 형식에서 다른 데이터 형식으로 <see cref="T:System.Drawing.Font" /> 개체를 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-101">Converts <see cref="T:System.Drawing.Font" /> objects from one data type to another.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b7f5-102">값 데이터 형식 간에 변환 하는 형식 변환기를 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-102">A type converter is used to convert values between data types.</span></span> <span data-ttu-id="7b7f5-103">형식 변환기는 텍스트에서 값으로 변환 또는 사용자가 선택할 수 있는 값의 목록을 제공 하 여 디자인 타임에 속성 구성도 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-103">A type converter also supports property configuration at design time by providing text-to-value conversion or a list of values that users can select from.</span></span> <span data-ttu-id="7b7f5-104">액세스는 <xref:System.Drawing.FontConverter> 를 통해 클래스를 <xref:System.ComponentModel.TypeDescriptor> 를 호출 하 여 클래스를 <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-104">Access the <xref:System.Drawing.FontConverter> class through the <xref:System.ComponentModel.TypeDescriptor> class by calling the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b7f5-105">다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Drawing.FontConverter> 변환할를 <xref:System.Drawing.Font> 를 문자열에서.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-105">The following code example demonstrates how to use the <xref:System.Drawing.FontConverter> to convert a <xref:System.Drawing.Font> to and from a string.</span></span> <span data-ttu-id="7b7f5-106">이 예제에서는 Windows Forms를 사용 하 여 사용 하도록 설계 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-106">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="7b7f5-107">폼 호출에이 코드를 붙여 넣고 합니다 `ShowFontStringConversion` 폼을 처리 하는 경우 메서드 <xref:System.Windows.Forms.Control.Paint> e로 전달할 <xref:System.Windows.Forms.PaintEventArgs>합니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-107">Paste this code into a form and call the `ShowFontStringConversion` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing e as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.Converters#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Converters/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Converters#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Converters/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Converters#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Converters/VB/form1.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.TypeConverter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7b7f5-108">새 <see cref="T:System.Drawing.FontConverter" /> 개체를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-108">Initializes a new <see cref="T:System.Drawing.FontConverter" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b7f5-109">에 액세스 해야는 <xref:System.Drawing.FontConverter> 개체는 <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-109">You should access a <xref:System.Drawing.FontConverter> object through the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="fontConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="7b7f5-110">포맷터 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-110">A formatter context.</span></span> <span data-ttu-id="7b7f5-111">이 개체를 사용하여 이 변환기가 호출되는 환경에 대한 추가 정보를 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-111">This object can be used to get additional information about the environment this converter is being called from.</span></span> <span data-ttu-id="7b7f5-112">이 매개 변수는 <see langword="null" />이 될 수 있으므로 항상 확인해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-112">This may be <see langword="null" />, so you should always check.</span></span> <span data-ttu-id="7b7f5-113">또한 컨텍스트 개체의 속성은 <see langword="null" />을 반환할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-113">Also, properties on the context object may also return <see langword="null" />.</span></span></param>
        <param name="sourceType"><span data-ttu-id="7b7f5-114">변환할 원본 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-114">The type you want to convert from.</span></span></param>
        <summary><span data-ttu-id="7b7f5-115">이 변환기가 지정된 소스 형식의 개체를 변환기의 네이티브 형식으로 변환할 수 있는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-115">Determines whether this converter can convert an object in the specified source type to the native type of the converter.</span></span></summary>
        <returns><span data-ttu-id="7b7f5-116">이 개체가 변환을 수행할 수 있으면 이 메서드는 <see langword="true" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-116">This method returns <see langword="true" /> if this object can perform the conversion.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="fontConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="7b7f5-117">형식 컨텍스트를 제공하는 <see langword="ITypeDescriptorContext" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-117">An <see langword="ITypeDescriptorContext" /> object that provides a format context.</span></span></param>
        <param name="destinationType"><span data-ttu-id="7b7f5-118">변환할 형식을 나타내는 <see cref="T:System.Type" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-118">A <see cref="T:System.Type" /> object that represents the type you want to convert to.</span></span></param>
        <summary><span data-ttu-id="7b7f5-119">컨텍스트를 사용하여 이 변환기에서 개체를 지정된 대상 형식으로 변환할 수 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-119">Gets a value indicating whether this converter can convert an object to the given destination type using the context.</span></span></summary>
        <returns><span data-ttu-id="7b7f5-120">이 변환기가 변환을 수행할 수 있으면 이 메서드는 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-120">This method returns <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b7f5-121">`context` 매개 변수는 이 변환기가 호출되는 환경에 대한 추가 정보를 추출하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-121">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="7b7f5-122">이 매개 변수는 `null`이 될 수 있으므로 항상 확인해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-122">This can be `null`, so always check.</span></span> <span data-ttu-id="7b7f5-123">또한 컨텍스트 개체의 속성은 `null`을 반환할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-123">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="fontConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="7b7f5-124">포맷터 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-124">A formatter context.</span></span> <span data-ttu-id="7b7f5-125">이 개체를 사용하여 이 변환기가 호출되는 환경에 대한 추가 정보를 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-125">This object can be used to get additional information about the environment this converter is being called from.</span></span> <span data-ttu-id="7b7f5-126">이 매개 변수는 <see langword="null" />이 될 수 있으므로 항상 확인해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-126">This may be <see langword="null" />, so you should always check.</span></span> <span data-ttu-id="7b7f5-127">또한 컨텍스트 개체의 속성은 <see langword="null" />을 반환할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-127">Also, properties on the context object may also return <see langword="null" />.</span></span></param>
        <param name="culture"><span data-ttu-id="7b7f5-128">글꼴을 나타내는 데 사용된 문화권을 지정하는 <see langword="CultureInfo" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-128">A <see langword="CultureInfo" /> object that specifies the culture used to represent the font.</span></span></param>
        <param name="value"><span data-ttu-id="7b7f5-129">변환할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-129">The object to convert.</span></span></param>
        <summary><span data-ttu-id="7b7f5-130">지정된 개체를 변환기의 네이티브 형식으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-130">Converts the specified object to the native type of the converter.</span></span></summary>
        <returns><span data-ttu-id="7b7f5-131">변환된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-131">The converted object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7b7f5-132">변환을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="7b7f5-132">The conversion could not be performed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="fontConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="7b7f5-133">포맷터 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-133">A formatter context.</span></span> <span data-ttu-id="7b7f5-134">이 개체를 사용하여 이 변환기가 호출되는 환경에 대한 추가 정보를 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-134">This object can be used to get additional information about the environment this converter is being called from.</span></span> <span data-ttu-id="7b7f5-135">이 매개 변수는 <see langword="null" />이 될 수 있으므로 항상 확인해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-135">This may be <see langword="null" />, so you should always check.</span></span> <span data-ttu-id="7b7f5-136">또한 컨텍스트 개체의 속성은 <see langword="null" />을 반환할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-136">Also, properties on the context object may also return <see langword="null" />.</span></span></param>
        <param name="culture"><span data-ttu-id="7b7f5-137">개체를 나타내는 데 사용된 문화권을 지정하는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-137">A <see cref="T:System.Globalization.CultureInfo" /> object that specifies the culture used to represent the object.</span></span></param>
        <param name="value"><span data-ttu-id="7b7f5-138">변환할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-138">The object to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="7b7f5-139">개체를 변환할 데이터 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-139">The data type to convert the object to.</span></span></param>
        <summary><span data-ttu-id="7b7f5-140">지정된 개체를 다른 형식으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-140">Converts the specified object to another type.</span></span></summary>
        <returns><span data-ttu-id="7b7f5-141">변환된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-141">The converted object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b7f5-142">가장 일반적인 형식 변환은 문자열 형식에서입니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-142">The most common type conversion is to and from a string type.</span></span> <span data-ttu-id="7b7f5-143">기본 구현 호출을 <xref:System.Object.ToString%2A> 개체의 메서드 개체가 유효 하 고 대상 형식이 문자열인 경우.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-143">The default implementation calls the <xref:System.Object.ToString%2A> method of the object if the object is valid and if the destination type is string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7b7f5-144">변환에 성공하지 못한 경우</span><span class="sxs-lookup"><span data-stu-id="7b7f5-144">The conversion was not successful.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public override object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object CreateInstance(class System.ComponentModel.ITypeDescriptorContext context, class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateInstance (context As ITypeDescriptorContext, propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ CreateInstance(System::ComponentModel::ITypeDescriptorContext ^ context, System::Collections::IDictionary ^ propertyValues);" />
      <MemberSignature Language="F#" Value="override this.CreateInstance : System.ComponentModel.ITypeDescriptorContext * System.Collections.IDictionary -&gt; obj" Usage="fontConverter.CreateInstance (context, propertyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="7b7f5-145">추가 컨텍스트를 제공하는 형식 설명자입니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-145">A type descriptor through which additional context can be provided.</span></span></param>
        <param name="propertyValues"><span data-ttu-id="7b7f5-146">새 속성 값의 사전입니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-146">A dictionary of new property values.</span></span> <span data-ttu-id="7b7f5-147">이 사전은 <see cref="Overload:System.Drawing.FontConverter.GetProperties" /> 메서드에서 반환된 각 속성에 대해 이름/값 쌍을 하나씩 포함하는 이름/값 쌍 집합을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-147">The dictionary contains a series of name-value pairs, one for each property returned from the <see cref="Overload:System.Drawing.FontConverter.GetProperties" /> method.</span></span></param>
        <summary><span data-ttu-id="7b7f5-148">지정된 개체의 속성 값 집합을 사용하여 이러한 형식의 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-148">Creates an object of this type by using a specified set of property values for the object.</span></span></summary>
        <returns><span data-ttu-id="7b7f5-149">새로 만들어진 개체를 반환하거나, 개체를 만들 수 없는 경우 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-149">The newly created object, or <see langword="null" /> if the object could not be created.</span></span> <span data-ttu-id="7b7f5-150">기본 구현은 <see langword="null" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-150">The default implementation returns <see langword="null" />.</span></span>  
  
 <span data-ttu-id="7b7f5-151"><see cref="M:System.Drawing.FontConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />는 변경할 수 있는 속성을 가진 변경할 수 없는 개체를 만드는 데 유용합니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-151"><see cref="M:System.Drawing.FontConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> useful for creating non-changeable objects that have changeable properties.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~FontConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!FontConverter ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="fontConverter.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7b7f5-152">가비지 수집기에서 <see cref="T:System.Drawing.FontConverter" />를 회수하기 전에 <see cref="T:System.Drawing.FontConverter" />가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-152">Allows the <see cref="T:System.Drawing.FontConverter" /> to attempt to free resources and perform other cleanup operations before the <see cref="T:System.Drawing.FontConverter" /> is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public override bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetCreateInstanceSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCreateInstanceSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetCreateInstanceSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetCreateInstanceSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="fontConverter.GetCreateInstanceSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="7b7f5-153">추가 컨텍스트를 제공하는 형식 설명자입니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-153">A type descriptor through which additional context can be provided.</span></span></param>
        <summary><span data-ttu-id="7b7f5-154">이 개체의 값을 변경할 때 <see cref="Overload:System.Drawing.FontConverter.CreateInstance" /> 메서드를 호출하여 새 값을 만들어야 할지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-154">Determines whether changing a value on this object should require a call to the <see cref="Overload:System.Drawing.FontConverter.CreateInstance" /> method to create a new value.</span></span></summary>
        <returns><span data-ttu-id="7b7f5-155">이 개체의 속성을 하나 이상 변경할 때 <see langword="true" /> 개체를 호출해야 하면 이 메서드가 <see langword="CreateInstance" />를 반환하고 그렇지 않으면 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-155">This method returns <see langword="true" /> if the <see langword="CreateInstance" /> object should be called when a change is made to one or more properties of this object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="override this.GetProperties : System.ComponentModel.ITypeDescriptorContext * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="fontConverter.GetProperties (context, value, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="7b7f5-156">추가 컨텍스트를 제공하는 형식 설명자입니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-156">A type descriptor through which additional context can be provided.</span></span></param>
        <param name="value"><span data-ttu-id="7b7f5-157">속성을 가져올 개체의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-157">The value of the object to get the properties for.</span></span></param>
        <param name="attributes"><span data-ttu-id="7b7f5-158">속성을 설명하는 <see cref="T:System.Attribute" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-158">An array of <see cref="T:System.Attribute" /> objects that describe the properties.</span></span></param>
        <summary><span data-ttu-id="7b7f5-159">이 형식의 속성 집합을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-159">Retrieves the set of properties for this type.</span></span> <span data-ttu-id="7b7f5-160">기본적으로 형식은 반환할 속성을 갖지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-160">By default, a type does not have any properties to return.</span></span></summary>
        <returns><span data-ttu-id="7b7f5-161">이 데이터 형식에 대해 노출되어야 하는 속성의 집합을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-161">The set of properties that should be exposed for this data type.</span></span> <span data-ttu-id="7b7f5-162">노출해야 할 속성이 없으면 <see langword="null" />이 반환될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-162">If no properties should be exposed, this may return <see langword="null" />.</span></span> <span data-ttu-id="7b7f5-163">기본 구현에서는 항상 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-163">The default implementation always returns <see langword="null" />.</span></span>  
  
<span data-ttu-id="7b7f5-164">이 메서드를 간단히 구현하려면 올바른 데이터 형식에 대한 <see cref="Overload:System.ComponentModel.TypeConverter.GetProperties" /> 메서드를 호출하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-164">An easy implementation of this method can call the <see cref="Overload:System.ComponentModel.TypeConverter.GetProperties" /> method for the correct data type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public override bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPropertiesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetPropertiesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetPropertiesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="fontConverter.GetPropertiesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="7b7f5-165">추가 컨텍스트를 제공하는 형식 설명자입니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-165">A type descriptor through which additional context can be provided.</span></span></param>
        <summary><span data-ttu-id="7b7f5-166">이 개체가 속성을 지원하는지 여부를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-166">Determines whether this object supports properties.</span></span> <span data-ttu-id="7b7f5-167">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-167">The default is <see langword="false" />.</span></span></summary>
        <returns><span data-ttu-id="7b7f5-168">이 개체의 속성을 찾기 위해 <see cref="M:System.Drawing.FontConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" /> 메서드를 호출해야 하면 이 메서드는 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="7b7f5-168">This method returns <see langword="true" /> if the <see cref="M:System.Drawing.FontConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" /> method should be called to find the properties of this object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>